//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.CallingNumberAnnouncementV3 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CnaInfo", Namespace="http://schemas.datacontract.org/2004/07/CNAServiceV3")]
    [System.SerializableAttribute()]
    public partial class CnaInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnncNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PurgeDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TodateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnncNumber {
            get {
                return this.AnncNumberField;
            }
            set {
                if ((this.AnncNumberField.Equals(value) != true)) {
                    this.AnncNumberField = value;
                    this.RaisePropertyChanged("AnncNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromNumber {
            get {
                return this.FromNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FromNumberField, value) != true)) {
                    this.FromNumberField = value;
                    this.RaisePropertyChanged("FromNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fromdate {
            get {
                return this.FromdateField;
            }
            set {
                if ((this.FromdateField.Equals(value) != true)) {
                    this.FromdateField = value;
                    this.RaisePropertyChanged("Fromdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PurgeDays {
            get {
                return this.PurgeDaysField;
            }
            set {
                if ((this.PurgeDaysField.Equals(value) != true)) {
                    this.PurgeDaysField = value;
                    this.RaisePropertyChanged("PurgeDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToNumber {
            get {
                return this.ToNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ToNumberField, value) != true)) {
                    this.ToNumberField = value;
                    this.RaisePropertyChanged("ToNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Todate {
            get {
                return this.TodateField;
            }
            set {
                if ((this.TodateField.Equals(value) != true)) {
                    this.TodateField = value;
                    this.RaisePropertyChanged("Todate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CallingNumberAnnouncementV3.ICNAService")]
    public interface ICNAService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICNAService/GetAllCnaAnnouncements", ReplyAction="http://tempuri.org/ICNAService/GetAllCnaAnnouncementsResponse")]
        Common.CallingNumberAnnouncementV3.CnaInfo[] GetAllCnaAnnouncements(string loginToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICNAService/GetAllCnaAnnouncements", ReplyAction="http://tempuri.org/ICNAService/GetAllCnaAnnouncementsResponse")]
        System.Threading.Tasks.Task<Common.CallingNumberAnnouncementV3.CnaInfo[]> GetAllCnaAnnouncementsAsync(string loginToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICNAService/GetCnaNumber", ReplyAction="http://tempuri.org/ICNAService/GetCnaNumberResponse")]
        Common.CallingNumberAnnouncementV3.CnaInfo GetCnaNumber(string loginToken, string FromNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICNAService/GetCnaNumber", ReplyAction="http://tempuri.org/ICNAService/GetCnaNumberResponse")]
        System.Threading.Tasks.Task<Common.CallingNumberAnnouncementV3.CnaInfo> GetCnaNumberAsync(string loginToken, string FromNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICNAService/SetCnaNumber", ReplyAction="http://tempuri.org/ICNAService/SetCnaNumberResponse")]
        void SetCnaNumber(string loginToken, Common.CallingNumberAnnouncementV3.CnaInfo cnaNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICNAService/SetCnaNumber", ReplyAction="http://tempuri.org/ICNAService/SetCnaNumberResponse")]
        System.Threading.Tasks.Task SetCnaNumberAsync(string loginToken, Common.CallingNumberAnnouncementV3.CnaInfo cnaNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICNAService/DeleteCnaNumber", ReplyAction="http://tempuri.org/ICNAService/DeleteCnaNumberResponse")]
        void DeleteCnaNumber(string loginToken, string fromNumber, string toNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICNAService/DeleteCnaNumber", ReplyAction="http://tempuri.org/ICNAService/DeleteCnaNumberResponse")]
        System.Threading.Tasks.Task DeleteCnaNumberAsync(string loginToken, string fromNumber, string toNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICNAServiceChannel : Common.CallingNumberAnnouncementV3.ICNAService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CNAServiceClient : System.ServiceModel.ClientBase<Common.CallingNumberAnnouncementV3.ICNAService>, Common.CallingNumberAnnouncementV3.ICNAService {
        
        public CNAServiceClient() {
        }
        
        public CNAServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CNAServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CNAServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CNAServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Common.CallingNumberAnnouncementV3.CnaInfo[] GetAllCnaAnnouncements(string loginToken) {
            return base.Channel.GetAllCnaAnnouncements(loginToken);
        }
        
        public System.Threading.Tasks.Task<Common.CallingNumberAnnouncementV3.CnaInfo[]> GetAllCnaAnnouncementsAsync(string loginToken) {
            return base.Channel.GetAllCnaAnnouncementsAsync(loginToken);
        }
        
        public Common.CallingNumberAnnouncementV3.CnaInfo GetCnaNumber(string loginToken, string FromNumber) {
            return base.Channel.GetCnaNumber(loginToken, FromNumber);
        }
        
        public System.Threading.Tasks.Task<Common.CallingNumberAnnouncementV3.CnaInfo> GetCnaNumberAsync(string loginToken, string FromNumber) {
            return base.Channel.GetCnaNumberAsync(loginToken, FromNumber);
        }
        
        public void SetCnaNumber(string loginToken, Common.CallingNumberAnnouncementV3.CnaInfo cnaNumber) {
            base.Channel.SetCnaNumber(loginToken, cnaNumber);
        }
        
        public System.Threading.Tasks.Task SetCnaNumberAsync(string loginToken, Common.CallingNumberAnnouncementV3.CnaInfo cnaNumber) {
            return base.Channel.SetCnaNumberAsync(loginToken, cnaNumber);
        }
        
        public void DeleteCnaNumber(string loginToken, string fromNumber, string toNumber) {
            base.Channel.DeleteCnaNumber(loginToken, fromNumber, toNumber);
        }
        
        public System.Threading.Tasks.Task DeleteCnaNumberAsync(string loginToken, string fromNumber, string toNumber) {
            return base.Channel.DeleteCnaNumberAsync(loginToken, fromNumber, toNumber);
        }
    }
}
