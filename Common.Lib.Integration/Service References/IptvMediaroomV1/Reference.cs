//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.IptvMediaroomV1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaroomSubscriber", Namespace="http://schemas.datacontract.org/2004/07/IptvMediaroomServiceV1")]
    [System.SerializableAttribute()]
    public partial class MediaroomSubscriber : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IptvMediaroomV1.TimezoneMediaroom> AccountTimeZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreditLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DVREnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DeviceLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EgressHDStreamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EgressSDStreamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FipsCodeCountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FipsCodeStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HDStreamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IngressHDStreamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IngressSDStreamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordingDeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SDStreamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IptvMediaroomV1.StbType[] SetTopBoxesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriberContactNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriberGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SubscriberPackagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IptvMediaroomV1.TimezoneMediaroom> AccountTimeZone {
            get {
                return this.AccountTimeZoneField;
            }
            set {
                if ((this.AccountTimeZoneField.Equals(value) != true)) {
                    this.AccountTimeZoneField = value;
                    this.RaisePropertyChanged("AccountTimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreditLimit {
            get {
                return this.CreditLimitField;
            }
            set {
                if ((this.CreditLimitField.Equals(value) != true)) {
                    this.CreditLimitField = value;
                    this.RaisePropertyChanged("CreditLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DVREnabled {
            get {
                return this.DVREnabledField;
            }
            set {
                if ((this.DVREnabledField.Equals(value) != true)) {
                    this.DVREnabledField = value;
                    this.RaisePropertyChanged("DVREnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DeviceLimit {
            get {
                return this.DeviceLimitField;
            }
            set {
                if ((this.DeviceLimitField.Equals(value) != true)) {
                    this.DeviceLimitField = value;
                    this.RaisePropertyChanged("DeviceLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EgressHDStreams {
            get {
                return this.EgressHDStreamsField;
            }
            set {
                if ((this.EgressHDStreamsField.Equals(value) != true)) {
                    this.EgressHDStreamsField = value;
                    this.RaisePropertyChanged("EgressHDStreams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EgressSDStreams {
            get {
                return this.EgressSDStreamsField;
            }
            set {
                if ((this.EgressSDStreamsField.Equals(value) != true)) {
                    this.EgressSDStreamsField = value;
                    this.RaisePropertyChanged("EgressSDStreams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FipsCodeCounty {
            get {
                return this.FipsCodeCountyField;
            }
            set {
                if ((this.FipsCodeCountyField.Equals(value) != true)) {
                    this.FipsCodeCountyField = value;
                    this.RaisePropertyChanged("FipsCodeCounty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FipsCodeState {
            get {
                return this.FipsCodeStateField;
            }
            set {
                if ((this.FipsCodeStateField.Equals(value) != true)) {
                    this.FipsCodeStateField = value;
                    this.RaisePropertyChanged("FipsCodeState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HDStreams {
            get {
                return this.HDStreamsField;
            }
            set {
                if ((this.HDStreamsField.Equals(value) != true)) {
                    this.HDStreamsField = value;
                    this.RaisePropertyChanged("HDStreams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IngressHDStreams {
            get {
                return this.IngressHDStreamsField;
            }
            set {
                if ((this.IngressHDStreamsField.Equals(value) != true)) {
                    this.IngressHDStreamsField = value;
                    this.RaisePropertyChanged("IngressHDStreams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IngressSDStreams {
            get {
                return this.IngressSDStreamsField;
            }
            set {
                if ((this.IngressSDStreamsField.Equals(value) != true)) {
                    this.IngressSDStreamsField = value;
                    this.RaisePropertyChanged("IngressSDStreams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginID {
            get {
                return this.LoginIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIDField, value) != true)) {
                    this.LoginIDField = value;
                    this.RaisePropertyChanged("LoginID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordingDeviceId {
            get {
                return this.RecordingDeviceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordingDeviceIdField, value) != true)) {
                    this.RecordingDeviceIdField = value;
                    this.RaisePropertyChanged("RecordingDeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SDStreams {
            get {
                return this.SDStreamsField;
            }
            set {
                if ((this.SDStreamsField.Equals(value) != true)) {
                    this.SDStreamsField = value;
                    this.RaisePropertyChanged("SDStreams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceReference {
            get {
                return this.ServiceReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceReferenceField, value) != true)) {
                    this.ServiceReferenceField = value;
                    this.RaisePropertyChanged("ServiceReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IptvMediaroomV1.StbType[] SetTopBoxes {
            get {
                return this.SetTopBoxesField;
            }
            set {
                if ((object.ReferenceEquals(this.SetTopBoxesField, value) != true)) {
                    this.SetTopBoxesField = value;
                    this.RaisePropertyChanged("SetTopBoxes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberContactNumber {
            get {
                return this.SubscriberContactNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberContactNumberField, value) != true)) {
                    this.SubscriberContactNumberField = value;
                    this.RaisePropertyChanged("SubscriberContactNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberGuid {
            get {
                return this.SubscriberGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberGuidField, value) != true)) {
                    this.SubscriberGuidField = value;
                    this.RaisePropertyChanged("SubscriberGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberName {
            get {
                return this.SubscriberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberNameField, value) != true)) {
                    this.SubscriberNameField = value;
                    this.RaisePropertyChanged("SubscriberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SubscriberPackages {
            get {
                return this.SubscriberPackagesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberPackagesField, value) != true)) {
                    this.SubscriberPackagesField = value;
                    this.RaisePropertyChanged("SubscriberPackages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimezoneMediaroom", Namespace="http://schemas.datacontract.org/2004/07/IptvMediaroomServiceV1")]
    public enum TimezoneMediaroom : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_1100_MidwayIsland_Samoa = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_1000_Hawaii = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0900_Alaska = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0800_PacificTimeUSAndCanada_Tijuana = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0700_Arizona = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0700_Chihuahua_LaPaz_Mazatlan = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0700_MountainTimeUSAndCanada = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0600_CentralAmerica = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0600_CentralTimeUSAndCanada = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0600_Guadalajara_MexicoCity_Monterrey = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0600_Saskatchewan = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0500_Bogota_Lima_Quito = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0500_EasternTimeUSAndCanada = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0500_IndianaEast = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0400_AtlanticTimeCanada = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0400_Caracas_LaPaz = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0400_Santiago = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0330_Newfoundland = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0300_Brasilia = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0300_Buenos_Aires_Georgetown = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0300_Greenland = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0200_MidAtlantic = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0100_Azores = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0100_Cape_Verde_Is = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Casablanca_Monrovia = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_GreenwichMeanTime_Dublin_Edinburgh_Lisbon_London = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0100_Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0100_Belgrade_Bratislava_Budapest_Ljubljana_Prague = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0100_Brussels_Copenhagen_Madrid_Paris = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0100_Sarajevo_Skopje_Warsaw_Zagreb = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0100_WestCentralAfrica = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0200_Athens_Beirut_Istanbul_Minsk = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0200_Bucharest = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0200_Cairo = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0200_Harare_Pretoria = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0200_Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0200_Jerusalem = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0300_Baghdad = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0300_Kuwait_Riyadh = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0300_Moscow_StPetersbug_Volgograd = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0300_Nairobi = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0330_Tehran = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0400_AbuDhabi_Muscat = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0400_Baku_Tbilsi_Yerevan = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0430_Kabul = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0500_Ekaterinburg = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0500_Islamabad_Karachi_Tashkent = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0530_Chennai_Kolkata_Mumbai_NewDelhi = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0545_Kathmandu = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0600_Almaty_Novosibirsk = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0600_Astana_Dhaka = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0600_SriJayawardenepura = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0630_Rangoon = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0700_Bangkok_Hanoi_Jakarta = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0700_Kransnoyarsk = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0800_Beijing_Chongqing_HongKong_Urumqi = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0800_Irkutsk_UlaanBataar = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0800_KualaLumpur_Singapore = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0800_Perth = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0800_Taipei = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0900_Osaka_Sapporo_Tokyo = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0900_Seoul = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0900_Yakutsk = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0930_Adelaide = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_0930_Darwin = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_1000_Brisbane = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_1000_Canberra_Melbourne_Sydney = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_1000_Guam_PortMoresby = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_1000_Hobart = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_1000_Vladivostok = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_1100_Magadan_SolomonIs_NewCaledonia = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_1200_Auckland_Wellington = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_1200_Fiji_Kamchatka_MarshallIs = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Plus_1300_Nuku_alofa = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GMT_Minus_0800_Tijuana_Baja_California = 74,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StbType", Namespace="http://schemas.datacontract.org/2004/07/IptvMediaroomServiceV1")]
    [System.SerializableAttribute()]
    public partial class StbType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FriendlyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MacAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIdField, value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalId {
            get {
                return this.ExternalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIdField, value) != true)) {
                    this.ExternalIdField = value;
                    this.RaisePropertyChanged("ExternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FriendlyName {
            get {
                return this.FriendlyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendlyNameField, value) != true)) {
                    this.FriendlyNameField = value;
                    this.RaisePropertyChanged("FriendlyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MacAddress {
            get {
                return this.MacAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.MacAddressField, value) != true)) {
                    this.MacAddressField = value;
                    this.RaisePropertyChanged("MacAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceReference {
            get {
                return this.ServiceReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceReferenceField, value) != true)) {
                    this.ServiceReferenceField = value;
                    this.RaisePropertyChanged("ServiceReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IptvMediaroomV1.IIptvMediaroom")]
    public interface IIptvMediaroom {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/InsertAccount", ReplyAction="http://tempuri.org/IIptvMediaroom/InsertAccountResponse")]
        void InsertAccount(string loginToken, Common.IptvMediaroomV1.MediaroomSubscriber data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/InsertAccount", ReplyAction="http://tempuri.org/IIptvMediaroom/InsertAccountResponse")]
        System.Threading.Tasks.Task InsertAccountAsync(string loginToken, Common.IptvMediaroomV1.MediaroomSubscriber data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/EditAccount", ReplyAction="http://tempuri.org/IIptvMediaroom/EditAccountResponse")]
        void EditAccount(string loginToken, Common.IptvMediaroomV1.MediaroomSubscriber data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/EditAccount", ReplyAction="http://tempuri.org/IIptvMediaroom/EditAccountResponse")]
        System.Threading.Tasks.Task EditAccountAsync(string loginToken, Common.IptvMediaroomV1.MediaroomSubscriber data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/UpdateAccountPassword", ReplyAction="http://tempuri.org/IIptvMediaroom/UpdateAccountPasswordResponse")]
        void UpdateAccountPassword(string loginToken, string serviceReference, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/UpdateAccountPassword", ReplyAction="http://tempuri.org/IIptvMediaroom/UpdateAccountPasswordResponse")]
        System.Threading.Tasks.Task UpdateAccountPasswordAsync(string loginToken, string serviceReference, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/DeleteAccount", ReplyAction="http://tempuri.org/IIptvMediaroom/DeleteAccountResponse")]
        void DeleteAccount(string loginToken, Common.IptvMediaroomV1.MediaroomSubscriber data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/DeleteAccount", ReplyAction="http://tempuri.org/IIptvMediaroom/DeleteAccountResponse")]
        System.Threading.Tasks.Task DeleteAccountAsync(string loginToken, Common.IptvMediaroomV1.MediaroomSubscriber data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/GetAccountByServiceReference", ReplyAction="http://tempuri.org/IIptvMediaroom/GetAccountByServiceReferenceResponse")]
        Common.IptvMediaroomV1.MediaroomSubscriber GetAccountByServiceReference(string loginToken, string serviceReference, bool loadStbs, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/GetAccountByServiceReference", ReplyAction="http://tempuri.org/IIptvMediaroom/GetAccountByServiceReferenceResponse")]
        System.Threading.Tasks.Task<Common.IptvMediaroomV1.MediaroomSubscriber> GetAccountByServiceReferenceAsync(string loginToken, string serviceReference, bool loadStbs, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/GetAccountBySubscriberGuid", ReplyAction="http://tempuri.org/IIptvMediaroom/GetAccountBySubscriberGuidResponse")]
        Common.IptvMediaroomV1.MediaroomSubscriber GetAccountBySubscriberGuid(string loginToken, string subscriberGuid, bool loadStbs, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/GetAccountBySubscriberGuid", ReplyAction="http://tempuri.org/IIptvMediaroom/GetAccountBySubscriberGuidResponse")]
        System.Threading.Tasks.Task<Common.IptvMediaroomV1.MediaroomSubscriber> GetAccountBySubscriberGuidAsync(string loginToken, string subscriberGuid, bool loadStbs, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/ReadAvailablePackages", ReplyAction="http://tempuri.org/IIptvMediaroom/ReadAvailablePackagesResponse")]
        string[] ReadAvailablePackages(string loginToken, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/ReadAvailablePackages", ReplyAction="http://tempuri.org/IIptvMediaroom/ReadAvailablePackagesResponse")]
        System.Threading.Tasks.Task<string[]> ReadAvailablePackagesAsync(string loginToken, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/AddPackageToAccount", ReplyAction="http://tempuri.org/IIptvMediaroom/AddPackageToAccountResponse")]
        void AddPackageToAccount(string loginToken, string serviceReference, string[] packages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/AddPackageToAccount", ReplyAction="http://tempuri.org/IIptvMediaroom/AddPackageToAccountResponse")]
        System.Threading.Tasks.Task AddPackageToAccountAsync(string loginToken, string serviceReference, string[] packages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/RemovePackageFromAccount", ReplyAction="http://tempuri.org/IIptvMediaroom/RemovePackageFromAccountResponse")]
        void RemovePackageFromAccount(string loginToken, string serviceReference, string[] packages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/RemovePackageFromAccount", ReplyAction="http://tempuri.org/IIptvMediaroom/RemovePackageFromAccountResponse")]
        System.Threading.Tasks.Task RemovePackageFromAccountAsync(string loginToken, string serviceReference, string[] packages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/GetDeviceByDeviceId", ReplyAction="http://tempuri.org/IIptvMediaroom/GetDeviceByDeviceIdResponse")]
        Common.IptvMediaroomV1.StbType GetDeviceByDeviceId(string loginToken, string deviceId, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/GetDeviceByDeviceId", ReplyAction="http://tempuri.org/IIptvMediaroom/GetDeviceByDeviceIdResponse")]
        System.Threading.Tasks.Task<Common.IptvMediaroomV1.StbType> GetDeviceByDeviceIdAsync(string loginToken, string deviceId, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/EditDevice", ReplyAction="http://tempuri.org/IIptvMediaroom/EditDeviceResponse")]
        void EditDevice(string loginToken, Common.IptvMediaroomV1.StbType data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/EditDevice", ReplyAction="http://tempuri.org/IIptvMediaroom/EditDeviceResponse")]
        System.Threading.Tasks.Task EditDeviceAsync(string loginToken, Common.IptvMediaroomV1.StbType data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/GetAccountDevicesLight", ReplyAction="http://tempuri.org/IIptvMediaroom/GetAccountDevicesLightResponse")]
        string[] GetAccountDevicesLight(string loginToken, string serviceReference, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/GetAccountDevicesLight", ReplyAction="http://tempuri.org/IIptvMediaroom/GetAccountDevicesLightResponse")]
        System.Threading.Tasks.Task<string[]> GetAccountDevicesLightAsync(string loginToken, string serviceReference, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/GetAccountDevicesFull", ReplyAction="http://tempuri.org/IIptvMediaroom/GetAccountDevicesFullResponse")]
        Common.IptvMediaroomV1.StbType[] GetAccountDevicesFull(string loginToken, string serviceReference, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/GetAccountDevicesFull", ReplyAction="http://tempuri.org/IIptvMediaroom/GetAccountDevicesFullResponse")]
        System.Threading.Tasks.Task<Common.IptvMediaroomV1.StbType[]> GetAccountDevicesFullAsync(string loginToken, string serviceReference, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/UpdateSTBParentalPin", ReplyAction="http://tempuri.org/IIptvMediaroom/UpdateSTBParentalPinResponse")]
        void UpdateSTBParentalPin(string loginToken, string deviceId, string oldPin, string newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/UpdateSTBParentalPin", ReplyAction="http://tempuri.org/IIptvMediaroom/UpdateSTBParentalPinResponse")]
        System.Threading.Tasks.Task UpdateSTBParentalPinAsync(string loginToken, string deviceId, string oldPin, string newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/UpdateSTBAdultContentPin", ReplyAction="http://tempuri.org/IIptvMediaroom/UpdateSTBAdultContentPinResponse")]
        void UpdateSTBAdultContentPin(string loginToken, string deviceId, string oldPin, string newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/UpdateSTBAdultContentPin", ReplyAction="http://tempuri.org/IIptvMediaroom/UpdateSTBAdultContentPinResponse")]
        System.Threading.Tasks.Task UpdateSTBAdultContentPinAsync(string loginToken, string deviceId, string oldPin, string newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/UpdateSTBPurchaseRentalPin", ReplyAction="http://tempuri.org/IIptvMediaroom/UpdateSTBPurchaseRentalPinResponse")]
        void UpdateSTBPurchaseRentalPin(string loginToken, string deviceId, string oldPin, string newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/UpdateSTBPurchaseRentalPin", ReplyAction="http://tempuri.org/IIptvMediaroom/UpdateSTBPurchaseRentalPinResponse")]
        System.Threading.Tasks.Task UpdateSTBPurchaseRentalPinAsync(string loginToken, string deviceId, string oldPin, string newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/DeleteSTBParentalPin", ReplyAction="http://tempuri.org/IIptvMediaroom/DeleteSTBParentalPinResponse")]
        void DeleteSTBParentalPin(string loginToken, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/DeleteSTBParentalPin", ReplyAction="http://tempuri.org/IIptvMediaroom/DeleteSTBParentalPinResponse")]
        System.Threading.Tasks.Task DeleteSTBParentalPinAsync(string loginToken, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/DeleteSTBAdultContentPin", ReplyAction="http://tempuri.org/IIptvMediaroom/DeleteSTBAdultContentPinResponse")]
        void DeleteSTBAdultContentPin(string loginToken, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/DeleteSTBAdultContentPin", ReplyAction="http://tempuri.org/IIptvMediaroom/DeleteSTBAdultContentPinResponse")]
        System.Threading.Tasks.Task DeleteSTBAdultContentPinAsync(string loginToken, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/DeleteSTBPurchaseRentalPin", ReplyAction="http://tempuri.org/IIptvMediaroom/DeleteSTBPurchaseRentalPinResponse")]
        void DeleteSTBPurchaseRentalPin(string loginToken, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/DeleteSTBPurchaseRentalPin", ReplyAction="http://tempuri.org/IIptvMediaroom/DeleteSTBPurchaseRentalPinResponse")]
        System.Threading.Tasks.Task DeleteSTBPurchaseRentalPinAsync(string loginToken, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/ResetSTBParentalPin", ReplyAction="http://tempuri.org/IIptvMediaroom/ResetSTBParentalPinResponse")]
        void ResetSTBParentalPin(string loginToken, string deviceId, string newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/ResetSTBParentalPin", ReplyAction="http://tempuri.org/IIptvMediaroom/ResetSTBParentalPinResponse")]
        System.Threading.Tasks.Task ResetSTBParentalPinAsync(string loginToken, string deviceId, string newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/ResetSTBAdultContentPin", ReplyAction="http://tempuri.org/IIptvMediaroom/ResetSTBAdultContentPinResponse")]
        void ResetSTBAdultContentPin(string loginToken, string deviceId, string newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/ResetSTBAdultContentPin", ReplyAction="http://tempuri.org/IIptvMediaroom/ResetSTBAdultContentPinResponse")]
        System.Threading.Tasks.Task ResetSTBAdultContentPinAsync(string loginToken, string deviceId, string newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/ResetSTBPurchaseRentalPin", ReplyAction="http://tempuri.org/IIptvMediaroom/ResetSTBPurchaseRentalPinResponse")]
        void ResetSTBPurchaseRentalPin(string loginToken, string deviceId, string newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/ResetSTBPurchaseRentalPin", ReplyAction="http://tempuri.org/IIptvMediaroom/ResetSTBPurchaseRentalPinResponse")]
        System.Threading.Tasks.Task ResetSTBPurchaseRentalPinAsync(string loginToken, string deviceId, string newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/RemoveStb", ReplyAction="http://tempuri.org/IIptvMediaroom/RemoveStbResponse")]
        void RemoveStb(string loginToken, string serviceReference, string deviceId, string deviceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/RemoveStb", ReplyAction="http://tempuri.org/IIptvMediaroom/RemoveStbResponse")]
        System.Threading.Tasks.Task RemoveStbAsync(string loginToken, string serviceReference, string deviceId, string deviceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/ResetAndUpdateAccountCreditLimit", ReplyAction="http://tempuri.org/IIptvMediaroom/ResetAndUpdateAccountCreditLimitResponse")]
        void ResetAndUpdateAccountCreditLimit(string loginToken, string serviceReference, int creditLimit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvMediaroom/ResetAndUpdateAccountCreditLimit", ReplyAction="http://tempuri.org/IIptvMediaroom/ResetAndUpdateAccountCreditLimitResponse")]
        System.Threading.Tasks.Task ResetAndUpdateAccountCreditLimitAsync(string loginToken, string serviceReference, int creditLimit);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIptvMediaroomChannel : Common.IptvMediaroomV1.IIptvMediaroom, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IptvMediaroomClient : System.ServiceModel.ClientBase<Common.IptvMediaroomV1.IIptvMediaroom>, Common.IptvMediaroomV1.IIptvMediaroom {
        
        public IptvMediaroomClient() {
        }
        
        public IptvMediaroomClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IptvMediaroomClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IptvMediaroomClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IptvMediaroomClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void InsertAccount(string loginToken, Common.IptvMediaroomV1.MediaroomSubscriber data) {
            base.Channel.InsertAccount(loginToken, data);
        }
        
        public System.Threading.Tasks.Task InsertAccountAsync(string loginToken, Common.IptvMediaroomV1.MediaroomSubscriber data) {
            return base.Channel.InsertAccountAsync(loginToken, data);
        }
        
        public void EditAccount(string loginToken, Common.IptvMediaroomV1.MediaroomSubscriber data) {
            base.Channel.EditAccount(loginToken, data);
        }
        
        public System.Threading.Tasks.Task EditAccountAsync(string loginToken, Common.IptvMediaroomV1.MediaroomSubscriber data) {
            return base.Channel.EditAccountAsync(loginToken, data);
        }
        
        public void UpdateAccountPassword(string loginToken, string serviceReference, string password) {
            base.Channel.UpdateAccountPassword(loginToken, serviceReference, password);
        }
        
        public System.Threading.Tasks.Task UpdateAccountPasswordAsync(string loginToken, string serviceReference, string password) {
            return base.Channel.UpdateAccountPasswordAsync(loginToken, serviceReference, password);
        }
        
        public void DeleteAccount(string loginToken, Common.IptvMediaroomV1.MediaroomSubscriber data) {
            base.Channel.DeleteAccount(loginToken, data);
        }
        
        public System.Threading.Tasks.Task DeleteAccountAsync(string loginToken, Common.IptvMediaroomV1.MediaroomSubscriber data) {
            return base.Channel.DeleteAccountAsync(loginToken, data);
        }
        
        public Common.IptvMediaroomV1.MediaroomSubscriber GetAccountByServiceReference(string loginToken, string serviceReference, bool loadStbs, bool apMaxOnly) {
            return base.Channel.GetAccountByServiceReference(loginToken, serviceReference, loadStbs, apMaxOnly);
        }
        
        public System.Threading.Tasks.Task<Common.IptvMediaroomV1.MediaroomSubscriber> GetAccountByServiceReferenceAsync(string loginToken, string serviceReference, bool loadStbs, bool apMaxOnly) {
            return base.Channel.GetAccountByServiceReferenceAsync(loginToken, serviceReference, loadStbs, apMaxOnly);
        }
        
        public Common.IptvMediaroomV1.MediaroomSubscriber GetAccountBySubscriberGuid(string loginToken, string subscriberGuid, bool loadStbs, bool apMaxOnly) {
            return base.Channel.GetAccountBySubscriberGuid(loginToken, subscriberGuid, loadStbs, apMaxOnly);
        }
        
        public System.Threading.Tasks.Task<Common.IptvMediaroomV1.MediaroomSubscriber> GetAccountBySubscriberGuidAsync(string loginToken, string subscriberGuid, bool loadStbs, bool apMaxOnly) {
            return base.Channel.GetAccountBySubscriberGuidAsync(loginToken, subscriberGuid, loadStbs, apMaxOnly);
        }
        
        public string[] ReadAvailablePackages(string loginToken, bool apMaxOnly) {
            return base.Channel.ReadAvailablePackages(loginToken, apMaxOnly);
        }
        
        public System.Threading.Tasks.Task<string[]> ReadAvailablePackagesAsync(string loginToken, bool apMaxOnly) {
            return base.Channel.ReadAvailablePackagesAsync(loginToken, apMaxOnly);
        }
        
        public void AddPackageToAccount(string loginToken, string serviceReference, string[] packages) {
            base.Channel.AddPackageToAccount(loginToken, serviceReference, packages);
        }
        
        public System.Threading.Tasks.Task AddPackageToAccountAsync(string loginToken, string serviceReference, string[] packages) {
            return base.Channel.AddPackageToAccountAsync(loginToken, serviceReference, packages);
        }
        
        public void RemovePackageFromAccount(string loginToken, string serviceReference, string[] packages) {
            base.Channel.RemovePackageFromAccount(loginToken, serviceReference, packages);
        }
        
        public System.Threading.Tasks.Task RemovePackageFromAccountAsync(string loginToken, string serviceReference, string[] packages) {
            return base.Channel.RemovePackageFromAccountAsync(loginToken, serviceReference, packages);
        }
        
        public Common.IptvMediaroomV1.StbType GetDeviceByDeviceId(string loginToken, string deviceId, bool apMaxOnly) {
            return base.Channel.GetDeviceByDeviceId(loginToken, deviceId, apMaxOnly);
        }
        
        public System.Threading.Tasks.Task<Common.IptvMediaroomV1.StbType> GetDeviceByDeviceIdAsync(string loginToken, string deviceId, bool apMaxOnly) {
            return base.Channel.GetDeviceByDeviceIdAsync(loginToken, deviceId, apMaxOnly);
        }
        
        public void EditDevice(string loginToken, Common.IptvMediaroomV1.StbType data) {
            base.Channel.EditDevice(loginToken, data);
        }
        
        public System.Threading.Tasks.Task EditDeviceAsync(string loginToken, Common.IptvMediaroomV1.StbType data) {
            return base.Channel.EditDeviceAsync(loginToken, data);
        }
        
        public string[] GetAccountDevicesLight(string loginToken, string serviceReference, bool apMaxOnly) {
            return base.Channel.GetAccountDevicesLight(loginToken, serviceReference, apMaxOnly);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAccountDevicesLightAsync(string loginToken, string serviceReference, bool apMaxOnly) {
            return base.Channel.GetAccountDevicesLightAsync(loginToken, serviceReference, apMaxOnly);
        }
        
        public Common.IptvMediaroomV1.StbType[] GetAccountDevicesFull(string loginToken, string serviceReference, bool apMaxOnly) {
            return base.Channel.GetAccountDevicesFull(loginToken, serviceReference, apMaxOnly);
        }
        
        public System.Threading.Tasks.Task<Common.IptvMediaroomV1.StbType[]> GetAccountDevicesFullAsync(string loginToken, string serviceReference, bool apMaxOnly) {
            return base.Channel.GetAccountDevicesFullAsync(loginToken, serviceReference, apMaxOnly);
        }
        
        public void UpdateSTBParentalPin(string loginToken, string deviceId, string oldPin, string newPin) {
            base.Channel.UpdateSTBParentalPin(loginToken, deviceId, oldPin, newPin);
        }
        
        public System.Threading.Tasks.Task UpdateSTBParentalPinAsync(string loginToken, string deviceId, string oldPin, string newPin) {
            return base.Channel.UpdateSTBParentalPinAsync(loginToken, deviceId, oldPin, newPin);
        }
        
        public void UpdateSTBAdultContentPin(string loginToken, string deviceId, string oldPin, string newPin) {
            base.Channel.UpdateSTBAdultContentPin(loginToken, deviceId, oldPin, newPin);
        }
        
        public System.Threading.Tasks.Task UpdateSTBAdultContentPinAsync(string loginToken, string deviceId, string oldPin, string newPin) {
            return base.Channel.UpdateSTBAdultContentPinAsync(loginToken, deviceId, oldPin, newPin);
        }
        
        public void UpdateSTBPurchaseRentalPin(string loginToken, string deviceId, string oldPin, string newPin) {
            base.Channel.UpdateSTBPurchaseRentalPin(loginToken, deviceId, oldPin, newPin);
        }
        
        public System.Threading.Tasks.Task UpdateSTBPurchaseRentalPinAsync(string loginToken, string deviceId, string oldPin, string newPin) {
            return base.Channel.UpdateSTBPurchaseRentalPinAsync(loginToken, deviceId, oldPin, newPin);
        }
        
        public void DeleteSTBParentalPin(string loginToken, string deviceId) {
            base.Channel.DeleteSTBParentalPin(loginToken, deviceId);
        }
        
        public System.Threading.Tasks.Task DeleteSTBParentalPinAsync(string loginToken, string deviceId) {
            return base.Channel.DeleteSTBParentalPinAsync(loginToken, deviceId);
        }
        
        public void DeleteSTBAdultContentPin(string loginToken, string deviceId) {
            base.Channel.DeleteSTBAdultContentPin(loginToken, deviceId);
        }
        
        public System.Threading.Tasks.Task DeleteSTBAdultContentPinAsync(string loginToken, string deviceId) {
            return base.Channel.DeleteSTBAdultContentPinAsync(loginToken, deviceId);
        }
        
        public void DeleteSTBPurchaseRentalPin(string loginToken, string deviceId) {
            base.Channel.DeleteSTBPurchaseRentalPin(loginToken, deviceId);
        }
        
        public System.Threading.Tasks.Task DeleteSTBPurchaseRentalPinAsync(string loginToken, string deviceId) {
            return base.Channel.DeleteSTBPurchaseRentalPinAsync(loginToken, deviceId);
        }
        
        public void ResetSTBParentalPin(string loginToken, string deviceId, string newPin) {
            base.Channel.ResetSTBParentalPin(loginToken, deviceId, newPin);
        }
        
        public System.Threading.Tasks.Task ResetSTBParentalPinAsync(string loginToken, string deviceId, string newPin) {
            return base.Channel.ResetSTBParentalPinAsync(loginToken, deviceId, newPin);
        }
        
        public void ResetSTBAdultContentPin(string loginToken, string deviceId, string newPin) {
            base.Channel.ResetSTBAdultContentPin(loginToken, deviceId, newPin);
        }
        
        public System.Threading.Tasks.Task ResetSTBAdultContentPinAsync(string loginToken, string deviceId, string newPin) {
            return base.Channel.ResetSTBAdultContentPinAsync(loginToken, deviceId, newPin);
        }
        
        public void ResetSTBPurchaseRentalPin(string loginToken, string deviceId, string newPin) {
            base.Channel.ResetSTBPurchaseRentalPin(loginToken, deviceId, newPin);
        }
        
        public System.Threading.Tasks.Task ResetSTBPurchaseRentalPinAsync(string loginToken, string deviceId, string newPin) {
            return base.Channel.ResetSTBPurchaseRentalPinAsync(loginToken, deviceId, newPin);
        }
        
        public void RemoveStb(string loginToken, string serviceReference, string deviceId, string deviceName) {
            base.Channel.RemoveStb(loginToken, serviceReference, deviceId, deviceName);
        }
        
        public System.Threading.Tasks.Task RemoveStbAsync(string loginToken, string serviceReference, string deviceId, string deviceName) {
            return base.Channel.RemoveStbAsync(loginToken, serviceReference, deviceId, deviceName);
        }
        
        public void ResetAndUpdateAccountCreditLimit(string loginToken, string serviceReference, int creditLimit) {
            base.Channel.ResetAndUpdateAccountCreditLimit(loginToken, serviceReference, creditLimit);
        }
        
        public System.Threading.Tasks.Task ResetAndUpdateAccountCreditLimitAsync(string loginToken, string serviceReference, int creditLimit) {
            return base.Channel.ResetAndUpdateAccountCreditLimitAsync(loginToken, serviceReference, creditLimit);
        }
    }
}
