//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.SubscriberV4 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriberType", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    [System.SerializableAttribute()]
    public partial class SubscriberType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.SubscriberV4.AddressInfoType[] AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingEnvironmentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingServiceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DialByNameDigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.SubscriberV4.InternetAccessType InternetAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentSubscriberIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.SubscriberV4.PlacementType_e PlacementTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.SubscriberV4.PlacementTypeEx_e> PlacementType2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.SubscriberV4.ServiceInfoType ServiceInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.SubscriberV4.ServiceInfoType[] ServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriberDefaultPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriberEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriberGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.SubscriberV4.Timezone_e SubscriberTimezoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.SubscriberV4.AddressInfoType[] Addresses {
            get {
                return this.AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesField, value) != true)) {
                    this.AddressesField = value;
                    this.RaisePropertyChanged("Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingAccountNumber {
            get {
                return this.BillingAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingAccountNumberField, value) != true)) {
                    this.BillingAccountNumberField = value;
                    this.RaisePropertyChanged("BillingAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingEnvironmentCode {
            get {
                return this.BillingEnvironmentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingEnvironmentCodeField, value) != true)) {
                    this.BillingEnvironmentCodeField = value;
                    this.RaisePropertyChanged("BillingEnvironmentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingServiceAddress {
            get {
                return this.BillingServiceAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingServiceAddressField, value) != true)) {
                    this.BillingServiceAddressField = value;
                    this.RaisePropertyChanged("BillingServiceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DialByNameDigits {
            get {
                return this.DialByNameDigitsField;
            }
            set {
                if ((object.ReferenceEquals(this.DialByNameDigitsField, value) != true)) {
                    this.DialByNameDigitsField = value;
                    this.RaisePropertyChanged("DialByNameDigits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.SubscriberV4.InternetAccessType InternetAccess {
            get {
                return this.InternetAccessField;
            }
            set {
                if ((object.ReferenceEquals(this.InternetAccessField, value) != true)) {
                    this.InternetAccessField = value;
                    this.RaisePropertyChanged("InternetAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUpdateTime {
            get {
                return this.LastUpdateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdateTimeField, value) != true)) {
                    this.LastUpdateTimeField = value;
                    this.RaisePropertyChanged("LastUpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUpdatedBy {
            get {
                return this.LastUpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByField, value) != true)) {
                    this.LastUpdatedByField = value;
                    this.RaisePropertyChanged("LastUpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentSubscriberId {
            get {
                return this.ParentSubscriberIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentSubscriberIdField, value) != true)) {
                    this.ParentSubscriberIdField = value;
                    this.RaisePropertyChanged("ParentSubscriberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.SubscriberV4.PlacementType_e PlacementType {
            get {
                return this.PlacementTypeField;
            }
            set {
                if ((this.PlacementTypeField.Equals(value) != true)) {
                    this.PlacementTypeField = value;
                    this.RaisePropertyChanged("PlacementType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.SubscriberV4.PlacementTypeEx_e> PlacementType2 {
            get {
                return this.PlacementType2Field;
            }
            set {
                if ((this.PlacementType2Field.Equals(value) != true)) {
                    this.PlacementType2Field = value;
                    this.RaisePropertyChanged("PlacementType2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.SubscriberV4.ServiceInfoType ServiceInformation {
            get {
                return this.ServiceInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceInformationField, value) != true)) {
                    this.ServiceInformationField = value;
                    this.RaisePropertyChanged("ServiceInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.SubscriberV4.ServiceInfoType[] Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberDefaultPhoneNumber {
            get {
                return this.SubscriberDefaultPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberDefaultPhoneNumberField, value) != true)) {
                    this.SubscriberDefaultPhoneNumberField = value;
                    this.RaisePropertyChanged("SubscriberDefaultPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberEmail {
            get {
                return this.SubscriberEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberEmailField, value) != true)) {
                    this.SubscriberEmailField = value;
                    this.RaisePropertyChanged("SubscriberEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberGuid {
            get {
                return this.SubscriberGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberGuidField, value) != true)) {
                    this.SubscriberGuidField = value;
                    this.RaisePropertyChanged("SubscriberGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberName {
            get {
                return this.SubscriberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberNameField, value) != true)) {
                    this.SubscriberNameField = value;
                    this.RaisePropertyChanged("SubscriberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.SubscriberV4.Timezone_e SubscriberTimezone {
            get {
                return this.SubscriberTimezoneField;
            }
            set {
                if ((this.SubscriberTimezoneField.Equals(value) != true)) {
                    this.SubscriberTimezoneField = value;
                    this.RaisePropertyChanged("SubscriberTimezone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InternetAccessType", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    [System.SerializableAttribute()]
    public partial class InternetAccessType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MobileEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServiceEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MobileEnabled {
            get {
                return this.MobileEnabledField;
            }
            set {
                if ((this.MobileEnabledField.Equals(value) != true)) {
                    this.MobileEnabledField = value;
                    this.RaisePropertyChanged("MobileEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServiceEnabled {
            get {
                return this.ServiceEnabledField;
            }
            set {
                if ((this.ServiceEnabledField.Equals(value) != true)) {
                    this.ServiceEnabledField = value;
                    this.RaisePropertyChanged("ServiceEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceInfoType", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    [System.SerializableAttribute()]
    public partial class ServiceInfoType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingServiceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.SubscriberV4.ServiceType_e ServiceTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApSystemId {
            get {
                return this.ApSystemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ApSystemIdField, value) != true)) {
                    this.ApSystemIdField = value;
                    this.RaisePropertyChanged("ApSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingServiceAddress {
            get {
                return this.BillingServiceAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingServiceAddressField, value) != true)) {
                    this.BillingServiceAddressField = value;
                    this.RaisePropertyChanged("BillingServiceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingServiceID {
            get {
                return this.BillingServiceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingServiceIDField, value) != true)) {
                    this.BillingServiceIDField = value;
                    this.RaisePropertyChanged("BillingServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceGuid {
            get {
                return this.ServiceGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceGuidField, value) != true)) {
                    this.ServiceGuidField = value;
                    this.RaisePropertyChanged("ServiceGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.SubscriberV4.ServiceType_e ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((this.ServiceTypeField.Equals(value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressInfoType", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    [System.SerializableAttribute()]
    public partial class AddressInfoType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.SubscriberV4.AddressType_e AddressTypeFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressField {
            get {
                return this.AddressFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressFieldField, value) != true)) {
                    this.AddressFieldField = value;
                    this.RaisePropertyChanged("AddressField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.SubscriberV4.AddressType_e AddressTypeField {
            get {
                return this.AddressTypeFieldField;
            }
            set {
                if ((this.AddressTypeFieldField.Equals(value) != true)) {
                    this.AddressTypeFieldField = value;
                    this.RaisePropertyChanged("AddressTypeField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlacementType_e", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    public enum PlacementType_e : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlacementType_Zero = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlacementType_None = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlacementType_CASS = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlacementType_User = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlacementTypeEx_e", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    public enum PlacementTypeEx_e : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approximate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exact = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Timezone_e", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    public enum Timezone_e : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApDefault = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Midway = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hawaii = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alaska = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PacificTime = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Arizona = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MountainTime = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CentralTime = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Saskatchewan = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EasternTime = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndianaEast = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AtlanticTime = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Newfoundland = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Aleutian = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Michigan = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndianaStarke = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Samoa = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PacificNew = 17,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressType_e", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    public enum AddressType_e : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressTypeDN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressTypeAnnID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressTypeEmailAddr = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressTypeSipAddr = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressTypMailboxNumber = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressTypCentrexExtension = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceType_e", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    public enum ServiceType_e : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voicemail = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Iptv = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LargeScaleConferencing = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnDemandConferencing = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerminatingCallManagement = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OriginatingCallManagement = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UniversalCallManagement = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallLogging = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SipAcs = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WirelessOta = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACDAgent = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACDCallCenter = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SingleNumber = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Notify = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SipIntercom = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IptvAluMmig = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IptvMediaroom = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoicemailMobile = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IptvMobile = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyMobile = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StreamingTvMobile = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StreamingTv = 22,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriberInternetAccessType", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    [System.SerializableAttribute()]
    public partial class SubscriberInternetAccessType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ForcePasswordChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InternetAccessEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.SubscriberV4.ServiceType_e[] InternetServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriberGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForcePasswordChange {
            get {
                return this.ForcePasswordChangeField;
            }
            set {
                if ((this.ForcePasswordChangeField.Equals(value) != true)) {
                    this.ForcePasswordChangeField = value;
                    this.RaisePropertyChanged("ForcePasswordChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InternetAccessEnabled {
            get {
                return this.InternetAccessEnabledField;
            }
            set {
                if ((this.InternetAccessEnabledField.Equals(value) != true)) {
                    this.InternetAccessEnabledField = value;
                    this.RaisePropertyChanged("InternetAccessEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.SubscriberV4.ServiceType_e[] InternetServices {
            get {
                return this.InternetServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.InternetServicesField, value) != true)) {
                    this.InternetServicesField = value;
                    this.RaisePropertyChanged("InternetServices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberGuid {
            get {
                return this.SubscriberGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberGuidField, value) != true)) {
                    this.SubscriberGuidField = value;
                    this.RaisePropertyChanged("SubscriberGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SubscriberV4.ISubscriberService")]
    public interface ISubscriberService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/AuditSubscriberAddresses", ReplyAction="http://tempuri.org/ISubscriberService/AuditSubscriberAddressesResponse")]
        string[] AuditSubscriberAddresses(string loginToken, string startingAddress, int numberToReturn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/AuditSubscriberAddresses", ReplyAction="http://tempuri.org/ISubscriberService/AuditSubscriberAddressesResponse")]
        System.Threading.Tasks.Task<string[]> AuditSubscriberAddressesAsync(string loginToken, string startingAddress, int numberToReturn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/AuditSubscriberGuids", ReplyAction="http://tempuri.org/ISubscriberService/AuditSubscriberGuidsResponse")]
        string[] AuditSubscriberGuids(string loginToken, int numberToReturn, int offset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/AuditSubscriberGuids", ReplyAction="http://tempuri.org/ISubscriberService/AuditSubscriberGuidsResponse")]
        System.Threading.Tasks.Task<string[]> AuditSubscriberGuidsAsync(string loginToken, int numberToReturn, int offset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/RemoveSubscriberProv", ReplyAction="http://tempuri.org/ISubscriberService/RemoveSubscriberProvResponse")]
        void RemoveSubscriberProv(string loginToken, Common.SubscriberV4.SubscriberType subscriber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/RemoveSubscriberProv", ReplyAction="http://tempuri.org/ISubscriberService/RemoveSubscriberProvResponse")]
        System.Threading.Tasks.Task RemoveSubscriberProvAsync(string loginToken, Common.SubscriberV4.SubscriberType subscriber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/AddOrUpdateSubscriberProv", ReplyAction="http://tempuri.org/ISubscriberService/AddOrUpdateSubscriberProvResponse")]
        void AddOrUpdateSubscriberProv(string loginToken, Common.SubscriberV4.SubscriberType subscriber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/AddOrUpdateSubscriberProv", ReplyAction="http://tempuri.org/ISubscriberService/AddOrUpdateSubscriberProvResponse")]
        System.Threading.Tasks.Task AddOrUpdateSubscriberProvAsync(string loginToken, Common.SubscriberV4.SubscriberType subscriber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscribersByNumberProv", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscribersByNumberProvResponse")]
        Common.SubscriberV4.SubscriberType[] GetSubscribersByNumberProv(string loginToken, string subscriberDefaultPhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscribersByNumberProv", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscribersByNumberProvResponse")]
        System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberType[]> GetSubscribersByNumberProvAsync(string loginToken, string subscriberDefaultPhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscriberByNumberProv", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscriberByNumberProvResponse")]
        Common.SubscriberV4.SubscriberType GetSubscriberByNumberProv(string loginToken, string subscriberDefaultPhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscriberByNumberProv", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscriberByNumberProvResponse")]
        System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberType> GetSubscriberByNumberProvAsync(string loginToken, string subscriberDefaultPhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscriberByDefaultPhoneNumberProv", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscriberByDefaultPhoneNumberProvRespon" +
            "se")]
        Common.SubscriberV4.SubscriberType GetSubscriberByDefaultPhoneNumberProv(string loginToken, string subscriberDefaultPhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscriberByDefaultPhoneNumberProv", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscriberByDefaultPhoneNumberProvRespon" +
            "se")]
        System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberType> GetSubscriberByDefaultPhoneNumberProvAsync(string loginToken, string subscriberDefaultPhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscriberByGuidProv", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscriberByGuidProvResponse")]
        Common.SubscriberV4.SubscriberType GetSubscriberByGuidProv(string loginToken, string subscriberGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscriberByGuidProv", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscriberByGuidProvResponse")]
        System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberType> GetSubscriberByGuidProvAsync(string loginToken, string subscriberGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscriberByBillingProv", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscriberByBillingProvResponse")]
        Common.SubscriberV4.SubscriberType GetSubscriberByBillingProv(string loginToken, string billingAccountNumber, string billingServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscriberByBillingProv", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscriberByBillingProvResponse")]
        System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberType> GetSubscriberByBillingProvAsync(string loginToken, string billingAccountNumber, string billingServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscribersByBillingAccountNumberProv", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscribersByBillingAccountNumberProvRes" +
            "ponse")]
        Common.SubscriberV4.SubscriberType[] GetSubscribersByBillingAccountNumberProv(string loginToken, string billingAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscribersByBillingAccountNumberProv", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscribersByBillingAccountNumberProvRes" +
            "ponse")]
        System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberType[]> GetSubscribersByBillingAccountNumberProvAsync(string loginToken, string billingAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscribersByNameProv", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscribersByNameProvResponse")]
        Common.SubscriberV4.SubscriberType[] GetSubscribersByNameProv(string loginToken, string subscriberName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscribersByNameProv", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscribersByNameProvResponse")]
        System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberType[]> GetSubscribersByNameProvAsync(string loginToken, string subscriberName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscriberInternetAccess", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscriberInternetAccessResponse")]
        Common.SubscriberV4.SubscriberInternetAccessType GetSubscriberInternetAccess(string loginToken, string subscriberGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscriberInternetAccess", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscriberInternetAccessResponse")]
        System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberInternetAccessType> GetSubscriberInternetAccessAsync(string loginToken, string subscriberGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscriberServices", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscriberServicesResponse")]
        Common.SubscriberV4.ServiceInfoType[] GetSubscriberServices(string loginToken, string subscriberGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/GetSubscriberServices", ReplyAction="http://tempuri.org/ISubscriberService/GetSubscriberServicesResponse")]
        System.Threading.Tasks.Task<Common.SubscriberV4.ServiceInfoType[]> GetSubscriberServicesAsync(string loginToken, string subscriberGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/SetSubscriberBillingInfo", ReplyAction="http://tempuri.org/ISubscriberService/SetSubscriberBillingInfoResponse")]
        void SetSubscriberBillingInfo(string loginToken, string subscriberGuid, string billingAccountNumber, string billingAddress, string billingEnvironmentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/SetSubscriberBillingInfo", ReplyAction="http://tempuri.org/ISubscriberService/SetSubscriberBillingInfoResponse")]
        System.Threading.Tasks.Task SetSubscriberBillingInfoAsync(string loginToken, string subscriberGuid, string billingAccountNumber, string billingAddress, string billingEnvironmentCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/ReconcileBillingServiceID", ReplyAction="http://tempuri.org/ISubscriberService/ReconcileBillingServiceIDResponse")]
        void ReconcileBillingServiceID(string loginToken, string billingAccountNumber, string billingServiceID, Common.SubscriberV4.ServiceType_e serviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/ReconcileBillingServiceID", ReplyAction="http://tempuri.org/ISubscriberService/ReconcileBillingServiceIDResponse")]
        System.Threading.Tasks.Task ReconcileBillingServiceIDAsync(string loginToken, string billingAccountNumber, string billingServiceID, Common.SubscriberV4.ServiceType_e serviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/UpdateBillingAccountNumber", ReplyAction="http://tempuri.org/ISubscriberService/UpdateBillingAccountNumberResponse")]
        void UpdateBillingAccountNumber(string loginToken, string originalBillingAccountNumber, string newBillingAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/UpdateBillingAccountNumber", ReplyAction="http://tempuri.org/ISubscriberService/UpdateBillingAccountNumberResponse")]
        System.Threading.Tasks.Task UpdateBillingAccountNumberAsync(string loginToken, string originalBillingAccountNumber, string newBillingAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/UpdateBillingServiceAddressForBillingAccoun" +
            "tNumber", ReplyAction="http://tempuri.org/ISubscriberService/UpdateBillingServiceAddressForBillingAccoun" +
            "tNumberResponse")]
        void UpdateBillingServiceAddressForBillingAccountNumber(string loginToken, string billingAccountNumber, string originalBillingServiceAddress, string newBillingServiceAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/UpdateBillingServiceAddressForBillingAccoun" +
            "tNumber", ReplyAction="http://tempuri.org/ISubscriberService/UpdateBillingServiceAddressForBillingAccoun" +
            "tNumberResponse")]
        System.Threading.Tasks.Task UpdateBillingServiceAddressForBillingAccountNumberAsync(string loginToken, string billingAccountNumber, string originalBillingServiceAddress, string newBillingServiceAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/LinkSubscriberAccountsProv", ReplyAction="http://tempuri.org/ISubscriberService/LinkSubscriberAccountsProvResponse")]
        void LinkSubscriberAccountsProv(string loginToken, string subscriberGuid, string parentGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/LinkSubscriberAccountsProv", ReplyAction="http://tempuri.org/ISubscriberService/LinkSubscriberAccountsProvResponse")]
        System.Threading.Tasks.Task LinkSubscriberAccountsProvAsync(string loginToken, string subscriberGuid, string parentGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/UnLinkSubscriberAccountsProv", ReplyAction="http://tempuri.org/ISubscriberService/UnLinkSubscriberAccountsProvResponse")]
        void UnLinkSubscriberAccountsProv(string loginToken, string subscriberGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/UnLinkSubscriberAccountsProv", ReplyAction="http://tempuri.org/ISubscriberService/UnLinkSubscriberAccountsProvResponse")]
        System.Threading.Tasks.Task UnLinkSubscriberAccountsProvAsync(string loginToken, string subscriberGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/ResetInternetAccessPassword", ReplyAction="http://tempuri.org/ISubscriberService/ResetInternetAccessPasswordResponse")]
        void ResetInternetAccessPassword(string loginToken, string subscriberGuid, string newpassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/ResetInternetAccessPassword", ReplyAction="http://tempuri.org/ISubscriberService/ResetInternetAccessPasswordResponse")]
        System.Threading.Tasks.Task ResetInternetAccessPasswordAsync(string loginToken, string subscriberGuid, string newpassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/InternetAccessPasswordChange", ReplyAction="http://tempuri.org/ISubscriberService/InternetAccessPasswordChangeResponse")]
        void InternetAccessPasswordChange(string loginToken, string subscriberGuid, bool forcePasswordChange);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/InternetAccessPasswordChange", ReplyAction="http://tempuri.org/ISubscriberService/InternetAccessPasswordChangeResponse")]
        System.Threading.Tasks.Task InternetAccessPasswordChangeAsync(string loginToken, string subscriberGuid, bool forcePasswordChange);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/AddOrUpdateSubscriberInternetAccess", ReplyAction="http://tempuri.org/ISubscriberService/AddOrUpdateSubscriberInternetAccessResponse" +
            "")]
        void AddOrUpdateSubscriberInternetAccess(string loginToken, string subscriberGuid, string userName, string password, bool enabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/AddOrUpdateSubscriberInternetAccess", ReplyAction="http://tempuri.org/ISubscriberService/AddOrUpdateSubscriberInternetAccessResponse" +
            "")]
        System.Threading.Tasks.Task AddOrUpdateSubscriberInternetAccessAsync(string loginToken, string subscriberGuid, string userName, string password, bool enabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/RemoveSubscriberInternetAccess", ReplyAction="http://tempuri.org/ISubscriberService/RemoveSubscriberInternetAccessResponse")]
        void RemoveSubscriberInternetAccess(string loginToken, string subscriberGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriberService/RemoveSubscriberInternetAccess", ReplyAction="http://tempuri.org/ISubscriberService/RemoveSubscriberInternetAccessResponse")]
        System.Threading.Tasks.Task RemoveSubscriberInternetAccessAsync(string loginToken, string subscriberGuid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubscriberServiceChannel : Common.SubscriberV4.ISubscriberService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubscriberServiceClient : System.ServiceModel.ClientBase<Common.SubscriberV4.ISubscriberService>, Common.SubscriberV4.ISubscriberService {
        
        public SubscriberServiceClient() {
        }
        
        public SubscriberServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SubscriberServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubscriberServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubscriberServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] AuditSubscriberAddresses(string loginToken, string startingAddress, int numberToReturn) {
            return base.Channel.AuditSubscriberAddresses(loginToken, startingAddress, numberToReturn);
        }
        
        public System.Threading.Tasks.Task<string[]> AuditSubscriberAddressesAsync(string loginToken, string startingAddress, int numberToReturn) {
            return base.Channel.AuditSubscriberAddressesAsync(loginToken, startingAddress, numberToReturn);
        }
        
        public string[] AuditSubscriberGuids(string loginToken, int numberToReturn, int offset) {
            return base.Channel.AuditSubscriberGuids(loginToken, numberToReturn, offset);
        }
        
        public System.Threading.Tasks.Task<string[]> AuditSubscriberGuidsAsync(string loginToken, int numberToReturn, int offset) {
            return base.Channel.AuditSubscriberGuidsAsync(loginToken, numberToReturn, offset);
        }
        
        public void RemoveSubscriberProv(string loginToken, Common.SubscriberV4.SubscriberType subscriber) {
            base.Channel.RemoveSubscriberProv(loginToken, subscriber);
        }
        
        public System.Threading.Tasks.Task RemoveSubscriberProvAsync(string loginToken, Common.SubscriberV4.SubscriberType subscriber) {
            return base.Channel.RemoveSubscriberProvAsync(loginToken, subscriber);
        }
        
        public void AddOrUpdateSubscriberProv(string loginToken, Common.SubscriberV4.SubscriberType subscriber) {
            base.Channel.AddOrUpdateSubscriberProv(loginToken, subscriber);
        }
        
        public System.Threading.Tasks.Task AddOrUpdateSubscriberProvAsync(string loginToken, Common.SubscriberV4.SubscriberType subscriber) {
            return base.Channel.AddOrUpdateSubscriberProvAsync(loginToken, subscriber);
        }
        
        public Common.SubscriberV4.SubscriberType[] GetSubscribersByNumberProv(string loginToken, string subscriberDefaultPhoneNumber) {
            return base.Channel.GetSubscribersByNumberProv(loginToken, subscriberDefaultPhoneNumber);
        }
        
        public System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberType[]> GetSubscribersByNumberProvAsync(string loginToken, string subscriberDefaultPhoneNumber) {
            return base.Channel.GetSubscribersByNumberProvAsync(loginToken, subscriberDefaultPhoneNumber);
        }
        
        public Common.SubscriberV4.SubscriberType GetSubscriberByNumberProv(string loginToken, string subscriberDefaultPhoneNumber) {
            return base.Channel.GetSubscriberByNumberProv(loginToken, subscriberDefaultPhoneNumber);
        }
        
        public System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberType> GetSubscriberByNumberProvAsync(string loginToken, string subscriberDefaultPhoneNumber) {
            return base.Channel.GetSubscriberByNumberProvAsync(loginToken, subscriberDefaultPhoneNumber);
        }
        
        public Common.SubscriberV4.SubscriberType GetSubscriberByDefaultPhoneNumberProv(string loginToken, string subscriberDefaultPhoneNumber) {
            return base.Channel.GetSubscriberByDefaultPhoneNumberProv(loginToken, subscriberDefaultPhoneNumber);
        }
        
        public System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberType> GetSubscriberByDefaultPhoneNumberProvAsync(string loginToken, string subscriberDefaultPhoneNumber) {
            return base.Channel.GetSubscriberByDefaultPhoneNumberProvAsync(loginToken, subscriberDefaultPhoneNumber);
        }
        
        public Common.SubscriberV4.SubscriberType GetSubscriberByGuidProv(string loginToken, string subscriberGuid) {
            return base.Channel.GetSubscriberByGuidProv(loginToken, subscriberGuid);
        }
        
        public System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberType> GetSubscriberByGuidProvAsync(string loginToken, string subscriberGuid) {
            return base.Channel.GetSubscriberByGuidProvAsync(loginToken, subscriberGuid);
        }
        
        public Common.SubscriberV4.SubscriberType GetSubscriberByBillingProv(string loginToken, string billingAccountNumber, string billingServiceID) {
            return base.Channel.GetSubscriberByBillingProv(loginToken, billingAccountNumber, billingServiceID);
        }
        
        public System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberType> GetSubscriberByBillingProvAsync(string loginToken, string billingAccountNumber, string billingServiceID) {
            return base.Channel.GetSubscriberByBillingProvAsync(loginToken, billingAccountNumber, billingServiceID);
        }
        
        public Common.SubscriberV4.SubscriberType[] GetSubscribersByBillingAccountNumberProv(string loginToken, string billingAccountNumber) {
            return base.Channel.GetSubscribersByBillingAccountNumberProv(loginToken, billingAccountNumber);
        }
        
        public System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberType[]> GetSubscribersByBillingAccountNumberProvAsync(string loginToken, string billingAccountNumber) {
            return base.Channel.GetSubscribersByBillingAccountNumberProvAsync(loginToken, billingAccountNumber);
        }
        
        public Common.SubscriberV4.SubscriberType[] GetSubscribersByNameProv(string loginToken, string subscriberName) {
            return base.Channel.GetSubscribersByNameProv(loginToken, subscriberName);
        }
        
        public System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberType[]> GetSubscribersByNameProvAsync(string loginToken, string subscriberName) {
            return base.Channel.GetSubscribersByNameProvAsync(loginToken, subscriberName);
        }
        
        public Common.SubscriberV4.SubscriberInternetAccessType GetSubscriberInternetAccess(string loginToken, string subscriberGuid) {
            return base.Channel.GetSubscriberInternetAccess(loginToken, subscriberGuid);
        }
        
        public System.Threading.Tasks.Task<Common.SubscriberV4.SubscriberInternetAccessType> GetSubscriberInternetAccessAsync(string loginToken, string subscriberGuid) {
            return base.Channel.GetSubscriberInternetAccessAsync(loginToken, subscriberGuid);
        }
        
        public Common.SubscriberV4.ServiceInfoType[] GetSubscriberServices(string loginToken, string subscriberGuid) {
            return base.Channel.GetSubscriberServices(loginToken, subscriberGuid);
        }
        
        public System.Threading.Tasks.Task<Common.SubscriberV4.ServiceInfoType[]> GetSubscriberServicesAsync(string loginToken, string subscriberGuid) {
            return base.Channel.GetSubscriberServicesAsync(loginToken, subscriberGuid);
        }
        
        public void SetSubscriberBillingInfo(string loginToken, string subscriberGuid, string billingAccountNumber, string billingAddress, string billingEnvironmentCode) {
            base.Channel.SetSubscriberBillingInfo(loginToken, subscriberGuid, billingAccountNumber, billingAddress, billingEnvironmentCode);
        }
        
        public System.Threading.Tasks.Task SetSubscriberBillingInfoAsync(string loginToken, string subscriberGuid, string billingAccountNumber, string billingAddress, string billingEnvironmentCode) {
            return base.Channel.SetSubscriberBillingInfoAsync(loginToken, subscriberGuid, billingAccountNumber, billingAddress, billingEnvironmentCode);
        }
        
        public void ReconcileBillingServiceID(string loginToken, string billingAccountNumber, string billingServiceID, Common.SubscriberV4.ServiceType_e serviceType) {
            base.Channel.ReconcileBillingServiceID(loginToken, billingAccountNumber, billingServiceID, serviceType);
        }
        
        public System.Threading.Tasks.Task ReconcileBillingServiceIDAsync(string loginToken, string billingAccountNumber, string billingServiceID, Common.SubscriberV4.ServiceType_e serviceType) {
            return base.Channel.ReconcileBillingServiceIDAsync(loginToken, billingAccountNumber, billingServiceID, serviceType);
        }
        
        public void UpdateBillingAccountNumber(string loginToken, string originalBillingAccountNumber, string newBillingAccountNumber) {
            base.Channel.UpdateBillingAccountNumber(loginToken, originalBillingAccountNumber, newBillingAccountNumber);
        }
        
        public System.Threading.Tasks.Task UpdateBillingAccountNumberAsync(string loginToken, string originalBillingAccountNumber, string newBillingAccountNumber) {
            return base.Channel.UpdateBillingAccountNumberAsync(loginToken, originalBillingAccountNumber, newBillingAccountNumber);
        }
        
        public void UpdateBillingServiceAddressForBillingAccountNumber(string loginToken, string billingAccountNumber, string originalBillingServiceAddress, string newBillingServiceAddress) {
            base.Channel.UpdateBillingServiceAddressForBillingAccountNumber(loginToken, billingAccountNumber, originalBillingServiceAddress, newBillingServiceAddress);
        }
        
        public System.Threading.Tasks.Task UpdateBillingServiceAddressForBillingAccountNumberAsync(string loginToken, string billingAccountNumber, string originalBillingServiceAddress, string newBillingServiceAddress) {
            return base.Channel.UpdateBillingServiceAddressForBillingAccountNumberAsync(loginToken, billingAccountNumber, originalBillingServiceAddress, newBillingServiceAddress);
        }
        
        public void LinkSubscriberAccountsProv(string loginToken, string subscriberGuid, string parentGuid) {
            base.Channel.LinkSubscriberAccountsProv(loginToken, subscriberGuid, parentGuid);
        }
        
        public System.Threading.Tasks.Task LinkSubscriberAccountsProvAsync(string loginToken, string subscriberGuid, string parentGuid) {
            return base.Channel.LinkSubscriberAccountsProvAsync(loginToken, subscriberGuid, parentGuid);
        }
        
        public void UnLinkSubscriberAccountsProv(string loginToken, string subscriberGuid) {
            base.Channel.UnLinkSubscriberAccountsProv(loginToken, subscriberGuid);
        }
        
        public System.Threading.Tasks.Task UnLinkSubscriberAccountsProvAsync(string loginToken, string subscriberGuid) {
            return base.Channel.UnLinkSubscriberAccountsProvAsync(loginToken, subscriberGuid);
        }
        
        public void ResetInternetAccessPassword(string loginToken, string subscriberGuid, string newpassword) {
            base.Channel.ResetInternetAccessPassword(loginToken, subscriberGuid, newpassword);
        }
        
        public System.Threading.Tasks.Task ResetInternetAccessPasswordAsync(string loginToken, string subscriberGuid, string newpassword) {
            return base.Channel.ResetInternetAccessPasswordAsync(loginToken, subscriberGuid, newpassword);
        }
        
        public void InternetAccessPasswordChange(string loginToken, string subscriberGuid, bool forcePasswordChange) {
            base.Channel.InternetAccessPasswordChange(loginToken, subscriberGuid, forcePasswordChange);
        }
        
        public System.Threading.Tasks.Task InternetAccessPasswordChangeAsync(string loginToken, string subscriberGuid, bool forcePasswordChange) {
            return base.Channel.InternetAccessPasswordChangeAsync(loginToken, subscriberGuid, forcePasswordChange);
        }
        
        public void AddOrUpdateSubscriberInternetAccess(string loginToken, string subscriberGuid, string userName, string password, bool enabled) {
            base.Channel.AddOrUpdateSubscriberInternetAccess(loginToken, subscriberGuid, userName, password, enabled);
        }
        
        public System.Threading.Tasks.Task AddOrUpdateSubscriberInternetAccessAsync(string loginToken, string subscriberGuid, string userName, string password, bool enabled) {
            return base.Channel.AddOrUpdateSubscriberInternetAccessAsync(loginToken, subscriberGuid, userName, password, enabled);
        }
        
        public void RemoveSubscriberInternetAccess(string loginToken, string subscriberGuid) {
            base.Channel.RemoveSubscriberInternetAccess(loginToken, subscriberGuid);
        }
        
        public System.Threading.Tasks.Task RemoveSubscriberInternetAccessAsync(string loginToken, string subscriberGuid) {
            return base.Channel.RemoveSubscriberInternetAccessAsync(loginToken, subscriberGuid);
        }
    }
}
