//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.IPTVServiceV3 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IPTVAccountType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class IPTVAccountType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IPTVServiceV3.AdultChannelsState> AdultChannelsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.ChannelPackageType[] ChannelPackageListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CurrentAmountChargedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeactivateReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IPTVServiceV3.MiddlwareType> DefaultMiddlewareTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FIPSCountyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FIPSStateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HideAdultChannelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxAllowedStbsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxBandwidthKbpsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxChargingLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NextMonthAmountChargedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurchasePINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RatingPINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoutePortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.IptvServiceFeatureType[] ServeFeaturesListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.SetTopBoxType[] SetTopBoxListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriberIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriberNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountDescription {
            get {
                return this.AccountDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountDescriptionField, value) != true)) {
                    this.AccountDescriptionField = value;
                    this.RaisePropertyChanged("AccountDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IPTVServiceV3.AdultChannelsState> AdultChannelsActive {
            get {
                return this.AdultChannelsActiveField;
            }
            set {
                if ((this.AdultChannelsActiveField.Equals(value) != true)) {
                    this.AdultChannelsActiveField = value;
                    this.RaisePropertyChanged("AdultChannelsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingServiceID {
            get {
                return this.BillingServiceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingServiceIDField, value) != true)) {
                    this.BillingServiceIDField = value;
                    this.RaisePropertyChanged("BillingServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.ChannelPackageType[] ChannelPackageList {
            get {
                return this.ChannelPackageListField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelPackageListField, value) != true)) {
                    this.ChannelPackageListField = value;
                    this.RaisePropertyChanged("ChannelPackageList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CurrentAmountCharged {
            get {
                return this.CurrentAmountChargedField;
            }
            set {
                if ((this.CurrentAmountChargedField.Equals(value) != true)) {
                    this.CurrentAmountChargedField = value;
                    this.RaisePropertyChanged("CurrentAmountCharged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeactivateReason {
            get {
                return this.DeactivateReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.DeactivateReasonField, value) != true)) {
                    this.DeactivateReasonField = value;
                    this.RaisePropertyChanged("DeactivateReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IPTVServiceV3.MiddlwareType> DefaultMiddlewareType {
            get {
                return this.DefaultMiddlewareTypeField;
            }
            set {
                if ((this.DefaultMiddlewareTypeField.Equals(value) != true)) {
                    this.DefaultMiddlewareTypeField = value;
                    this.RaisePropertyChanged("DefaultMiddlewareType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FIPSCountyCode {
            get {
                return this.FIPSCountyCodeField;
            }
            set {
                if ((this.FIPSCountyCodeField.Equals(value) != true)) {
                    this.FIPSCountyCodeField = value;
                    this.RaisePropertyChanged("FIPSCountyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FIPSStateCode {
            get {
                return this.FIPSStateCodeField;
            }
            set {
                if ((this.FIPSStateCodeField.Equals(value) != true)) {
                    this.FIPSStateCodeField = value;
                    this.RaisePropertyChanged("FIPSStateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HideAdultChannels {
            get {
                return this.HideAdultChannelsField;
            }
            set {
                if ((this.HideAdultChannelsField.Equals(value) != true)) {
                    this.HideAdultChannelsField = value;
                    this.RaisePropertyChanged("HideAdultChannels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxAllowedStbs {
            get {
                return this.MaxAllowedStbsField;
            }
            set {
                if ((this.MaxAllowedStbsField.Equals(value) != true)) {
                    this.MaxAllowedStbsField = value;
                    this.RaisePropertyChanged("MaxAllowedStbs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxBandwidthKbps {
            get {
                return this.MaxBandwidthKbpsField;
            }
            set {
                if ((this.MaxBandwidthKbpsField.Equals(value) != true)) {
                    this.MaxBandwidthKbpsField = value;
                    this.RaisePropertyChanged("MaxBandwidthKbps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxChargingLimit {
            get {
                return this.MaxChargingLimitField;
            }
            set {
                if ((this.MaxChargingLimitField.Equals(value) != true)) {
                    this.MaxChargingLimitField = value;
                    this.RaisePropertyChanged("MaxChargingLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NextMonthAmountCharged {
            get {
                return this.NextMonthAmountChargedField;
            }
            set {
                if ((this.NextMonthAmountChargedField.Equals(value) != true)) {
                    this.NextMonthAmountChargedField = value;
                    this.RaisePropertyChanged("NextMonthAmountCharged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurchasePIN {
            get {
                return this.PurchasePINField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchasePINField, value) != true)) {
                    this.PurchasePINField = value;
                    this.RaisePropertyChanged("PurchasePIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RatingPIN {
            get {
                return this.RatingPINField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingPINField, value) != true)) {
                    this.RatingPINField = value;
                    this.RaisePropertyChanged("RatingPIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoutePort {
            get {
                return this.RoutePortField;
            }
            set {
                if ((object.ReferenceEquals(this.RoutePortField, value) != true)) {
                    this.RoutePortField = value;
                    this.RaisePropertyChanged("RoutePort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.IptvServiceFeatureType[] ServeFeaturesList {
            get {
                return this.ServeFeaturesListField;
            }
            set {
                if ((object.ReferenceEquals(this.ServeFeaturesListField, value) != true)) {
                    this.ServeFeaturesListField = value;
                    this.RaisePropertyChanged("ServeFeaturesList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceAreaID {
            get {
                return this.ServiceAreaIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceAreaIDField, value) != true)) {
                    this.ServiceAreaIDField = value;
                    this.RaisePropertyChanged("ServiceAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceReference {
            get {
                return this.ServiceReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceReferenceField, value) != true)) {
                    this.ServiceReferenceField = value;
                    this.RaisePropertyChanged("ServiceReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.SetTopBoxType[] SetTopBoxList {
            get {
                return this.SetTopBoxListField;
            }
            set {
                if ((object.ReferenceEquals(this.SetTopBoxListField, value) != true)) {
                    this.SetTopBoxListField = value;
                    this.RaisePropertyChanged("SetTopBoxList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberID {
            get {
                return this.SubscriberIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberIDField, value) != true)) {
                    this.SubscriberIDField = value;
                    this.RaisePropertyChanged("SubscriberID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberName {
            get {
                return this.SubscriberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberNameField, value) != true)) {
                    this.SubscriberNameField = value;
                    this.RaisePropertyChanged("SubscriberName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdultChannelsState", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    public enum AdultChannelsState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        useDefault = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        inactive = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChannelPackageType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class ChannelPackageType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackageNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackageID {
            get {
                return this.PackageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageIDField, value) != true)) {
                    this.PackageIDField = value;
                    this.RaisePropertyChanged("PackageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackageName {
            get {
                return this.PackageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageNameField, value) != true)) {
                    this.PackageNameField = value;
                    this.RaisePropertyChanged("PackageName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MiddlwareType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    public enum MiddlwareType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        middlewareUnknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        middlewareGen1 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        middlewareGen2 = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IptvServiceFeatureType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class IptvServiceFeatureType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostApIpAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceGuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostApIpAddr {
            get {
                return this.HostApIpAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.HostApIpAddrField, value) != true)) {
                    this.HostApIpAddrField = value;
                    this.RaisePropertyChanged("HostApIpAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceGuid {
            get {
                return this.ResourceGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceGuidField, value) != true)) {
                    this.ResourceGuidField = value;
                    this.RaisePropertyChanged("ResourceGuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetTopBoxType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class SetTopBoxType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AllowedStreamCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AuthorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BandwidthGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IPTVServiceV3.Gen2StbConnectorType> ConnectorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IPTVServiceV3.Gen2StbDisplayMode> DisplayModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IPTVServiceV3.Gen2StbDisplayResolution> DisplayResolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ExcludedPackagesListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FIPSCountyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FIPSStateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IPTVServiceV3.HdmiModes> HdmiModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IRBandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> InactivityDetuneOverrideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InstallDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxBandwidthKbpsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxSimultaneousRecordingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IPTVServiceV3.MiddlwareType> MiddlewareTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IPTVServiceV3.RecordingAllowedState> RecordingAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IPTVServiceV3.StbLocation> STBLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STBModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STBNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IPTVServiceV3.TrialGroupIDs> TrialGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IPTVServiceV3.Gen2StbTvType> TvTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WholeHomeGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IPTVServiceV3.WiringTypes> WiringTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AllowedStreamCount {
            get {
                return this.AllowedStreamCountField;
            }
            set {
                if ((this.AllowedStreamCountField.Equals(value) != true)) {
                    this.AllowedStreamCountField = value;
                    this.RaisePropertyChanged("AllowedStreamCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Authorized {
            get {
                return this.AuthorizedField;
            }
            set {
                if ((this.AuthorizedField.Equals(value) != true)) {
                    this.AuthorizedField = value;
                    this.RaisePropertyChanged("Authorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BandwidthGroup {
            get {
                return this.BandwidthGroupField;
            }
            set {
                if ((this.BandwidthGroupField.Equals(value) != true)) {
                    this.BandwidthGroupField = value;
                    this.RaisePropertyChanged("BandwidthGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IPTVServiceV3.Gen2StbConnectorType> ConnectorType {
            get {
                return this.ConnectorTypeField;
            }
            set {
                if ((this.ConnectorTypeField.Equals(value) != true)) {
                    this.ConnectorTypeField = value;
                    this.RaisePropertyChanged("ConnectorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IPTVServiceV3.Gen2StbDisplayMode> DisplayMode {
            get {
                return this.DisplayModeField;
            }
            set {
                if ((this.DisplayModeField.Equals(value) != true)) {
                    this.DisplayModeField = value;
                    this.RaisePropertyChanged("DisplayMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IPTVServiceV3.Gen2StbDisplayResolution> DisplayResolution {
            get {
                return this.DisplayResolutionField;
            }
            set {
                if ((this.DisplayResolutionField.Equals(value) != true)) {
                    this.DisplayResolutionField = value;
                    this.RaisePropertyChanged("DisplayResolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ExcludedPackagesList {
            get {
                return this.ExcludedPackagesListField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcludedPackagesListField, value) != true)) {
                    this.ExcludedPackagesListField = value;
                    this.RaisePropertyChanged("ExcludedPackagesList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FIPSCountyCode {
            get {
                return this.FIPSCountyCodeField;
            }
            set {
                if ((this.FIPSCountyCodeField.Equals(value) != true)) {
                    this.FIPSCountyCodeField = value;
                    this.RaisePropertyChanged("FIPSCountyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FIPSStateCode {
            get {
                return this.FIPSStateCodeField;
            }
            set {
                if ((this.FIPSStateCodeField.Equals(value) != true)) {
                    this.FIPSStateCodeField = value;
                    this.RaisePropertyChanged("FIPSStateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IPTVServiceV3.HdmiModes> HdmiMode {
            get {
                return this.HdmiModeField;
            }
            set {
                if ((this.HdmiModeField.Equals(value) != true)) {
                    this.HdmiModeField = value;
                    this.RaisePropertyChanged("HdmiMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IRBand {
            get {
                return this.IRBandField;
            }
            set {
                if ((this.IRBandField.Equals(value) != true)) {
                    this.IRBandField = value;
                    this.RaisePropertyChanged("IRBand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> InactivityDetuneOverride {
            get {
                return this.InactivityDetuneOverrideField;
            }
            set {
                if ((this.InactivityDetuneOverrideField.Equals(value) != true)) {
                    this.InactivityDetuneOverrideField = value;
                    this.RaisePropertyChanged("InactivityDetuneOverride");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InstallDate {
            get {
                return this.InstallDateField;
            }
            set {
                if ((this.InstallDateField.Equals(value) != true)) {
                    this.InstallDateField = value;
                    this.RaisePropertyChanged("InstallDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACAddress {
            get {
                return this.MACAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.MACAddressField, value) != true)) {
                    this.MACAddressField = value;
                    this.RaisePropertyChanged("MACAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxBandwidthKbps {
            get {
                return this.MaxBandwidthKbpsField;
            }
            set {
                if ((this.MaxBandwidthKbpsField.Equals(value) != true)) {
                    this.MaxBandwidthKbpsField = value;
                    this.RaisePropertyChanged("MaxBandwidthKbps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxSimultaneousRecordings {
            get {
                return this.MaxSimultaneousRecordingsField;
            }
            set {
                if ((this.MaxSimultaneousRecordingsField.Equals(value) != true)) {
                    this.MaxSimultaneousRecordingsField = value;
                    this.RaisePropertyChanged("MaxSimultaneousRecordings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IPTVServiceV3.MiddlwareType> MiddlewareType {
            get {
                return this.MiddlewareTypeField;
            }
            set {
                if ((this.MiddlewareTypeField.Equals(value) != true)) {
                    this.MiddlewareTypeField = value;
                    this.RaisePropertyChanged("MiddlewareType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFChannel {
            get {
                return this.RFChannelField;
            }
            set {
                if ((this.RFChannelField.Equals(value) != true)) {
                    this.RFChannelField = value;
                    this.RaisePropertyChanged("RFChannel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IPTVServiceV3.RecordingAllowedState> RecordingAllowed {
            get {
                return this.RecordingAllowedField;
            }
            set {
                if ((this.RecordingAllowedField.Equals(value) != true)) {
                    this.RecordingAllowedField = value;
                    this.RaisePropertyChanged("RecordingAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IPTVServiceV3.StbLocation> STBLocation {
            get {
                return this.STBLocationField;
            }
            set {
                if ((this.STBLocationField.Equals(value) != true)) {
                    this.STBLocationField = value;
                    this.RaisePropertyChanged("STBLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STBModel {
            get {
                return this.STBModelField;
            }
            set {
                if ((object.ReferenceEquals(this.STBModelField, value) != true)) {
                    this.STBModelField = value;
                    this.RaisePropertyChanged("STBModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STBName {
            get {
                return this.STBNameField;
            }
            set {
                if ((object.ReferenceEquals(this.STBNameField, value) != true)) {
                    this.STBNameField = value;
                    this.RaisePropertyChanged("STBName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IPTVServiceV3.TrialGroupIDs> TrialGroupID {
            get {
                return this.TrialGroupIDField;
            }
            set {
                if ((this.TrialGroupIDField.Equals(value) != true)) {
                    this.TrialGroupIDField = value;
                    this.RaisePropertyChanged("TrialGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IPTVServiceV3.Gen2StbTvType> TvType {
            get {
                return this.TvTypeField;
            }
            set {
                if ((this.TvTypeField.Equals(value) != true)) {
                    this.TvTypeField = value;
                    this.RaisePropertyChanged("TvType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WholeHomeGroup {
            get {
                return this.WholeHomeGroupField;
            }
            set {
                if ((this.WholeHomeGroupField.Equals(value) != true)) {
                    this.WholeHomeGroupField = value;
                    this.RaisePropertyChanged("WholeHomeGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IPTVServiceV3.WiringTypes> WiringType {
            get {
                return this.WiringTypeField;
            }
            set {
                if ((this.WiringTypeField.Equals(value) != true)) {
                    this.WiringTypeField = value;
                    this.RaisePropertyChanged("WiringType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gen2StbConnectorType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    public enum Gen2StbConnectorType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        connectorTypeUnknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        connectorTypeHdmi = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        connectorTypeComponent = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        connectorTypeComposite = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        connectorTypeSVideo = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        connectorTypeCoax = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gen2StbDisplayMode", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    public enum Gen2StbDisplayMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        displayModeTypeUnknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        displayModeTypeWideScreen = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        displayModeTypePanScan = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        displayModeTypeLetterbox = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        displayModeTypeIgnore = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        displayModeTypeZoom = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gen2StbDisplayResolution", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    public enum Gen2StbDisplayResolution : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        displayResTypeUnknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        displayResType480i = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        displayResType720p = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        displayResType1080i = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        displayResType1080p = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HdmiModes", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    public enum HdmiModes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseDefault = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Basic = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Full = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordingAllowedState", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    public enum RecordingAllowedState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        allowed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        notallowed = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StbLocation", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    public enum StbLocation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LivingRoom = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FamilyRoom = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MasterBedroom = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kitchen = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Den = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Office = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bedroom1 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bedroom2 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Garage = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bathroom = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Basement = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Basement2 = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Basement3 = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Basement4 = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Basement5 = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExerciseRoom = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GuestRoom = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shop = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shed = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Barn = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STB1 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STB2 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STB3 = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STB4 = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STB5 = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STB6 = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STB7 = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STB8 = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STB9 = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STB10 = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 30,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrialGroupIDs", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    public enum TrialGroupIDs : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        trialGroupAllSubscribers = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        trialGroupHeadEndTesting = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        trialGroupFieldTesting = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        trialGroupAllNonTestingSubscribers = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gen2StbTvType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    public enum Gen2StbTvType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tvTypeUnknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tvType4x3 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tvType16x9 = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WiringTypes", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    public enum WiringTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DirectWiredCat5or6 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HPNA = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MoCA = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PowerLine = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wifi = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriberType", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    [System.SerializableAttribute()]
    public partial class SubscriberType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.AddressInfoType[] AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingEnvironmentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingServiceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DialByNameDigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.InternetAccessType InternetAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentSubscriberIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.PlacementType_e PlacementTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IPTVServiceV3.PlacementTypeEx_e> PlacementType2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.ServiceInfoType ServiceInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.ServiceInfoType[] ServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriberDefaultPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriberEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriberGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.Timezone_e SubscriberTimezoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.AddressInfoType[] Addresses {
            get {
                return this.AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesField, value) != true)) {
                    this.AddressesField = value;
                    this.RaisePropertyChanged("Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingAccountNumber {
            get {
                return this.BillingAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingAccountNumberField, value) != true)) {
                    this.BillingAccountNumberField = value;
                    this.RaisePropertyChanged("BillingAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingEnvironmentCode {
            get {
                return this.BillingEnvironmentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingEnvironmentCodeField, value) != true)) {
                    this.BillingEnvironmentCodeField = value;
                    this.RaisePropertyChanged("BillingEnvironmentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingServiceAddress {
            get {
                return this.BillingServiceAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingServiceAddressField, value) != true)) {
                    this.BillingServiceAddressField = value;
                    this.RaisePropertyChanged("BillingServiceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DialByNameDigits {
            get {
                return this.DialByNameDigitsField;
            }
            set {
                if ((object.ReferenceEquals(this.DialByNameDigitsField, value) != true)) {
                    this.DialByNameDigitsField = value;
                    this.RaisePropertyChanged("DialByNameDigits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.InternetAccessType InternetAccess {
            get {
                return this.InternetAccessField;
            }
            set {
                if ((object.ReferenceEquals(this.InternetAccessField, value) != true)) {
                    this.InternetAccessField = value;
                    this.RaisePropertyChanged("InternetAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUpdateTime {
            get {
                return this.LastUpdateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdateTimeField, value) != true)) {
                    this.LastUpdateTimeField = value;
                    this.RaisePropertyChanged("LastUpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUpdatedBy {
            get {
                return this.LastUpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByField, value) != true)) {
                    this.LastUpdatedByField = value;
                    this.RaisePropertyChanged("LastUpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentSubscriberId {
            get {
                return this.ParentSubscriberIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentSubscriberIdField, value) != true)) {
                    this.ParentSubscriberIdField = value;
                    this.RaisePropertyChanged("ParentSubscriberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.PlacementType_e PlacementType {
            get {
                return this.PlacementTypeField;
            }
            set {
                if ((this.PlacementTypeField.Equals(value) != true)) {
                    this.PlacementTypeField = value;
                    this.RaisePropertyChanged("PlacementType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IPTVServiceV3.PlacementTypeEx_e> PlacementType2 {
            get {
                return this.PlacementType2Field;
            }
            set {
                if ((this.PlacementType2Field.Equals(value) != true)) {
                    this.PlacementType2Field = value;
                    this.RaisePropertyChanged("PlacementType2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.ServiceInfoType ServiceInformation {
            get {
                return this.ServiceInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceInformationField, value) != true)) {
                    this.ServiceInformationField = value;
                    this.RaisePropertyChanged("ServiceInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.ServiceInfoType[] Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberDefaultPhoneNumber {
            get {
                return this.SubscriberDefaultPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberDefaultPhoneNumberField, value) != true)) {
                    this.SubscriberDefaultPhoneNumberField = value;
                    this.RaisePropertyChanged("SubscriberDefaultPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberEmail {
            get {
                return this.SubscriberEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberEmailField, value) != true)) {
                    this.SubscriberEmailField = value;
                    this.RaisePropertyChanged("SubscriberEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberGuid {
            get {
                return this.SubscriberGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberGuidField, value) != true)) {
                    this.SubscriberGuidField = value;
                    this.RaisePropertyChanged("SubscriberGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberName {
            get {
                return this.SubscriberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberNameField, value) != true)) {
                    this.SubscriberNameField = value;
                    this.RaisePropertyChanged("SubscriberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.Timezone_e SubscriberTimezone {
            get {
                return this.SubscriberTimezoneField;
            }
            set {
                if ((this.SubscriberTimezoneField.Equals(value) != true)) {
                    this.SubscriberTimezoneField = value;
                    this.RaisePropertyChanged("SubscriberTimezone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InternetAccessType", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    [System.SerializableAttribute()]
    public partial class InternetAccessType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MobileEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServiceEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MobileEnabled {
            get {
                return this.MobileEnabledField;
            }
            set {
                if ((this.MobileEnabledField.Equals(value) != true)) {
                    this.MobileEnabledField = value;
                    this.RaisePropertyChanged("MobileEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServiceEnabled {
            get {
                return this.ServiceEnabledField;
            }
            set {
                if ((this.ServiceEnabledField.Equals(value) != true)) {
                    this.ServiceEnabledField = value;
                    this.RaisePropertyChanged("ServiceEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceInfoType", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    [System.SerializableAttribute()]
    public partial class ServiceInfoType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingServiceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.ServiceType_e ServiceTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApSystemId {
            get {
                return this.ApSystemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ApSystemIdField, value) != true)) {
                    this.ApSystemIdField = value;
                    this.RaisePropertyChanged("ApSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingServiceAddress {
            get {
                return this.BillingServiceAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingServiceAddressField, value) != true)) {
                    this.BillingServiceAddressField = value;
                    this.RaisePropertyChanged("BillingServiceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingServiceID {
            get {
                return this.BillingServiceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingServiceIDField, value) != true)) {
                    this.BillingServiceIDField = value;
                    this.RaisePropertyChanged("BillingServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceGuid {
            get {
                return this.ServiceGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceGuidField, value) != true)) {
                    this.ServiceGuidField = value;
                    this.RaisePropertyChanged("ServiceGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.ServiceType_e ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((this.ServiceTypeField.Equals(value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressInfoType", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    [System.SerializableAttribute()]
    public partial class AddressInfoType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.AddressType_e AddressTypeFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressField {
            get {
                return this.AddressFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressFieldField, value) != true)) {
                    this.AddressFieldField = value;
                    this.RaisePropertyChanged("AddressField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.AddressType_e AddressTypeField {
            get {
                return this.AddressTypeFieldField;
            }
            set {
                if ((this.AddressTypeFieldField.Equals(value) != true)) {
                    this.AddressTypeFieldField = value;
                    this.RaisePropertyChanged("AddressTypeField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlacementType_e", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    public enum PlacementType_e : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlacementType_Zero = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlacementType_None = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlacementType_CASS = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlacementType_User = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlacementTypeEx_e", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    public enum PlacementTypeEx_e : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approximate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exact = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Timezone_e", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    public enum Timezone_e : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApDefault = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Midway = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hawaii = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alaska = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PacificTime = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Arizona = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MountainTime = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CentralTime = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Saskatchewan = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EasternTime = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndianaEast = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AtlanticTime = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Newfoundland = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Aleutian = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Michigan = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndianaStarke = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Samoa = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PacificNew = 17,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressType_e", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    public enum AddressType_e : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressTypeDN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressTypeAnnID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressTypeEmailAddr = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressTypeSipAddr = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressTypMailboxNumber = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressTypCentrexExtension = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceType_e", Namespace="http://schemas.datacontract.org/2004/07/APmaxProvisioning")]
    public enum ServiceType_e : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voicemail = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Iptv = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LargeScaleConferencing = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnDemandConferencing = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TerminatingCallManagement = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OriginatingCallManagement = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UniversalCallManagement = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallLogging = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SipAcs = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WirelessOta = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACDAgent = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACDCallCenter = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SingleNumber = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Notify = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SipIntercom = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IptvAluMmig = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IptvMediaroom = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoicemailMobile = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IptvMobile = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyMobile = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StreamingTvMobile = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StreamingTv = 22,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChannelLineupType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class ChannelLineupType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.ChannelPackageType[] ChannelPackagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.CountyType[] CountiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ServiceAreaIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceAreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceAreaTimeZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.ChannelPackageType[] ChannelPackages {
            get {
                return this.ChannelPackagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelPackagesField, value) != true)) {
                    this.ChannelPackagesField = value;
                    this.RaisePropertyChanged("ChannelPackages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.CountyType[] Counties {
            get {
                return this.CountiesField;
            }
            set {
                if ((object.ReferenceEquals(this.CountiesField, value) != true)) {
                    this.CountiesField = value;
                    this.RaisePropertyChanged("Counties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceAreaID {
            get {
                return this.ServiceAreaIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceAreaIDField, value) != true)) {
                    this.ServiceAreaIDField = value;
                    this.RaisePropertyChanged("ServiceAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ServiceAreaIndex {
            get {
                return this.ServiceAreaIndexField;
            }
            set {
                if ((this.ServiceAreaIndexField.Equals(value) != true)) {
                    this.ServiceAreaIndexField = value;
                    this.RaisePropertyChanged("ServiceAreaIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceAreaName {
            get {
                return this.ServiceAreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceAreaNameField, value) != true)) {
                    this.ServiceAreaNameField = value;
                    this.RaisePropertyChanged("ServiceAreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceAreaTimeZone {
            get {
                return this.ServiceAreaTimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceAreaTimeZoneField, value) != true)) {
                    this.ServiceAreaTimeZoneField = value;
                    this.RaisePropertyChanged("ServiceAreaTimeZone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountyType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class CountyType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StateCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountyCode {
            get {
                return this.CountyCodeField;
            }
            set {
                if ((this.CountyCodeField.Equals(value) != true)) {
                    this.CountyCodeField = value;
                    this.RaisePropertyChanged("CountyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((this.StateCodeField.Equals(value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IptvFeatureType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class IptvFeatureType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsumerGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeatureOptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeatureOptionValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceGuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsumerGuid {
            get {
                return this.ConsumerGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsumerGuidField, value) != true)) {
                    this.ConsumerGuidField = value;
                    this.RaisePropertyChanged("ConsumerGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeatureOptionType {
            get {
                return this.FeatureOptionTypeField;
            }
            set {
                if ((this.FeatureOptionTypeField.Equals(value) != true)) {
                    this.FeatureOptionTypeField = value;
                    this.RaisePropertyChanged("FeatureOptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureOptionValue {
            get {
                return this.FeatureOptionValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureOptionValueField, value) != true)) {
                    this.FeatureOptionValueField = value;
                    this.RaisePropertyChanged("FeatureOptionValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceGuid {
            get {
                return this.ResourceGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceGuidField, value) != true)) {
                    this.ResourceGuidField = value;
                    this.RaisePropertyChanged("ResourceGuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gen2AvStatsType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class Gen2AvStatsType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AudioFullnessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AudioLastOverflowTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AudioLastUnderflowTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AudioOverflowsThisMovieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AudioTotalOverflowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AudioTotalUnderflowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AudioUnderflowsThisMovieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FirstPtsInMovieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastPtsInMovieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastRebootTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastSkipTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Other32LastVideoPtsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceErrorsThisMovieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceLastErrorTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceTotalErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SkipsThisMovieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TopBitLastVideoPtsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalSkipsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateTimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UptimeIdleSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UptimeSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VideoFullnessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VideoLastOverflowTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VideoLastUnderflowTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VideoOverflowsThisMovieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VideoTotalOverflowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VideoTotalUnderflowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VideoUnderflowsThisMovieField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AudioFullness {
            get {
                return this.AudioFullnessField;
            }
            set {
                if ((this.AudioFullnessField.Equals(value) != true)) {
                    this.AudioFullnessField = value;
                    this.RaisePropertyChanged("AudioFullness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AudioLastOverflowTime {
            get {
                return this.AudioLastOverflowTimeField;
            }
            set {
                if ((this.AudioLastOverflowTimeField.Equals(value) != true)) {
                    this.AudioLastOverflowTimeField = value;
                    this.RaisePropertyChanged("AudioLastOverflowTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AudioLastUnderflowTime {
            get {
                return this.AudioLastUnderflowTimeField;
            }
            set {
                if ((this.AudioLastUnderflowTimeField.Equals(value) != true)) {
                    this.AudioLastUnderflowTimeField = value;
                    this.RaisePropertyChanged("AudioLastUnderflowTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AudioOverflowsThisMovie {
            get {
                return this.AudioOverflowsThisMovieField;
            }
            set {
                if ((this.AudioOverflowsThisMovieField.Equals(value) != true)) {
                    this.AudioOverflowsThisMovieField = value;
                    this.RaisePropertyChanged("AudioOverflowsThisMovie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AudioTotalOverflows {
            get {
                return this.AudioTotalOverflowsField;
            }
            set {
                if ((this.AudioTotalOverflowsField.Equals(value) != true)) {
                    this.AudioTotalOverflowsField = value;
                    this.RaisePropertyChanged("AudioTotalOverflows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AudioTotalUnderflows {
            get {
                return this.AudioTotalUnderflowsField;
            }
            set {
                if ((this.AudioTotalUnderflowsField.Equals(value) != true)) {
                    this.AudioTotalUnderflowsField = value;
                    this.RaisePropertyChanged("AudioTotalUnderflows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AudioUnderflowsThisMovie {
            get {
                return this.AudioUnderflowsThisMovieField;
            }
            set {
                if ((this.AudioUnderflowsThisMovieField.Equals(value) != true)) {
                    this.AudioUnderflowsThisMovieField = value;
                    this.RaisePropertyChanged("AudioUnderflowsThisMovie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentTime {
            get {
                return this.CurrentTimeField;
            }
            set {
                if ((this.CurrentTimeField.Equals(value) != true)) {
                    this.CurrentTimeField = value;
                    this.RaisePropertyChanged("CurrentTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FirstPtsInMovie {
            get {
                return this.FirstPtsInMovieField;
            }
            set {
                if ((this.FirstPtsInMovieField.Equals(value) != true)) {
                    this.FirstPtsInMovieField = value;
                    this.RaisePropertyChanged("FirstPtsInMovie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastPtsInMovie {
            get {
                return this.LastPtsInMovieField;
            }
            set {
                if ((this.LastPtsInMovieField.Equals(value) != true)) {
                    this.LastPtsInMovieField = value;
                    this.RaisePropertyChanged("LastPtsInMovie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastRebootTime {
            get {
                return this.LastRebootTimeField;
            }
            set {
                if ((this.LastRebootTimeField.Equals(value) != true)) {
                    this.LastRebootTimeField = value;
                    this.RaisePropertyChanged("LastRebootTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastSkipTime {
            get {
                return this.LastSkipTimeField;
            }
            set {
                if ((this.LastSkipTimeField.Equals(value) != true)) {
                    this.LastSkipTimeField = value;
                    this.RaisePropertyChanged("LastSkipTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieStartTime {
            get {
                return this.MovieStartTimeField;
            }
            set {
                if ((this.MovieStartTimeField.Equals(value) != true)) {
                    this.MovieStartTimeField = value;
                    this.RaisePropertyChanged("MovieStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Other32LastVideoPts {
            get {
                return this.Other32LastVideoPtsField;
            }
            set {
                if ((this.Other32LastVideoPtsField.Equals(value) != true)) {
                    this.Other32LastVideoPtsField = value;
                    this.RaisePropertyChanged("Other32LastVideoPts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SequenceErrorsThisMovie {
            get {
                return this.SequenceErrorsThisMovieField;
            }
            set {
                if ((this.SequenceErrorsThisMovieField.Equals(value) != true)) {
                    this.SequenceErrorsThisMovieField = value;
                    this.RaisePropertyChanged("SequenceErrorsThisMovie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SequenceLastErrorTime {
            get {
                return this.SequenceLastErrorTimeField;
            }
            set {
                if ((this.SequenceLastErrorTimeField.Equals(value) != true)) {
                    this.SequenceLastErrorTimeField = value;
                    this.RaisePropertyChanged("SequenceLastErrorTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SequenceTotalErrors {
            get {
                return this.SequenceTotalErrorsField;
            }
            set {
                if ((this.SequenceTotalErrorsField.Equals(value) != true)) {
                    this.SequenceTotalErrorsField = value;
                    this.RaisePropertyChanged("SequenceTotalErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SkipsThisMovie {
            get {
                return this.SkipsThisMovieField;
            }
            set {
                if ((this.SkipsThisMovieField.Equals(value) != true)) {
                    this.SkipsThisMovieField = value;
                    this.RaisePropertyChanged("SkipsThisMovie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TopBitLastVideoPts {
            get {
                return this.TopBitLastVideoPtsField;
            }
            set {
                if ((this.TopBitLastVideoPtsField.Equals(value) != true)) {
                    this.TopBitLastVideoPtsField = value;
                    this.RaisePropertyChanged("TopBitLastVideoPts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalSkips {
            get {
                return this.TotalSkipsField;
            }
            set {
                if ((this.TotalSkipsField.Equals(value) != true)) {
                    this.TotalSkipsField = value;
                    this.RaisePropertyChanged("TotalSkips");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateTimestamp {
            get {
                return this.UpdateTimestampField;
            }
            set {
                if ((this.UpdateTimestampField.Equals(value) != true)) {
                    this.UpdateTimestampField = value;
                    this.RaisePropertyChanged("UpdateTimestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UptimeIdleSeconds {
            get {
                return this.UptimeIdleSecondsField;
            }
            set {
                if ((this.UptimeIdleSecondsField.Equals(value) != true)) {
                    this.UptimeIdleSecondsField = value;
                    this.RaisePropertyChanged("UptimeIdleSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UptimeSeconds {
            get {
                return this.UptimeSecondsField;
            }
            set {
                if ((this.UptimeSecondsField.Equals(value) != true)) {
                    this.UptimeSecondsField = value;
                    this.RaisePropertyChanged("UptimeSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VideoFullness {
            get {
                return this.VideoFullnessField;
            }
            set {
                if ((this.VideoFullnessField.Equals(value) != true)) {
                    this.VideoFullnessField = value;
                    this.RaisePropertyChanged("VideoFullness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VideoLastOverflowTime {
            get {
                return this.VideoLastOverflowTimeField;
            }
            set {
                if ((this.VideoLastOverflowTimeField.Equals(value) != true)) {
                    this.VideoLastOverflowTimeField = value;
                    this.RaisePropertyChanged("VideoLastOverflowTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VideoLastUnderflowTime {
            get {
                return this.VideoLastUnderflowTimeField;
            }
            set {
                if ((this.VideoLastUnderflowTimeField.Equals(value) != true)) {
                    this.VideoLastUnderflowTimeField = value;
                    this.RaisePropertyChanged("VideoLastUnderflowTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VideoOverflowsThisMovie {
            get {
                return this.VideoOverflowsThisMovieField;
            }
            set {
                if ((this.VideoOverflowsThisMovieField.Equals(value) != true)) {
                    this.VideoOverflowsThisMovieField = value;
                    this.RaisePropertyChanged("VideoOverflowsThisMovie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VideoTotalOverflows {
            get {
                return this.VideoTotalOverflowsField;
            }
            set {
                if ((this.VideoTotalOverflowsField.Equals(value) != true)) {
                    this.VideoTotalOverflowsField = value;
                    this.RaisePropertyChanged("VideoTotalOverflows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VideoTotalUnderflows {
            get {
                return this.VideoTotalUnderflowsField;
            }
            set {
                if ((this.VideoTotalUnderflowsField.Equals(value) != true)) {
                    this.VideoTotalUnderflowsField = value;
                    this.RaisePropertyChanged("VideoTotalUnderflows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VideoUnderflowsThisMovie {
            get {
                return this.VideoUnderflowsThisMovieField;
            }
            set {
                if ((this.VideoUnderflowsThisMovieField.Equals(value) != true)) {
                    this.VideoUnderflowsThisMovieField = value;
                    this.RaisePropertyChanged("VideoUnderflowsThisMovie");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gen2NetworkStatsType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class Gen2NetworkStatsType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RxBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RxCompressedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RxDropField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RxErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RxFiFoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RxFrameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RxMulticastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RxPacketsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TxBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TxCarrierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TxCollisionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TxCompressedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TxDropField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TxErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TxFifoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TxPacketsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateTimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RxBytes {
            get {
                return this.RxBytesField;
            }
            set {
                if ((this.RxBytesField.Equals(value) != true)) {
                    this.RxBytesField = value;
                    this.RaisePropertyChanged("RxBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RxCompressed {
            get {
                return this.RxCompressedField;
            }
            set {
                if ((this.RxCompressedField.Equals(value) != true)) {
                    this.RxCompressedField = value;
                    this.RaisePropertyChanged("RxCompressed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RxDrop {
            get {
                return this.RxDropField;
            }
            set {
                if ((this.RxDropField.Equals(value) != true)) {
                    this.RxDropField = value;
                    this.RaisePropertyChanged("RxDrop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RxErrors {
            get {
                return this.RxErrorsField;
            }
            set {
                if ((this.RxErrorsField.Equals(value) != true)) {
                    this.RxErrorsField = value;
                    this.RaisePropertyChanged("RxErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RxFiFo {
            get {
                return this.RxFiFoField;
            }
            set {
                if ((this.RxFiFoField.Equals(value) != true)) {
                    this.RxFiFoField = value;
                    this.RaisePropertyChanged("RxFiFo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RxFrame {
            get {
                return this.RxFrameField;
            }
            set {
                if ((this.RxFrameField.Equals(value) != true)) {
                    this.RxFrameField = value;
                    this.RaisePropertyChanged("RxFrame");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RxMulticast {
            get {
                return this.RxMulticastField;
            }
            set {
                if ((this.RxMulticastField.Equals(value) != true)) {
                    this.RxMulticastField = value;
                    this.RaisePropertyChanged("RxMulticast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RxPackets {
            get {
                return this.RxPacketsField;
            }
            set {
                if ((this.RxPacketsField.Equals(value) != true)) {
                    this.RxPacketsField = value;
                    this.RaisePropertyChanged("RxPackets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TxBytes {
            get {
                return this.TxBytesField;
            }
            set {
                if ((this.TxBytesField.Equals(value) != true)) {
                    this.TxBytesField = value;
                    this.RaisePropertyChanged("TxBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TxCarrier {
            get {
                return this.TxCarrierField;
            }
            set {
                if ((this.TxCarrierField.Equals(value) != true)) {
                    this.TxCarrierField = value;
                    this.RaisePropertyChanged("TxCarrier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TxCollisions {
            get {
                return this.TxCollisionsField;
            }
            set {
                if ((this.TxCollisionsField.Equals(value) != true)) {
                    this.TxCollisionsField = value;
                    this.RaisePropertyChanged("TxCollisions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TxCompressed {
            get {
                return this.TxCompressedField;
            }
            set {
                if ((this.TxCompressedField.Equals(value) != true)) {
                    this.TxCompressedField = value;
                    this.RaisePropertyChanged("TxCompressed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TxDrop {
            get {
                return this.TxDropField;
            }
            set {
                if ((this.TxDropField.Equals(value) != true)) {
                    this.TxDropField = value;
                    this.RaisePropertyChanged("TxDrop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TxErrors {
            get {
                return this.TxErrorsField;
            }
            set {
                if ((this.TxErrorsField.Equals(value) != true)) {
                    this.TxErrorsField = value;
                    this.RaisePropertyChanged("TxErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TxFifo {
            get {
                return this.TxFifoField;
            }
            set {
                if ((this.TxFifoField.Equals(value) != true)) {
                    this.TxFifoField = value;
                    this.RaisePropertyChanged("TxFifo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TxPackets {
            get {
                return this.TxPacketsField;
            }
            set {
                if ((this.TxPacketsField.Equals(value) != true)) {
                    this.TxPacketsField = value;
                    this.RaisePropertyChanged("TxPackets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateTimestamp {
            get {
                return this.UpdateTimestampField;
            }
            set {
                if ((this.UpdateTimestampField.Equals(value) != true)) {
                    this.UpdateTimestampField = value;
                    this.RaisePropertyChanged("UpdateTimestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gen2MemStatsType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class Gen2MemStatsType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuffersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CachedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommitLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Committed_ASField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DirtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HighFreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HighTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InactiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LowFreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LowTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MappedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MemFreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MemTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageTablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SlabField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SwapCachedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SwapFreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SwapTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateTimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VmallocChunkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VmallocTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VmallocUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WritebackField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Buffers {
            get {
                return this.BuffersField;
            }
            set {
                if ((this.BuffersField.Equals(value) != true)) {
                    this.BuffersField = value;
                    this.RaisePropertyChanged("Buffers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cached {
            get {
                return this.CachedField;
            }
            set {
                if ((this.CachedField.Equals(value) != true)) {
                    this.CachedField = value;
                    this.RaisePropertyChanged("Cached");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommitLimit {
            get {
                return this.CommitLimitField;
            }
            set {
                if ((this.CommitLimitField.Equals(value) != true)) {
                    this.CommitLimitField = value;
                    this.RaisePropertyChanged("CommitLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Committed_AS {
            get {
                return this.Committed_ASField;
            }
            set {
                if ((this.Committed_ASField.Equals(value) != true)) {
                    this.Committed_ASField = value;
                    this.RaisePropertyChanged("Committed_AS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Dirty {
            get {
                return this.DirtyField;
            }
            set {
                if ((this.DirtyField.Equals(value) != true)) {
                    this.DirtyField = value;
                    this.RaisePropertyChanged("Dirty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HighFree {
            get {
                return this.HighFreeField;
            }
            set {
                if ((this.HighFreeField.Equals(value) != true)) {
                    this.HighFreeField = value;
                    this.RaisePropertyChanged("HighFree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HighTotal {
            get {
                return this.HighTotalField;
            }
            set {
                if ((this.HighTotalField.Equals(value) != true)) {
                    this.HighTotalField = value;
                    this.RaisePropertyChanged("HighTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Inactive {
            get {
                return this.InactiveField;
            }
            set {
                if ((this.InactiveField.Equals(value) != true)) {
                    this.InactiveField = value;
                    this.RaisePropertyChanged("Inactive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LowFree {
            get {
                return this.LowFreeField;
            }
            set {
                if ((this.LowFreeField.Equals(value) != true)) {
                    this.LowFreeField = value;
                    this.RaisePropertyChanged("LowFree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LowTotal {
            get {
                return this.LowTotalField;
            }
            set {
                if ((this.LowTotalField.Equals(value) != true)) {
                    this.LowTotalField = value;
                    this.RaisePropertyChanged("LowTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mapped {
            get {
                return this.MappedField;
            }
            set {
                if ((this.MappedField.Equals(value) != true)) {
                    this.MappedField = value;
                    this.RaisePropertyChanged("Mapped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MemFree {
            get {
                return this.MemFreeField;
            }
            set {
                if ((this.MemFreeField.Equals(value) != true)) {
                    this.MemFreeField = value;
                    this.RaisePropertyChanged("MemFree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MemTotal {
            get {
                return this.MemTotalField;
            }
            set {
                if ((this.MemTotalField.Equals(value) != true)) {
                    this.MemTotalField = value;
                    this.RaisePropertyChanged("MemTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageTables {
            get {
                return this.PageTablesField;
            }
            set {
                if ((this.PageTablesField.Equals(value) != true)) {
                    this.PageTablesField = value;
                    this.RaisePropertyChanged("PageTables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Slab {
            get {
                return this.SlabField;
            }
            set {
                if ((this.SlabField.Equals(value) != true)) {
                    this.SlabField = value;
                    this.RaisePropertyChanged("Slab");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SwapCached {
            get {
                return this.SwapCachedField;
            }
            set {
                if ((this.SwapCachedField.Equals(value) != true)) {
                    this.SwapCachedField = value;
                    this.RaisePropertyChanged("SwapCached");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SwapFree {
            get {
                return this.SwapFreeField;
            }
            set {
                if ((this.SwapFreeField.Equals(value) != true)) {
                    this.SwapFreeField = value;
                    this.RaisePropertyChanged("SwapFree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SwapTotal {
            get {
                return this.SwapTotalField;
            }
            set {
                if ((this.SwapTotalField.Equals(value) != true)) {
                    this.SwapTotalField = value;
                    this.RaisePropertyChanged("SwapTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateTimestamp {
            get {
                return this.UpdateTimestampField;
            }
            set {
                if ((this.UpdateTimestampField.Equals(value) != true)) {
                    this.UpdateTimestampField = value;
                    this.RaisePropertyChanged("UpdateTimestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VmallocChunk {
            get {
                return this.VmallocChunkField;
            }
            set {
                if ((this.VmallocChunkField.Equals(value) != true)) {
                    this.VmallocChunkField = value;
                    this.RaisePropertyChanged("VmallocChunk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VmallocTotal {
            get {
                return this.VmallocTotalField;
            }
            set {
                if ((this.VmallocTotalField.Equals(value) != true)) {
                    this.VmallocTotalField = value;
                    this.RaisePropertyChanged("VmallocTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VmallocUsed {
            get {
                return this.VmallocUsedField;
            }
            set {
                if ((this.VmallocUsedField.Equals(value) != true)) {
                    this.VmallocUsedField = value;
                    this.RaisePropertyChanged("VmallocUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Writeback {
            get {
                return this.WritebackField;
            }
            set {
                if ((this.WritebackField.Equals(value) != true)) {
                    this.WritebackField = value;
                    this.RaisePropertyChanged("Writeback");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gen2BoxInfoType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class Gen2BoxInfoType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MIsBinsVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MIsLibsVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MLastRebootTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MRunningCoreVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MRunningVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.Gen2StbStandbyStates MStandbyStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MUpdateTimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MIsBinsVersion {
            get {
                return this.MIsBinsVersionField;
            }
            set {
                if ((this.MIsBinsVersionField.Equals(value) != true)) {
                    this.MIsBinsVersionField = value;
                    this.RaisePropertyChanged("MIsBinsVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MIsLibsVersion {
            get {
                return this.MIsLibsVersionField;
            }
            set {
                if ((this.MIsLibsVersionField.Equals(value) != true)) {
                    this.MIsLibsVersionField = value;
                    this.RaisePropertyChanged("MIsLibsVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MLastRebootTime {
            get {
                return this.MLastRebootTimeField;
            }
            set {
                if ((this.MLastRebootTimeField.Equals(value) != true)) {
                    this.MLastRebootTimeField = value;
                    this.RaisePropertyChanged("MLastRebootTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MRunningCoreVersion {
            get {
                return this.MRunningCoreVersionField;
            }
            set {
                if ((this.MRunningCoreVersionField.Equals(value) != true)) {
                    this.MRunningCoreVersionField = value;
                    this.RaisePropertyChanged("MRunningCoreVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MRunningVersion {
            get {
                return this.MRunningVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.MRunningVersionField, value) != true)) {
                    this.MRunningVersionField = value;
                    this.RaisePropertyChanged("MRunningVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.Gen2StbStandbyStates MStandbyState {
            get {
                return this.MStandbyStateField;
            }
            set {
                if ((this.MStandbyStateField.Equals(value) != true)) {
                    this.MStandbyStateField = value;
                    this.RaisePropertyChanged("MStandbyState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MUpdateTimestamp {
            get {
                return this.MUpdateTimestampField;
            }
            set {
                if ((this.MUpdateTimestampField.Equals(value) != true)) {
                    this.MUpdateTimestampField = value;
                    this.RaisePropertyChanged("MUpdateTimestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gen2StbStandbyStates", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    public enum Gen2StbStandbyStates : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        standbyStateUnknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        stateInStandby = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        stateNotInStandby = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddSetTopBoxType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class AddSetTopBoxType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BandwidthGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.Gen2StbConnectorType ConnectorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.Gen2StbDisplayMode DisplayModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.Gen2StbDisplayResolution DisplayResolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IPTVServiceV3.HdmiModes> HdmiModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> InactivityDetuneOverrideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxBandwidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxSimultaneousRecordingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.RecordingAllowedState RecordingAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.StbLocation STBLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STBModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STBNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.TrialGroupIDs TrialGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.Gen2StbTvType TvTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WholeHomeGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Common.IPTVServiceV3.WiringTypes> WiringTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BandwidthGroup {
            get {
                return this.BandwidthGroupField;
            }
            set {
                if ((this.BandwidthGroupField.Equals(value) != true)) {
                    this.BandwidthGroupField = value;
                    this.RaisePropertyChanged("BandwidthGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.Gen2StbConnectorType ConnectorType {
            get {
                return this.ConnectorTypeField;
            }
            set {
                if ((this.ConnectorTypeField.Equals(value) != true)) {
                    this.ConnectorTypeField = value;
                    this.RaisePropertyChanged("ConnectorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.Gen2StbDisplayMode DisplayMode {
            get {
                return this.DisplayModeField;
            }
            set {
                if ((this.DisplayModeField.Equals(value) != true)) {
                    this.DisplayModeField = value;
                    this.RaisePropertyChanged("DisplayMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.Gen2StbDisplayResolution DisplayResolution {
            get {
                return this.DisplayResolutionField;
            }
            set {
                if ((this.DisplayResolutionField.Equals(value) != true)) {
                    this.DisplayResolutionField = value;
                    this.RaisePropertyChanged("DisplayResolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IPTVServiceV3.HdmiModes> HdmiMode {
            get {
                return this.HdmiModeField;
            }
            set {
                if ((this.HdmiModeField.Equals(value) != true)) {
                    this.HdmiModeField = value;
                    this.RaisePropertyChanged("HdmiMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> InactivityDetuneOverride {
            get {
                return this.InactivityDetuneOverrideField;
            }
            set {
                if ((this.InactivityDetuneOverrideField.Equals(value) != true)) {
                    this.InactivityDetuneOverrideField = value;
                    this.RaisePropertyChanged("InactivityDetuneOverride");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACAddress {
            get {
                return this.MACAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.MACAddressField, value) != true)) {
                    this.MACAddressField = value;
                    this.RaisePropertyChanged("MACAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxBandwidth {
            get {
                return this.MaxBandwidthField;
            }
            set {
                if ((this.MaxBandwidthField.Equals(value) != true)) {
                    this.MaxBandwidthField = value;
                    this.RaisePropertyChanged("MaxBandwidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxSimultaneousRecordings {
            get {
                return this.MaxSimultaneousRecordingsField;
            }
            set {
                if ((this.MaxSimultaneousRecordingsField.Equals(value) != true)) {
                    this.MaxSimultaneousRecordingsField = value;
                    this.RaisePropertyChanged("MaxSimultaneousRecordings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.RecordingAllowedState RecordingAllowed {
            get {
                return this.RecordingAllowedField;
            }
            set {
                if ((this.RecordingAllowedField.Equals(value) != true)) {
                    this.RecordingAllowedField = value;
                    this.RaisePropertyChanged("RecordingAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.StbLocation STBLocation {
            get {
                return this.STBLocationField;
            }
            set {
                if ((this.STBLocationField.Equals(value) != true)) {
                    this.STBLocationField = value;
                    this.RaisePropertyChanged("STBLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STBModel {
            get {
                return this.STBModelField;
            }
            set {
                if ((object.ReferenceEquals(this.STBModelField, value) != true)) {
                    this.STBModelField = value;
                    this.RaisePropertyChanged("STBModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STBName {
            get {
                return this.STBNameField;
            }
            set {
                if ((object.ReferenceEquals(this.STBNameField, value) != true)) {
                    this.STBNameField = value;
                    this.RaisePropertyChanged("STBName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.TrialGroupIDs TrialGroupID {
            get {
                return this.TrialGroupIDField;
            }
            set {
                if ((this.TrialGroupIDField.Equals(value) != true)) {
                    this.TrialGroupIDField = value;
                    this.RaisePropertyChanged("TrialGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.Gen2StbTvType TvType {
            get {
                return this.TvTypeField;
            }
            set {
                if ((this.TvTypeField.Equals(value) != true)) {
                    this.TvTypeField = value;
                    this.RaisePropertyChanged("TvType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WholeHomeGroup {
            get {
                return this.WholeHomeGroupField;
            }
            set {
                if ((this.WholeHomeGroupField.Equals(value) != true)) {
                    this.WholeHomeGroupField = value;
                    this.RaisePropertyChanged("WholeHomeGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Common.IPTVServiceV3.WiringTypes> WiringType {
            get {
                return this.WiringTypeField;
            }
            set {
                if ((this.WiringTypeField.Equals(value) != true)) {
                    this.WiringTypeField = value;
                    this.RaisePropertyChanged("WiringType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PingResponseType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class PingResponseType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TargetOnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetResponseTimeInMicrosecondsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetIp {
            get {
                return this.TargetIpField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetIpField, value) != true)) {
                    this.TargetIpField = value;
                    this.RaisePropertyChanged("TargetIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TargetOnline {
            get {
                return this.TargetOnlineField;
            }
            set {
                if ((this.TargetOnlineField.Equals(value) != true)) {
                    this.TargetOnlineField = value;
                    this.RaisePropertyChanged("TargetOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetResponseTimeInMicroseconds {
            get {
                return this.TargetResponseTimeInMicrosecondsField;
            }
            set {
                if ((this.TargetResponseTimeInMicrosecondsField.Equals(value) != true)) {
                    this.TargetResponseTimeInMicrosecondsField = value;
                    this.RaisePropertyChanged("TargetResponseTimeInMicroseconds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BandwidthGroupProfileType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class BandwidthGroupProfileType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BandwidthGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BandwidthProfileIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BandwidthGroup {
            get {
                return this.BandwidthGroupField;
            }
            set {
                if ((this.BandwidthGroupField.Equals(value) != true)) {
                    this.BandwidthGroupField = value;
                    this.RaisePropertyChanged("BandwidthGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BandwidthProfileID {
            get {
                return this.BandwidthProfileIDField;
            }
            set {
                if ((this.BandwidthProfileIDField.Equals(value) != true)) {
                    this.BandwidthProfileIDField = value;
                    this.RaisePropertyChanged("BandwidthProfileID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gen1STBDiagnosticCountType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class Gen1STBDiagnosticCountType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BufferOverflowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CcErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvalidDescrambleKeyErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpErrorsLastClearedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscErrorsLastClearedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NandFlashUsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NorFlashUsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PacketErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PacketsOverflowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PacketsReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PacketsSeqErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PacketsTransmittedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParameterErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PictureDecodeErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RamUsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RebootByDiagnosticCmdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RebootBySwUpgradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RebootByUnknownCauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SectionsDiscardedOnCrcCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TcCodeFaultErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VideoDataErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VideoDataOverflowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VideoDataUnderflowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VideoErrorsLastClearedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VideoOutOfSyncErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VideoSpeedDriftErrorsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BufferOverflow {
            get {
                return this.BufferOverflowField;
            }
            set {
                if ((this.BufferOverflowField.Equals(value) != true)) {
                    this.BufferOverflowField = value;
                    this.RaisePropertyChanged("BufferOverflow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CcErrors {
            get {
                return this.CcErrorsField;
            }
            set {
                if ((this.CcErrorsField.Equals(value) != true)) {
                    this.CcErrorsField = value;
                    this.RaisePropertyChanged("CcErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvalidDescrambleKeyErrors {
            get {
                return this.InvalidDescrambleKeyErrorsField;
            }
            set {
                if ((this.InvalidDescrambleKeyErrorsField.Equals(value) != true)) {
                    this.InvalidDescrambleKeyErrorsField = value;
                    this.RaisePropertyChanged("InvalidDescrambleKeyErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpErrorsLastCleared {
            get {
                return this.IpErrorsLastClearedField;
            }
            set {
                if ((object.ReferenceEquals(this.IpErrorsLastClearedField, value) != true)) {
                    this.IpErrorsLastClearedField = value;
                    this.RaisePropertyChanged("IpErrorsLastCleared");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACAddress {
            get {
                return this.MACAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.MACAddressField, value) != true)) {
                    this.MACAddressField = value;
                    this.RaisePropertyChanged("MACAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscErrorsLastCleared {
            get {
                return this.MiscErrorsLastClearedField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscErrorsLastClearedField, value) != true)) {
                    this.MiscErrorsLastClearedField = value;
                    this.RaisePropertyChanged("MiscErrorsLastCleared");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NandFlashUsage {
            get {
                return this.NandFlashUsageField;
            }
            set {
                if ((this.NandFlashUsageField.Equals(value) != true)) {
                    this.NandFlashUsageField = value;
                    this.RaisePropertyChanged("NandFlashUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NorFlashUsage {
            get {
                return this.NorFlashUsageField;
            }
            set {
                if ((this.NorFlashUsageField.Equals(value) != true)) {
                    this.NorFlashUsageField = value;
                    this.RaisePropertyChanged("NorFlashUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PacketErrors {
            get {
                return this.PacketErrorsField;
            }
            set {
                if ((this.PacketErrorsField.Equals(value) != true)) {
                    this.PacketErrorsField = value;
                    this.RaisePropertyChanged("PacketErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PacketsOverflow {
            get {
                return this.PacketsOverflowField;
            }
            set {
                if ((this.PacketsOverflowField.Equals(value) != true)) {
                    this.PacketsOverflowField = value;
                    this.RaisePropertyChanged("PacketsOverflow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PacketsReceived {
            get {
                return this.PacketsReceivedField;
            }
            set {
                if ((this.PacketsReceivedField.Equals(value) != true)) {
                    this.PacketsReceivedField = value;
                    this.RaisePropertyChanged("PacketsReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PacketsSeqErrors {
            get {
                return this.PacketsSeqErrorsField;
            }
            set {
                if ((this.PacketsSeqErrorsField.Equals(value) != true)) {
                    this.PacketsSeqErrorsField = value;
                    this.RaisePropertyChanged("PacketsSeqErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PacketsTransmitted {
            get {
                return this.PacketsTransmittedField;
            }
            set {
                if ((this.PacketsTransmittedField.Equals(value) != true)) {
                    this.PacketsTransmittedField = value;
                    this.RaisePropertyChanged("PacketsTransmitted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParameterErrors {
            get {
                return this.ParameterErrorsField;
            }
            set {
                if ((this.ParameterErrorsField.Equals(value) != true)) {
                    this.ParameterErrorsField = value;
                    this.RaisePropertyChanged("ParameterErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PictureDecodeErrors {
            get {
                return this.PictureDecodeErrorsField;
            }
            set {
                if ((this.PictureDecodeErrorsField.Equals(value) != true)) {
                    this.PictureDecodeErrorsField = value;
                    this.RaisePropertyChanged("PictureDecodeErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RamUsage {
            get {
                return this.RamUsageField;
            }
            set {
                if ((this.RamUsageField.Equals(value) != true)) {
                    this.RamUsageField = value;
                    this.RaisePropertyChanged("RamUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RebootByDiagnosticCmd {
            get {
                return this.RebootByDiagnosticCmdField;
            }
            set {
                if ((this.RebootByDiagnosticCmdField.Equals(value) != true)) {
                    this.RebootByDiagnosticCmdField = value;
                    this.RaisePropertyChanged("RebootByDiagnosticCmd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RebootBySwUpgrade {
            get {
                return this.RebootBySwUpgradeField;
            }
            set {
                if ((this.RebootBySwUpgradeField.Equals(value) != true)) {
                    this.RebootBySwUpgradeField = value;
                    this.RaisePropertyChanged("RebootBySwUpgrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RebootByUnknownCause {
            get {
                return this.RebootByUnknownCauseField;
            }
            set {
                if ((this.RebootByUnknownCauseField.Equals(value) != true)) {
                    this.RebootByUnknownCauseField = value;
                    this.RaisePropertyChanged("RebootByUnknownCause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SectionsDiscardedOnCrcCheck {
            get {
                return this.SectionsDiscardedOnCrcCheckField;
            }
            set {
                if ((this.SectionsDiscardedOnCrcCheckField.Equals(value) != true)) {
                    this.SectionsDiscardedOnCrcCheckField = value;
                    this.RaisePropertyChanged("SectionsDiscardedOnCrcCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TcCodeFaultErrors {
            get {
                return this.TcCodeFaultErrorsField;
            }
            set {
                if ((this.TcCodeFaultErrorsField.Equals(value) != true)) {
                    this.TcCodeFaultErrorsField = value;
                    this.RaisePropertyChanged("TcCodeFaultErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VideoDataErrors {
            get {
                return this.VideoDataErrorsField;
            }
            set {
                if ((this.VideoDataErrorsField.Equals(value) != true)) {
                    this.VideoDataErrorsField = value;
                    this.RaisePropertyChanged("VideoDataErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VideoDataOverflow {
            get {
                return this.VideoDataOverflowField;
            }
            set {
                if ((this.VideoDataOverflowField.Equals(value) != true)) {
                    this.VideoDataOverflowField = value;
                    this.RaisePropertyChanged("VideoDataOverflow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VideoDataUnderflow {
            get {
                return this.VideoDataUnderflowField;
            }
            set {
                if ((this.VideoDataUnderflowField.Equals(value) != true)) {
                    this.VideoDataUnderflowField = value;
                    this.RaisePropertyChanged("VideoDataUnderflow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoErrorsLastCleared {
            get {
                return this.VideoErrorsLastClearedField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoErrorsLastClearedField, value) != true)) {
                    this.VideoErrorsLastClearedField = value;
                    this.RaisePropertyChanged("VideoErrorsLastCleared");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VideoOutOfSyncErrors {
            get {
                return this.VideoOutOfSyncErrorsField;
            }
            set {
                if ((this.VideoOutOfSyncErrorsField.Equals(value) != true)) {
                    this.VideoOutOfSyncErrorsField = value;
                    this.RaisePropertyChanged("VideoOutOfSyncErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VideoSpeedDriftErrors {
            get {
                return this.VideoSpeedDriftErrorsField;
            }
            set {
                if ((this.VideoSpeedDriftErrorsField.Equals(value) != true)) {
                    this.VideoSpeedDriftErrorsField = value;
                    this.RaisePropertyChanged("VideoSpeedDriftErrors");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gen1STBConfigurationDiagnosticType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class Gen1STBConfigurationDiagnosticType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcquiredTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentConnectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExperationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressAquiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IPTVServiceV3.Gen1STBApplicationType[] MSTBApplicationsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberOfApplicationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreviousSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimeHsSiIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimeHsSiPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimeHsSiStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimeLsSiIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimeLsSiPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimeLsSiStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STBHardwareTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STBMiddlewareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STBModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondHsSiIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondHsSiPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondHsSiStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondLsSiIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondLsSiPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondLsSiStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransitReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrialGroupField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcquiredTime {
            get {
                return this.AcquiredTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.AcquiredTimeField, value) != true)) {
                    this.AcquiredTimeField = value;
                    this.RaisePropertyChanged("AcquiredTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectionState {
            get {
                return this.ConnectionStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionStateField, value) != true)) {
                    this.ConnectionStateField = value;
                    this.RaisePropertyChanged("ConnectionState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentConnection {
            get {
                return this.CurrentConnectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentConnectionField, value) != true)) {
                    this.CurrentConnectionField = value;
                    this.RaisePropertyChanged("CurrentConnection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExperationTime {
            get {
                return this.ExperationTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperationTimeField, value) != true)) {
                    this.ExperationTimeField = value;
                    this.RaisePropertyChanged("ExperationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddressAquired {
            get {
                return this.IpAddressAquiredField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressAquiredField, value) != true)) {
                    this.IpAddressAquiredField = value;
                    this.RaisePropertyChanged("IpAddressAquired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACAddress {
            get {
                return this.MACAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.MACAddressField, value) != true)) {
                    this.MACAddressField = value;
                    this.RaisePropertyChanged("MACAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IPTVServiceV3.Gen1STBApplicationType[] MSTBApplicationsList {
            get {
                return this.MSTBApplicationsListField;
            }
            set {
                if ((object.ReferenceEquals(this.MSTBApplicationsListField, value) != true)) {
                    this.MSTBApplicationsListField = value;
                    this.RaisePropertyChanged("MSTBApplicationsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberOfApplications {
            get {
                return this.NumberOfApplicationsField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberOfApplicationsField, value) != true)) {
                    this.NumberOfApplicationsField = value;
                    this.RaisePropertyChanged("NumberOfApplications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreviousSource {
            get {
                return this.PreviousSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.PreviousSourceField, value) != true)) {
                    this.PreviousSourceField = value;
                    this.RaisePropertyChanged("PreviousSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimeHsSiIp {
            get {
                return this.PrimeHsSiIpField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimeHsSiIpField, value) != true)) {
                    this.PrimeHsSiIpField = value;
                    this.RaisePropertyChanged("PrimeHsSiIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimeHsSiPort {
            get {
                return this.PrimeHsSiPortField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimeHsSiPortField, value) != true)) {
                    this.PrimeHsSiPortField = value;
                    this.RaisePropertyChanged("PrimeHsSiPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimeHsSiStatus {
            get {
                return this.PrimeHsSiStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimeHsSiStatusField, value) != true)) {
                    this.PrimeHsSiStatusField = value;
                    this.RaisePropertyChanged("PrimeHsSiStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimeLsSiIp {
            get {
                return this.PrimeLsSiIpField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimeLsSiIpField, value) != true)) {
                    this.PrimeLsSiIpField = value;
                    this.RaisePropertyChanged("PrimeLsSiIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimeLsSiPort {
            get {
                return this.PrimeLsSiPortField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimeLsSiPortField, value) != true)) {
                    this.PrimeLsSiPortField = value;
                    this.RaisePropertyChanged("PrimeLsSiPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimeLsSiStatus {
            get {
                return this.PrimeLsSiStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimeLsSiStatusField, value) != true)) {
                    this.PrimeLsSiStatusField = value;
                    this.RaisePropertyChanged("PrimeLsSiStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STBHardwareType {
            get {
                return this.STBHardwareTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.STBHardwareTypeField, value) != true)) {
                    this.STBHardwareTypeField = value;
                    this.RaisePropertyChanged("STBHardwareType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STBMiddlewareVersion {
            get {
                return this.STBMiddlewareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.STBMiddlewareVersionField, value) != true)) {
                    this.STBMiddlewareVersionField = value;
                    this.RaisePropertyChanged("STBMiddlewareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STBModel {
            get {
                return this.STBModelField;
            }
            set {
                if ((object.ReferenceEquals(this.STBModelField, value) != true)) {
                    this.STBModelField = value;
                    this.RaisePropertyChanged("STBModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondHsSiIp {
            get {
                return this.SecondHsSiIpField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondHsSiIpField, value) != true)) {
                    this.SecondHsSiIpField = value;
                    this.RaisePropertyChanged("SecondHsSiIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondHsSiPort {
            get {
                return this.SecondHsSiPortField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondHsSiPortField, value) != true)) {
                    this.SecondHsSiPortField = value;
                    this.RaisePropertyChanged("SecondHsSiPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondHsSiStatus {
            get {
                return this.SecondHsSiStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondHsSiStatusField, value) != true)) {
                    this.SecondHsSiStatusField = value;
                    this.RaisePropertyChanged("SecondHsSiStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondLsSiIp {
            get {
                return this.SecondLsSiIpField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondLsSiIpField, value) != true)) {
                    this.SecondLsSiIpField = value;
                    this.RaisePropertyChanged("SecondLsSiIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondLsSiPort {
            get {
                return this.SecondLsSiPortField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondLsSiPortField, value) != true)) {
                    this.SecondLsSiPortField = value;
                    this.RaisePropertyChanged("SecondLsSiPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondLsSiStatus {
            get {
                return this.SecondLsSiStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondLsSiStatusField, value) != true)) {
                    this.SecondLsSiStatusField = value;
                    this.RaisePropertyChanged("SecondLsSiStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransitReason {
            get {
                return this.TransitReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.TransitReasonField, value) != true)) {
                    this.TransitReasonField = value;
                    this.RaisePropertyChanged("TransitReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrialGroup {
            get {
                return this.TrialGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.TrialGroupField, value) != true)) {
                    this.TrialGroupField = value;
                    this.RaisePropertyChanged("TrialGroup");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gen1STBApplicationType", Namespace="http://schemas.datacontract.org/2004/07/IPTVServiceV3")]
    [System.SerializableAttribute()]
    public partial class Gen1STBApplicationType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationVersion {
            get {
                return this.ApplicationVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationVersionField, value) != true)) {
                    this.ApplicationVersionField = value;
                    this.RaisePropertyChanged("ApplicationVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IPTVServiceV3.IIPTVService")]
    public interface IIPTVService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetAccountsBySubAddress", ReplyAction="http://tempuri.org/IIPTVService/GetAccountsBySubAddressResponse")]
        Common.IPTVServiceV3.IPTVAccountType[] GetAccountsBySubAddress(string loginToken, string subscriberAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetAccountsBySubAddress", ReplyAction="http://tempuri.org/IIPTVService/GetAccountsBySubAddressResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.IPTVAccountType[]> GetAccountsBySubAddressAsync(string loginToken, string subscriberAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/FindSubscribersByMAC", ReplyAction="http://tempuri.org/IIPTVService/FindSubscribersByMACResponse")]
        Common.IPTVServiceV3.IPTVAccountType[] FindSubscribersByMAC(string loginToken, string macAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/FindSubscribersByMAC", ReplyAction="http://tempuri.org/IIPTVService/FindSubscribersByMACResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.IPTVAccountType[]> FindSubscribersByMACAsync(string loginToken, string macAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/FindSubscribersBySerialNumber", ReplyAction="http://tempuri.org/IIPTVService/FindSubscribersBySerialNumberResponse")]
        Common.IPTVServiceV3.IPTVAccountType[] FindSubscribersBySerialNumber(string loginToken, string serialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/FindSubscribersBySerialNumber", ReplyAction="http://tempuri.org/IIPTVService/FindSubscribersBySerialNumberResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.IPTVAccountType[]> FindSubscribersBySerialNumberAsync(string loginToken, string serialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/SetIPTVAccount", ReplyAction="http://tempuri.org/IIPTVService/SetIPTVAccountResponse")]
        void SetIPTVAccount(string loginToken, Common.IPTVServiceV3.IPTVAccountType iptvAccount, Common.IPTVServiceV3.SubscriberType subscriberInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/SetIPTVAccount", ReplyAction="http://tempuri.org/IIPTVService/SetIPTVAccountResponse")]
        System.Threading.Tasks.Task SetIPTVAccountAsync(string loginToken, Common.IPTVServiceV3.IPTVAccountType iptvAccount, Common.IPTVServiceV3.SubscriberType subscriberInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/DeleteIPTVAccount", ReplyAction="http://tempuri.org/IIPTVService/DeleteIPTVAccountResponse")]
        void DeleteIPTVAccount(string loginToken, string subscriberID, string serviceReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/DeleteIPTVAccount", ReplyAction="http://tempuri.org/IIPTVService/DeleteIPTVAccountResponse")]
        System.Threading.Tasks.Task DeleteIPTVAccountAsync(string loginToken, string subscriberID, string serviceReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/ForceDeleteIPTVAccount", ReplyAction="http://tempuri.org/IIPTVService/ForceDeleteIPTVAccountResponse")]
        void ForceDeleteIPTVAccount(string loginToken, string subscriberID, string serviceReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/ForceDeleteIPTVAccount", ReplyAction="http://tempuri.org/IIPTVService/ForceDeleteIPTVAccountResponse")]
        System.Threading.Tasks.Task ForceDeleteIPTVAccountAsync(string loginToken, string subscriberID, string serviceReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetSubscriberAccount", ReplyAction="http://tempuri.org/IIPTVService/GetSubscriberAccountResponse")]
        Common.IPTVServiceV3.IPTVAccountType GetSubscriberAccount(string loginToken, string serviceReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetSubscriberAccount", ReplyAction="http://tempuri.org/IIPTVService/GetSubscriberAccountResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.IPTVAccountType> GetSubscriberAccountAsync(string loginToken, string serviceReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/ChangeServiceReference", ReplyAction="http://tempuri.org/IIPTVService/ChangeServiceReferenceResponse")]
        void ChangeServiceReference(string loginToken, string oldServiceReference, string newServiceReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/ChangeServiceReference", ReplyAction="http://tempuri.org/IIPTVService/ChangeServiceReferenceResponse")]
        System.Threading.Tasks.Task ChangeServiceReferenceAsync(string loginToken, string oldServiceReference, string newServiceReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/DeleteIPTVAccountByBilling", ReplyAction="http://tempuri.org/IIPTVService/DeleteIPTVAccountByBillingResponse")]
        void DeleteIPTVAccountByBilling(string loginToken, string billingAccountNumber, string billingServiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/DeleteIPTVAccountByBilling", ReplyAction="http://tempuri.org/IIPTVService/DeleteIPTVAccountByBillingResponse")]
        System.Threading.Tasks.Task DeleteIPTVAccountByBillingAsync(string loginToken, string billingAccountNumber, string billingServiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/ForceDeleteIPTVAccountByBilling", ReplyAction="http://tempuri.org/IIPTVService/ForceDeleteIPTVAccountByBillingResponse")]
        void ForceDeleteIPTVAccountByBilling(string loginToken, string billingAccountNumber, string billingServiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/ForceDeleteIPTVAccountByBilling", ReplyAction="http://tempuri.org/IIPTVService/ForceDeleteIPTVAccountByBillingResponse")]
        System.Threading.Tasks.Task ForceDeleteIPTVAccountByBillingAsync(string loginToken, string billingAccountNumber, string billingServiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetSubscriberAccountByBilling", ReplyAction="http://tempuri.org/IIPTVService/GetSubscriberAccountByBillingResponse")]
        Common.IPTVServiceV3.IPTVAccountType GetSubscriberAccountByBilling(string loginToken, string billingAccountNumber, string billingServiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetSubscriberAccountByBilling", ReplyAction="http://tempuri.org/IIPTVService/GetSubscriberAccountByBillingResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.IPTVAccountType> GetSubscriberAccountByBillingAsync(string loginToken, string billingAccountNumber, string billingServiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetSubscriberAccountsByBilling", ReplyAction="http://tempuri.org/IIPTVService/GetSubscriberAccountsByBillingResponse")]
        Common.IPTVServiceV3.IPTVAccountType[] GetSubscriberAccountsByBilling(string loginToken, string billingAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetSubscriberAccountsByBilling", ReplyAction="http://tempuri.org/IIPTVService/GetSubscriberAccountsByBillingResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.IPTVAccountType[]> GetSubscriberAccountsByBillingAsync(string loginToken, string billingAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetSubscriberAccountBySubscriberId", ReplyAction="http://tempuri.org/IIPTVService/GetSubscriberAccountBySubscriberIdResponse")]
        Common.IPTVServiceV3.IPTVAccountType GetSubscriberAccountBySubscriberId(string loginToken, string subscriberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetSubscriberAccountBySubscriberId", ReplyAction="http://tempuri.org/IIPTVService/GetSubscriberAccountBySubscriberIdResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.IPTVAccountType> GetSubscriberAccountBySubscriberIdAsync(string loginToken, string subscriberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetAllChannelLineups", ReplyAction="http://tempuri.org/IIPTVService/GetAllChannelLineupsResponse")]
        Common.IPTVServiceV3.ChannelLineupType[] GetAllChannelLineups(string loginToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetAllChannelLineups", ReplyAction="http://tempuri.org/IIPTVService/GetAllChannelLineupsResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.ChannelLineupType[]> GetAllChannelLineupsAsync(string loginToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetAllServiceFeatures", ReplyAction="http://tempuri.org/IIPTVService/GetAllServiceFeaturesResponse")]
        Common.IPTVServiceV3.IptvFeatureType[] GetAllServiceFeatures(string loginToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetAllServiceFeatures", ReplyAction="http://tempuri.org/IIPTVService/GetAllServiceFeaturesResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.IptvFeatureType[]> GetAllServiceFeaturesAsync(string loginToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/AuthorizeStb", ReplyAction="http://tempuri.org/IIPTVService/AuthorizeStbResponse")]
        void AuthorizeStb(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/AuthorizeStb", ReplyAction="http://tempuri.org/IIPTVService/AuthorizeStbResponse")]
        System.Threading.Tasks.Task AuthorizeStbAsync(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/DeauthorizeStb", ReplyAction="http://tempuri.org/IIPTVService/DeauthorizeStbResponse")]
        void DeauthorizeStb(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/DeauthorizeStb", ReplyAction="http://tempuri.org/IIPTVService/DeauthorizeStbResponse")]
        System.Threading.Tasks.Task DeauthorizeStbAsync(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/RebootStb", ReplyAction="http://tempuri.org/IIPTVService/RebootStbResponse")]
        void RebootStb(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/RebootStb", ReplyAction="http://tempuri.org/IIPTVService/RebootStbResponse")]
        System.Threading.Tasks.Task RebootStbAsync(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/ForceStbSoftwareLoad", ReplyAction="http://tempuri.org/IIPTVService/ForceStbSoftwareLoadResponse")]
        void ForceStbSoftwareLoad(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/ForceStbSoftwareLoad", ReplyAction="http://tempuri.org/IIPTVService/ForceStbSoftwareLoadResponse")]
        System.Threading.Tasks.Task ForceStbSoftwareLoadAsync(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/Gen2ChangeStbPurchasePIN", ReplyAction="http://tempuri.org/IIPTVService/Gen2ChangeStbPurchasePINResponse")]
        void Gen2ChangeStbPurchasePIN(string loginToken, string subscriberId, string stbMacAddress, string newPIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/Gen2ChangeStbPurchasePIN", ReplyAction="http://tempuri.org/IIPTVService/Gen2ChangeStbPurchasePINResponse")]
        System.Threading.Tasks.Task Gen2ChangeStbPurchasePINAsync(string loginToken, string subscriberId, string stbMacAddress, string newPIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/Gen2ChangeStbOverridePIN", ReplyAction="http://tempuri.org/IIPTVService/Gen2ChangeStbOverridePINResponse")]
        void Gen2ChangeStbOverridePIN(string loginToken, string subscriberId, string stbMacAddress, string newPIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/Gen2ChangeStbOverridePIN", ReplyAction="http://tempuri.org/IIPTVService/Gen2ChangeStbOverridePINResponse")]
        System.Threading.Tasks.Task Gen2ChangeStbOverridePINAsync(string loginToken, string subscriberId, string stbMacAddress, string newPIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetGen2AvStatsFromStb", ReplyAction="http://tempuri.org/IIPTVService/GetGen2AvStatsFromStbResponse")]
        Common.IPTVServiceV3.Gen2AvStatsType GetGen2AvStatsFromStb(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetGen2AvStatsFromStb", ReplyAction="http://tempuri.org/IIPTVService/GetGen2AvStatsFromStbResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.Gen2AvStatsType> GetGen2AvStatsFromStbAsync(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetGen2NetworkStatsFromStb", ReplyAction="http://tempuri.org/IIPTVService/GetGen2NetworkStatsFromStbResponse")]
        Common.IPTVServiceV3.Gen2NetworkStatsType GetGen2NetworkStatsFromStb(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetGen2NetworkStatsFromStb", ReplyAction="http://tempuri.org/IIPTVService/GetGen2NetworkStatsFromStbResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.Gen2NetworkStatsType> GetGen2NetworkStatsFromStbAsync(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetGen2MemStatsFromStb", ReplyAction="http://tempuri.org/IIPTVService/GetGen2MemStatsFromStbResponse")]
        Common.IPTVServiceV3.Gen2MemStatsType GetGen2MemStatsFromStb(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetGen2MemStatsFromStb", ReplyAction="http://tempuri.org/IIPTVService/GetGen2MemStatsFromStbResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.Gen2MemStatsType> GetGen2MemStatsFromStbAsync(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetGen2BoxInfoFromStb", ReplyAction="http://tempuri.org/IIPTVService/GetGen2BoxInfoFromStbResponse")]
        Common.IPTVServiceV3.Gen2BoxInfoType GetGen2BoxInfoFromStb(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetGen2BoxInfoFromStb", ReplyAction="http://tempuri.org/IIPTVService/GetGen2BoxInfoFromStbResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.Gen2BoxInfoType> GetGen2BoxInfoFromStbAsync(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/Gen2AddStbToAccount", ReplyAction="http://tempuri.org/IIPTVService/Gen2AddStbToAccountResponse")]
        Common.IPTVServiceV3.SetTopBoxType Gen2AddStbToAccount(string loginToken, string subscriberId, Common.IPTVServiceV3.AddSetTopBoxType stbToAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/Gen2AddStbToAccount", ReplyAction="http://tempuri.org/IIPTVService/Gen2AddStbToAccountResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.SetTopBoxType> Gen2AddStbToAccountAsync(string loginToken, string subscriberId, Common.IPTVServiceV3.AddSetTopBoxType stbToAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/DeleteStb", ReplyAction="http://tempuri.org/IIPTVService/DeleteStbResponse")]
        void DeleteStb(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/DeleteStb", ReplyAction="http://tempuri.org/IIPTVService/DeleteStbResponse")]
        System.Threading.Tasks.Task DeleteStbAsync(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/PingStb", ReplyAction="http://tempuri.org/IIPTVService/PingStbResponse")]
        Common.IPTVServiceV3.PingResponseType PingStb(string loginToken, string serviceReference, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/PingStb", ReplyAction="http://tempuri.org/IIPTVService/PingStbResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.PingResponseType> PingStbAsync(string loginToken, string serviceReference, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/PingStbs", ReplyAction="http://tempuri.org/IIPTVService/PingStbsResponse")]
        Common.IPTVServiceV3.PingResponseType[] PingStbs(string loginToken, string serviceReference, string[] ipAddresses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/PingStbs", ReplyAction="http://tempuri.org/IIPTVService/PingStbsResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.PingResponseType[]> PingStbsAsync(string loginToken, string serviceReference, string[] ipAddresses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/PingStbsAdvanced", ReplyAction="http://tempuri.org/IIPTVService/PingStbsAdvancedResponse")]
        Common.IPTVServiceV3.PingResponseType[] PingStbsAdvanced(string loginToken, string serviceReference, string[] ipAddresses, uint stbTimeoutMilliseconds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/PingStbsAdvanced", ReplyAction="http://tempuri.org/IIPTVService/PingStbsAdvancedResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.PingResponseType[]> PingStbsAdvancedAsync(string loginToken, string serviceReference, string[] ipAddresses, uint stbTimeoutMilliseconds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetBandwidthGroupProfiles", ReplyAction="http://tempuri.org/IIPTVService/GetBandwidthGroupProfilesResponse")]
        Common.IPTVServiceV3.BandwidthGroupProfileType[] GetBandwidthGroupProfiles(string loginToken, string subscriberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetBandwidthGroupProfiles", ReplyAction="http://tempuri.org/IIPTVService/GetBandwidthGroupProfilesResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.BandwidthGroupProfileType[]> GetBandwidthGroupProfilesAsync(string loginToken, string subscriberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/InsertBandwidthGroupProfile", ReplyAction="http://tempuri.org/IIPTVService/InsertBandwidthGroupProfileResponse")]
        void InsertBandwidthGroupProfile(string loginToken, string subscriberID, string serviceReference, Common.IPTVServiceV3.BandwidthGroupProfileType[] groupProfiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/InsertBandwidthGroupProfile", ReplyAction="http://tempuri.org/IIPTVService/InsertBandwidthGroupProfileResponse")]
        System.Threading.Tasks.Task InsertBandwidthGroupProfileAsync(string loginToken, string subscriberID, string serviceReference, Common.IPTVServiceV3.BandwidthGroupProfileType[] groupProfiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/DeleteBandwidthGroupProfile", ReplyAction="http://tempuri.org/IIPTVService/DeleteBandwidthGroupProfileResponse")]
        void DeleteBandwidthGroupProfile(string loginToken, string subscriberID, int[] bandwidthGroups);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/DeleteBandwidthGroupProfile", ReplyAction="http://tempuri.org/IIPTVService/DeleteBandwidthGroupProfileResponse")]
        System.Threading.Tasks.Task DeleteBandwidthGroupProfileAsync(string loginToken, string subscriberID, int[] bandwidthGroups);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/SendDiagnosticCountsRequest", ReplyAction="http://tempuri.org/IIPTVService/SendDiagnosticCountsRequestResponse")]
        Common.IPTVServiceV3.Gen1STBDiagnosticCountType SendDiagnosticCountsRequest(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/SendDiagnosticCountsRequest", ReplyAction="http://tempuri.org/IIPTVService/SendDiagnosticCountsRequestResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.Gen1STBDiagnosticCountType> SendDiagnosticCountsRequestAsync(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/SendDiagnosticConfigurationRequest", ReplyAction="http://tempuri.org/IIPTVService/SendDiagnosticConfigurationRequestResponse")]
        Common.IPTVServiceV3.Gen1STBConfigurationDiagnosticType SendDiagnosticConfigurationRequest(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/SendDiagnosticConfigurationRequest", ReplyAction="http://tempuri.org/IIPTVService/SendDiagnosticConfigurationRequestResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.Gen1STBConfigurationDiagnosticType> SendDiagnosticConfigurationRequestAsync(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/SendDiagnosticClearCountsRequest", ReplyAction="http://tempuri.org/IIPTVService/SendDiagnosticClearCountsRequestResponse")]
        Common.IPTVServiceV3.Gen1STBDiagnosticCountType SendDiagnosticClearCountsRequest(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/SendDiagnosticClearCountsRequest", ReplyAction="http://tempuri.org/IIPTVService/SendDiagnosticClearCountsRequestResponse")]
        System.Threading.Tasks.Task<Common.IPTVServiceV3.Gen1STBDiagnosticCountType> SendDiagnosticClearCountsRequestAsync(string loginToken, string subscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetDefaultChargeLimit", ReplyAction="http://tempuri.org/IIPTVService/GetDefaultChargeLimitResponse")]
        int GetDefaultChargeLimit(string loginToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/GetDefaultChargeLimit", ReplyAction="http://tempuri.org/IIPTVService/GetDefaultChargeLimitResponse")]
        System.Threading.Tasks.Task<int> GetDefaultChargeLimitAsync(string loginToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/MoveStbBetweenAccounts", ReplyAction="http://tempuri.org/IIPTVService/MoveStbBetweenAccountsResponse")]
        void MoveStbBetweenAccounts(string loginToken, string originalSubscriberId, string newSubscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/MoveStbBetweenAccounts", ReplyAction="http://tempuri.org/IIPTVService/MoveStbBetweenAccountsResponse")]
        System.Threading.Tasks.Task MoveStbBetweenAccountsAsync(string loginToken, string originalSubscriberId, string newSubscriberId, string stbMacAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/SuspendAccount", ReplyAction="http://tempuri.org/IIPTVService/SuspendAccountResponse")]
        void SuspendAccount(string loginToken, string subscriberId, bool suspend, string suspendReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIPTVService/SuspendAccount", ReplyAction="http://tempuri.org/IIPTVService/SuspendAccountResponse")]
        System.Threading.Tasks.Task SuspendAccountAsync(string loginToken, string subscriberId, bool suspend, string suspendReason);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIPTVServiceChannel : Common.IPTVServiceV3.IIPTVService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IPTVServiceClient : System.ServiceModel.ClientBase<Common.IPTVServiceV3.IIPTVService>, Common.IPTVServiceV3.IIPTVService {
        
        public IPTVServiceClient() {
        }
        
        public IPTVServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IPTVServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IPTVServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IPTVServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Common.IPTVServiceV3.IPTVAccountType[] GetAccountsBySubAddress(string loginToken, string subscriberAddress) {
            return base.Channel.GetAccountsBySubAddress(loginToken, subscriberAddress);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.IPTVAccountType[]> GetAccountsBySubAddressAsync(string loginToken, string subscriberAddress) {
            return base.Channel.GetAccountsBySubAddressAsync(loginToken, subscriberAddress);
        }
        
        public Common.IPTVServiceV3.IPTVAccountType[] FindSubscribersByMAC(string loginToken, string macAddress) {
            return base.Channel.FindSubscribersByMAC(loginToken, macAddress);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.IPTVAccountType[]> FindSubscribersByMACAsync(string loginToken, string macAddress) {
            return base.Channel.FindSubscribersByMACAsync(loginToken, macAddress);
        }
        
        public Common.IPTVServiceV3.IPTVAccountType[] FindSubscribersBySerialNumber(string loginToken, string serialNumber) {
            return base.Channel.FindSubscribersBySerialNumber(loginToken, serialNumber);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.IPTVAccountType[]> FindSubscribersBySerialNumberAsync(string loginToken, string serialNumber) {
            return base.Channel.FindSubscribersBySerialNumberAsync(loginToken, serialNumber);
        }
        
        public void SetIPTVAccount(string loginToken, Common.IPTVServiceV3.IPTVAccountType iptvAccount, Common.IPTVServiceV3.SubscriberType subscriberInfo) {
            base.Channel.SetIPTVAccount(loginToken, iptvAccount, subscriberInfo);
        }
        
        public System.Threading.Tasks.Task SetIPTVAccountAsync(string loginToken, Common.IPTVServiceV3.IPTVAccountType iptvAccount, Common.IPTVServiceV3.SubscriberType subscriberInfo) {
            return base.Channel.SetIPTVAccountAsync(loginToken, iptvAccount, subscriberInfo);
        }
        
        public void DeleteIPTVAccount(string loginToken, string subscriberID, string serviceReference) {
            base.Channel.DeleteIPTVAccount(loginToken, subscriberID, serviceReference);
        }
        
        public System.Threading.Tasks.Task DeleteIPTVAccountAsync(string loginToken, string subscriberID, string serviceReference) {
            return base.Channel.DeleteIPTVAccountAsync(loginToken, subscriberID, serviceReference);
        }
        
        public void ForceDeleteIPTVAccount(string loginToken, string subscriberID, string serviceReference) {
            base.Channel.ForceDeleteIPTVAccount(loginToken, subscriberID, serviceReference);
        }
        
        public System.Threading.Tasks.Task ForceDeleteIPTVAccountAsync(string loginToken, string subscriberID, string serviceReference) {
            return base.Channel.ForceDeleteIPTVAccountAsync(loginToken, subscriberID, serviceReference);
        }
        
        public Common.IPTVServiceV3.IPTVAccountType GetSubscriberAccount(string loginToken, string serviceReference) {
            return base.Channel.GetSubscriberAccount(loginToken, serviceReference);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.IPTVAccountType> GetSubscriberAccountAsync(string loginToken, string serviceReference) {
            return base.Channel.GetSubscriberAccountAsync(loginToken, serviceReference);
        }
        
        public void ChangeServiceReference(string loginToken, string oldServiceReference, string newServiceReference) {
            base.Channel.ChangeServiceReference(loginToken, oldServiceReference, newServiceReference);
        }
        
        public System.Threading.Tasks.Task ChangeServiceReferenceAsync(string loginToken, string oldServiceReference, string newServiceReference) {
            return base.Channel.ChangeServiceReferenceAsync(loginToken, oldServiceReference, newServiceReference);
        }
        
        public void DeleteIPTVAccountByBilling(string loginToken, string billingAccountNumber, string billingServiceId) {
            base.Channel.DeleteIPTVAccountByBilling(loginToken, billingAccountNumber, billingServiceId);
        }
        
        public System.Threading.Tasks.Task DeleteIPTVAccountByBillingAsync(string loginToken, string billingAccountNumber, string billingServiceId) {
            return base.Channel.DeleteIPTVAccountByBillingAsync(loginToken, billingAccountNumber, billingServiceId);
        }
        
        public void ForceDeleteIPTVAccountByBilling(string loginToken, string billingAccountNumber, string billingServiceId) {
            base.Channel.ForceDeleteIPTVAccountByBilling(loginToken, billingAccountNumber, billingServiceId);
        }
        
        public System.Threading.Tasks.Task ForceDeleteIPTVAccountByBillingAsync(string loginToken, string billingAccountNumber, string billingServiceId) {
            return base.Channel.ForceDeleteIPTVAccountByBillingAsync(loginToken, billingAccountNumber, billingServiceId);
        }
        
        public Common.IPTVServiceV3.IPTVAccountType GetSubscriberAccountByBilling(string loginToken, string billingAccountNumber, string billingServiceId) {
            return base.Channel.GetSubscriberAccountByBilling(loginToken, billingAccountNumber, billingServiceId);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.IPTVAccountType> GetSubscriberAccountByBillingAsync(string loginToken, string billingAccountNumber, string billingServiceId) {
            return base.Channel.GetSubscriberAccountByBillingAsync(loginToken, billingAccountNumber, billingServiceId);
        }
        
        public Common.IPTVServiceV3.IPTVAccountType[] GetSubscriberAccountsByBilling(string loginToken, string billingAccountNumber) {
            return base.Channel.GetSubscriberAccountsByBilling(loginToken, billingAccountNumber);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.IPTVAccountType[]> GetSubscriberAccountsByBillingAsync(string loginToken, string billingAccountNumber) {
            return base.Channel.GetSubscriberAccountsByBillingAsync(loginToken, billingAccountNumber);
        }
        
        public Common.IPTVServiceV3.IPTVAccountType GetSubscriberAccountBySubscriberId(string loginToken, string subscriberId) {
            return base.Channel.GetSubscriberAccountBySubscriberId(loginToken, subscriberId);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.IPTVAccountType> GetSubscriberAccountBySubscriberIdAsync(string loginToken, string subscriberId) {
            return base.Channel.GetSubscriberAccountBySubscriberIdAsync(loginToken, subscriberId);
        }
        
        public Common.IPTVServiceV3.ChannelLineupType[] GetAllChannelLineups(string loginToken) {
            return base.Channel.GetAllChannelLineups(loginToken);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.ChannelLineupType[]> GetAllChannelLineupsAsync(string loginToken) {
            return base.Channel.GetAllChannelLineupsAsync(loginToken);
        }
        
        public Common.IPTVServiceV3.IptvFeatureType[] GetAllServiceFeatures(string loginToken) {
            return base.Channel.GetAllServiceFeatures(loginToken);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.IptvFeatureType[]> GetAllServiceFeaturesAsync(string loginToken) {
            return base.Channel.GetAllServiceFeaturesAsync(loginToken);
        }
        
        public void AuthorizeStb(string loginToken, string subscriberId, string stbMacAddress) {
            base.Channel.AuthorizeStb(loginToken, subscriberId, stbMacAddress);
        }
        
        public System.Threading.Tasks.Task AuthorizeStbAsync(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.AuthorizeStbAsync(loginToken, subscriberId, stbMacAddress);
        }
        
        public void DeauthorizeStb(string loginToken, string subscriberId, string stbMacAddress) {
            base.Channel.DeauthorizeStb(loginToken, subscriberId, stbMacAddress);
        }
        
        public System.Threading.Tasks.Task DeauthorizeStbAsync(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.DeauthorizeStbAsync(loginToken, subscriberId, stbMacAddress);
        }
        
        public void RebootStb(string loginToken, string subscriberId, string stbMacAddress) {
            base.Channel.RebootStb(loginToken, subscriberId, stbMacAddress);
        }
        
        public System.Threading.Tasks.Task RebootStbAsync(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.RebootStbAsync(loginToken, subscriberId, stbMacAddress);
        }
        
        public void ForceStbSoftwareLoad(string loginToken, string subscriberId, string stbMacAddress) {
            base.Channel.ForceStbSoftwareLoad(loginToken, subscriberId, stbMacAddress);
        }
        
        public System.Threading.Tasks.Task ForceStbSoftwareLoadAsync(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.ForceStbSoftwareLoadAsync(loginToken, subscriberId, stbMacAddress);
        }
        
        public void Gen2ChangeStbPurchasePIN(string loginToken, string subscriberId, string stbMacAddress, string newPIN) {
            base.Channel.Gen2ChangeStbPurchasePIN(loginToken, subscriberId, stbMacAddress, newPIN);
        }
        
        public System.Threading.Tasks.Task Gen2ChangeStbPurchasePINAsync(string loginToken, string subscriberId, string stbMacAddress, string newPIN) {
            return base.Channel.Gen2ChangeStbPurchasePINAsync(loginToken, subscriberId, stbMacAddress, newPIN);
        }
        
        public void Gen2ChangeStbOverridePIN(string loginToken, string subscriberId, string stbMacAddress, string newPIN) {
            base.Channel.Gen2ChangeStbOverridePIN(loginToken, subscriberId, stbMacAddress, newPIN);
        }
        
        public System.Threading.Tasks.Task Gen2ChangeStbOverridePINAsync(string loginToken, string subscriberId, string stbMacAddress, string newPIN) {
            return base.Channel.Gen2ChangeStbOverridePINAsync(loginToken, subscriberId, stbMacAddress, newPIN);
        }
        
        public Common.IPTVServiceV3.Gen2AvStatsType GetGen2AvStatsFromStb(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.GetGen2AvStatsFromStb(loginToken, subscriberId, stbMacAddress);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.Gen2AvStatsType> GetGen2AvStatsFromStbAsync(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.GetGen2AvStatsFromStbAsync(loginToken, subscriberId, stbMacAddress);
        }
        
        public Common.IPTVServiceV3.Gen2NetworkStatsType GetGen2NetworkStatsFromStb(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.GetGen2NetworkStatsFromStb(loginToken, subscriberId, stbMacAddress);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.Gen2NetworkStatsType> GetGen2NetworkStatsFromStbAsync(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.GetGen2NetworkStatsFromStbAsync(loginToken, subscriberId, stbMacAddress);
        }
        
        public Common.IPTVServiceV3.Gen2MemStatsType GetGen2MemStatsFromStb(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.GetGen2MemStatsFromStb(loginToken, subscriberId, stbMacAddress);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.Gen2MemStatsType> GetGen2MemStatsFromStbAsync(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.GetGen2MemStatsFromStbAsync(loginToken, subscriberId, stbMacAddress);
        }
        
        public Common.IPTVServiceV3.Gen2BoxInfoType GetGen2BoxInfoFromStb(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.GetGen2BoxInfoFromStb(loginToken, subscriberId, stbMacAddress);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.Gen2BoxInfoType> GetGen2BoxInfoFromStbAsync(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.GetGen2BoxInfoFromStbAsync(loginToken, subscriberId, stbMacAddress);
        }
        
        public Common.IPTVServiceV3.SetTopBoxType Gen2AddStbToAccount(string loginToken, string subscriberId, Common.IPTVServiceV3.AddSetTopBoxType stbToAdd) {
            return base.Channel.Gen2AddStbToAccount(loginToken, subscriberId, stbToAdd);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.SetTopBoxType> Gen2AddStbToAccountAsync(string loginToken, string subscriberId, Common.IPTVServiceV3.AddSetTopBoxType stbToAdd) {
            return base.Channel.Gen2AddStbToAccountAsync(loginToken, subscriberId, stbToAdd);
        }
        
        public void DeleteStb(string loginToken, string subscriberId, string stbMacAddress) {
            base.Channel.DeleteStb(loginToken, subscriberId, stbMacAddress);
        }
        
        public System.Threading.Tasks.Task DeleteStbAsync(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.DeleteStbAsync(loginToken, subscriberId, stbMacAddress);
        }
        
        public Common.IPTVServiceV3.PingResponseType PingStb(string loginToken, string serviceReference, string ipAddress) {
            return base.Channel.PingStb(loginToken, serviceReference, ipAddress);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.PingResponseType> PingStbAsync(string loginToken, string serviceReference, string ipAddress) {
            return base.Channel.PingStbAsync(loginToken, serviceReference, ipAddress);
        }
        
        public Common.IPTVServiceV3.PingResponseType[] PingStbs(string loginToken, string serviceReference, string[] ipAddresses) {
            return base.Channel.PingStbs(loginToken, serviceReference, ipAddresses);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.PingResponseType[]> PingStbsAsync(string loginToken, string serviceReference, string[] ipAddresses) {
            return base.Channel.PingStbsAsync(loginToken, serviceReference, ipAddresses);
        }
        
        public Common.IPTVServiceV3.PingResponseType[] PingStbsAdvanced(string loginToken, string serviceReference, string[] ipAddresses, uint stbTimeoutMilliseconds) {
            return base.Channel.PingStbsAdvanced(loginToken, serviceReference, ipAddresses, stbTimeoutMilliseconds);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.PingResponseType[]> PingStbsAdvancedAsync(string loginToken, string serviceReference, string[] ipAddresses, uint stbTimeoutMilliseconds) {
            return base.Channel.PingStbsAdvancedAsync(loginToken, serviceReference, ipAddresses, stbTimeoutMilliseconds);
        }
        
        public Common.IPTVServiceV3.BandwidthGroupProfileType[] GetBandwidthGroupProfiles(string loginToken, string subscriberID) {
            return base.Channel.GetBandwidthGroupProfiles(loginToken, subscriberID);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.BandwidthGroupProfileType[]> GetBandwidthGroupProfilesAsync(string loginToken, string subscriberID) {
            return base.Channel.GetBandwidthGroupProfilesAsync(loginToken, subscriberID);
        }
        
        public void InsertBandwidthGroupProfile(string loginToken, string subscriberID, string serviceReference, Common.IPTVServiceV3.BandwidthGroupProfileType[] groupProfiles) {
            base.Channel.InsertBandwidthGroupProfile(loginToken, subscriberID, serviceReference, groupProfiles);
        }
        
        public System.Threading.Tasks.Task InsertBandwidthGroupProfileAsync(string loginToken, string subscriberID, string serviceReference, Common.IPTVServiceV3.BandwidthGroupProfileType[] groupProfiles) {
            return base.Channel.InsertBandwidthGroupProfileAsync(loginToken, subscriberID, serviceReference, groupProfiles);
        }
        
        public void DeleteBandwidthGroupProfile(string loginToken, string subscriberID, int[] bandwidthGroups) {
            base.Channel.DeleteBandwidthGroupProfile(loginToken, subscriberID, bandwidthGroups);
        }
        
        public System.Threading.Tasks.Task DeleteBandwidthGroupProfileAsync(string loginToken, string subscriberID, int[] bandwidthGroups) {
            return base.Channel.DeleteBandwidthGroupProfileAsync(loginToken, subscriberID, bandwidthGroups);
        }
        
        public Common.IPTVServiceV3.Gen1STBDiagnosticCountType SendDiagnosticCountsRequest(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.SendDiagnosticCountsRequest(loginToken, subscriberId, stbMacAddress);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.Gen1STBDiagnosticCountType> SendDiagnosticCountsRequestAsync(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.SendDiagnosticCountsRequestAsync(loginToken, subscriberId, stbMacAddress);
        }
        
        public Common.IPTVServiceV3.Gen1STBConfigurationDiagnosticType SendDiagnosticConfigurationRequest(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.SendDiagnosticConfigurationRequest(loginToken, subscriberId, stbMacAddress);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.Gen1STBConfigurationDiagnosticType> SendDiagnosticConfigurationRequestAsync(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.SendDiagnosticConfigurationRequestAsync(loginToken, subscriberId, stbMacAddress);
        }
        
        public Common.IPTVServiceV3.Gen1STBDiagnosticCountType SendDiagnosticClearCountsRequest(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.SendDiagnosticClearCountsRequest(loginToken, subscriberId, stbMacAddress);
        }
        
        public System.Threading.Tasks.Task<Common.IPTVServiceV3.Gen1STBDiagnosticCountType> SendDiagnosticClearCountsRequestAsync(string loginToken, string subscriberId, string stbMacAddress) {
            return base.Channel.SendDiagnosticClearCountsRequestAsync(loginToken, subscriberId, stbMacAddress);
        }
        
        public int GetDefaultChargeLimit(string loginToken) {
            return base.Channel.GetDefaultChargeLimit(loginToken);
        }
        
        public System.Threading.Tasks.Task<int> GetDefaultChargeLimitAsync(string loginToken) {
            return base.Channel.GetDefaultChargeLimitAsync(loginToken);
        }
        
        public void MoveStbBetweenAccounts(string loginToken, string originalSubscriberId, string newSubscriberId, string stbMacAddress) {
            base.Channel.MoveStbBetweenAccounts(loginToken, originalSubscriberId, newSubscriberId, stbMacAddress);
        }
        
        public System.Threading.Tasks.Task MoveStbBetweenAccountsAsync(string loginToken, string originalSubscriberId, string newSubscriberId, string stbMacAddress) {
            return base.Channel.MoveStbBetweenAccountsAsync(loginToken, originalSubscriberId, newSubscriberId, stbMacAddress);
        }
        
        public void SuspendAccount(string loginToken, string subscriberId, bool suspend, string suspendReason) {
            base.Channel.SuspendAccount(loginToken, subscriberId, suspend, suspendReason);
        }
        
        public System.Threading.Tasks.Task SuspendAccountAsync(string loginToken, string subscriberId, bool suspend, string suspendReason) {
            return base.Channel.SuspendAccountAsync(loginToken, subscriberId, suspend, suspendReason);
        }
    }
}
