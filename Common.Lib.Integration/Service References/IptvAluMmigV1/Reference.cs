//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.IptvAluMmigV1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/IptvAluMmigV1")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IptvAluMmigV1.Device[] AluDevicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CreditLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DeviceLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DvrEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IptvAluMmigV1.StreamProfile EgressProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FipsCodeCountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FipsCodeStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IptvAluMmigV1.StreamProfile IngressProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriberGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IptvAluMmigV1.StreamProfile WanProfileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IptvAluMmigV1.Device[] AluDevices {
            get {
                return this.AluDevicesField;
            }
            set {
                if ((object.ReferenceEquals(this.AluDevicesField, value) != true)) {
                    this.AluDevicesField = value;
                    this.RaisePropertyChanged("AluDevices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingAccountNumber {
            get {
                return this.BillingAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingAccountNumberField, value) != true)) {
                    this.BillingAccountNumberField = value;
                    this.RaisePropertyChanged("BillingAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDt {
            get {
                return this.CreatedDtField;
            }
            set {
                if ((this.CreatedDtField.Equals(value) != true)) {
                    this.CreatedDtField = value;
                    this.RaisePropertyChanged("CreatedDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CreditLimit {
            get {
                return this.CreditLimitField;
            }
            set {
                if ((this.CreditLimitField.Equals(value) != true)) {
                    this.CreditLimitField = value;
                    this.RaisePropertyChanged("CreditLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DeviceLimit {
            get {
                return this.DeviceLimitField;
            }
            set {
                if ((this.DeviceLimitField.Equals(value) != true)) {
                    this.DeviceLimitField = value;
                    this.RaisePropertyChanged("DeviceLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DvrEnabled {
            get {
                return this.DvrEnabledField;
            }
            set {
                if ((this.DvrEnabledField.Equals(value) != true)) {
                    this.DvrEnabledField = value;
                    this.RaisePropertyChanged("DvrEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IptvAluMmigV1.StreamProfile EgressProfile {
            get {
                return this.EgressProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.EgressProfileField, value) != true)) {
                    this.EgressProfileField = value;
                    this.RaisePropertyChanged("EgressProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FipsCodeCounty {
            get {
                return this.FipsCodeCountyField;
            }
            set {
                if ((this.FipsCodeCountyField.Equals(value) != true)) {
                    this.FipsCodeCountyField = value;
                    this.RaisePropertyChanged("FipsCodeCounty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FipsCodeState {
            get {
                return this.FipsCodeStateField;
            }
            set {
                if ((this.FipsCodeStateField.Equals(value) != true)) {
                    this.FipsCodeStateField = value;
                    this.RaisePropertyChanged("FipsCodeState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IptvAluMmigV1.StreamProfile IngressProfile {
            get {
                return this.IngressProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.IngressProfileField, value) != true)) {
                    this.IngressProfileField = value;
                    this.RaisePropertyChanged("IngressProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceReference {
            get {
                return this.ServiceReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceReferenceField, value) != true)) {
                    this.ServiceReferenceField = value;
                    this.RaisePropertyChanged("ServiceReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberGuid {
            get {
                return this.SubscriberGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberGuidField, value) != true)) {
                    this.SubscriberGuidField = value;
                    this.RaisePropertyChanged("SubscriberGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedDt {
            get {
                return this.UpdatedDtField;
            }
            set {
                if ((this.UpdatedDtField.Equals(value) != true)) {
                    this.UpdatedDtField = value;
                    this.RaisePropertyChanged("UpdatedDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IptvAluMmigV1.StreamProfile WanProfile {
            get {
                return this.WanProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.WanProfileField, value) != true)) {
                    this.WanProfileField = value;
                    this.RaisePropertyChanged("WanProfile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StreamProfile", Namespace="http://schemas.datacontract.org/2004/07/IptvAluMmigV1")]
    [System.SerializableAttribute()]
    public partial class StreamProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DttStreamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HDStreamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxBitRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SDStreamsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DttStreams {
            get {
                return this.DttStreamsField;
            }
            set {
                if ((this.DttStreamsField.Equals(value) != true)) {
                    this.DttStreamsField = value;
                    this.RaisePropertyChanged("DttStreams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HDStreams {
            get {
                return this.HDStreamsField;
            }
            set {
                if ((this.HDStreamsField.Equals(value) != true)) {
                    this.HDStreamsField = value;
                    this.RaisePropertyChanged("HDStreams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxBitRate {
            get {
                return this.MaxBitRateField;
            }
            set {
                if ((this.MaxBitRateField.Equals(value) != true)) {
                    this.MaxBitRateField = value;
                    this.RaisePropertyChanged("MaxBitRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SDStreams {
            get {
                return this.SDStreamsField;
            }
            set {
                if ((this.SDStreamsField.Equals(value) != true)) {
                    this.SDStreamsField = value;
                    this.RaisePropertyChanged("SDStreams");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Device", Namespace="http://schemas.datacontract.org/2004/07/IptvAluMmigV1")]
    [System.SerializableAttribute()]
    public partial class Device : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastLoginDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MacAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MediaroomIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingAccountNumber {
            get {
                return this.BillingAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingAccountNumberField, value) != true)) {
                    this.BillingAccountNumberField = value;
                    this.RaisePropertyChanged("BillingAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDt {
            get {
                return this.CreatedDtField;
            }
            set {
                if ((this.CreatedDtField.Equals(value) != true)) {
                    this.CreatedDtField = value;
                    this.RaisePropertyChanged("CreatedDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIDField, value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastLoginDt {
            get {
                return this.LastLoginDtField;
            }
            set {
                if ((this.LastLoginDtField.Equals(value) != true)) {
                    this.LastLoginDtField = value;
                    this.RaisePropertyChanged("LastLoginDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MacAddress {
            get {
                return this.MacAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.MacAddressField, value) != true)) {
                    this.MacAddressField = value;
                    this.RaisePropertyChanged("MacAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MediaroomId {
            get {
                return this.MediaroomIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaroomIdField, value) != true)) {
                    this.MediaroomIdField = value;
                    this.RaisePropertyChanged("MediaroomId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceReference {
            get {
                return this.ServiceReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceReferenceField, value) != true)) {
                    this.ServiceReferenceField = value;
                    this.RaisePropertyChanged("ServiceReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedDt {
            get {
                return this.UpdatedDtField;
            }
            set {
                if ((this.UpdatedDtField.Equals(value) != true)) {
                    this.UpdatedDtField = value;
                    this.RaisePropertyChanged("UpdatedDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AluPin", Namespace="http://schemas.datacontract.org/2004/07/IptvAluMmigV1")]
    [System.SerializableAttribute()]
    public partial class AluPin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EnabledDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Common.IptvAluMmigV1.PinTypeEnum PinTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EnabledDt {
            get {
                return this.EnabledDtField;
            }
            set {
                if ((this.EnabledDtField.Equals(value) != true)) {
                    this.EnabledDtField = value;
                    this.RaisePropertyChanged("EnabledDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Common.IptvAluMmigV1.PinTypeEnum PinType {
            get {
                return this.PinTypeField;
            }
            set {
                if ((this.PinTypeField.Equals(value) != true)) {
                    this.PinTypeField = value;
                    this.RaisePropertyChanged("PinType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PinTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/IptvAluMmigV1")]
    public enum PinTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        typeAdult = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        typePurchase = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        typeParentalControl = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IptvAluMmigV1.IIptvAluMmig")]
    public interface IIptvAluMmig {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/InsertAccount", ReplyAction="http://tempuri.org/IIptvAluMmig/InsertAccountResponse")]
        void InsertAccount(string loginToken, Common.IptvAluMmigV1.Account data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/InsertAccount", ReplyAction="http://tempuri.org/IIptvAluMmig/InsertAccountResponse")]
        System.Threading.Tasks.Task InsertAccountAsync(string loginToken, Common.IptvAluMmigV1.Account data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/EditAccount", ReplyAction="http://tempuri.org/IIptvAluMmig/EditAccountResponse")]
        void EditAccount(string loginToken, Common.IptvAluMmigV1.Account data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/EditAccount", ReplyAction="http://tempuri.org/IIptvAluMmig/EditAccountResponse")]
        System.Threading.Tasks.Task EditAccountAsync(string loginToken, Common.IptvAluMmigV1.Account data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/DeleteAccount", ReplyAction="http://tempuri.org/IIptvAluMmig/DeleteAccountResponse")]
        void DeleteAccount(string loginToken, Common.IptvAluMmigV1.Account data, bool removeBillingRecords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/DeleteAccount", ReplyAction="http://tempuri.org/IIptvAluMmig/DeleteAccountResponse")]
        System.Threading.Tasks.Task DeleteAccountAsync(string loginToken, Common.IptvAluMmigV1.Account data, bool removeBillingRecords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetAccountByServiceReference", ReplyAction="http://tempuri.org/IIptvAluMmig/GetAccountByServiceReferenceResponse")]
        Common.IptvAluMmigV1.Account GetAccountByServiceReference(string loginToken, string serviceReference, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetAccountByServiceReference", ReplyAction="http://tempuri.org/IIptvAluMmig/GetAccountByServiceReferenceResponse")]
        System.Threading.Tasks.Task<Common.IptvAluMmigV1.Account> GetAccountByServiceReferenceAsync(string loginToken, string serviceReference, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetAccountBySubscriberGuid", ReplyAction="http://tempuri.org/IIptvAluMmig/GetAccountBySubscriberGuidResponse")]
        Common.IptvAluMmigV1.Account GetAccountBySubscriberGuid(string loginToken, string subscriberGuid, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetAccountBySubscriberGuid", ReplyAction="http://tempuri.org/IIptvAluMmig/GetAccountBySubscriberGuidResponse")]
        System.Threading.Tasks.Task<Common.IptvAluMmigV1.Account> GetAccountBySubscriberGuidAsync(string loginToken, string subscriberGuid, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/ReadAvailableAccountPackages", ReplyAction="http://tempuri.org/IIptvAluMmig/ReadAvailableAccountPackagesResponse")]
        string[] ReadAvailableAccountPackages(string loginToken, string serviceReference, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/ReadAvailableAccountPackages", ReplyAction="http://tempuri.org/IIptvAluMmig/ReadAvailableAccountPackagesResponse")]
        System.Threading.Tasks.Task<string[]> ReadAvailableAccountPackagesAsync(string loginToken, string serviceReference, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/ReadAccountPackages", ReplyAction="http://tempuri.org/IIptvAluMmig/ReadAccountPackagesResponse")]
        string[] ReadAccountPackages(string loginToken, string serviceReference, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/ReadAccountPackages", ReplyAction="http://tempuri.org/IIptvAluMmig/ReadAccountPackagesResponse")]
        System.Threading.Tasks.Task<string[]> ReadAccountPackagesAsync(string loginToken, string serviceReference, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/AddPackageToAccount", ReplyAction="http://tempuri.org/IIptvAluMmig/AddPackageToAccountResponse")]
        void AddPackageToAccount(string loginToken, string serviceReference, string[] packages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/AddPackageToAccount", ReplyAction="http://tempuri.org/IIptvAluMmig/AddPackageToAccountResponse")]
        System.Threading.Tasks.Task AddPackageToAccountAsync(string loginToken, string serviceReference, string[] packages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/RemovePackageFromAccount", ReplyAction="http://tempuri.org/IIptvAluMmig/RemovePackageFromAccountResponse")]
        void RemovePackageFromAccount(string loginToken, string serviceReference, string[] packages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/RemovePackageFromAccount", ReplyAction="http://tempuri.org/IIptvAluMmig/RemovePackageFromAccountResponse")]
        System.Threading.Tasks.Task RemovePackageFromAccountAsync(string loginToken, string serviceReference, string[] packages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/ResetCreditLimit", ReplyAction="http://tempuri.org/IIptvAluMmig/ResetCreditLimitResponse")]
        void ResetCreditLimit(string loginToken, string serviceReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/ResetCreditLimit", ReplyAction="http://tempuri.org/IIptvAluMmig/ResetCreditLimitResponse")]
        System.Threading.Tasks.Task ResetCreditLimitAsync(string loginToken, string serviceReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetDeviceByDeviceId", ReplyAction="http://tempuri.org/IIptvAluMmig/GetDeviceByDeviceIdResponse")]
        Common.IptvAluMmigV1.Device GetDeviceByDeviceId(string loginToken, string deviceId, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetDeviceByDeviceId", ReplyAction="http://tempuri.org/IIptvAluMmig/GetDeviceByDeviceIdResponse")]
        System.Threading.Tasks.Task<Common.IptvAluMmigV1.Device> GetDeviceByDeviceIdAsync(string loginToken, string deviceId, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetDeviceBySerialNumber", ReplyAction="http://tempuri.org/IIptvAluMmig/GetDeviceBySerialNumberResponse")]
        Common.IptvAluMmigV1.Device GetDeviceBySerialNumber(string loginToken, string serialNumber, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetDeviceBySerialNumber", ReplyAction="http://tempuri.org/IIptvAluMmig/GetDeviceBySerialNumberResponse")]
        System.Threading.Tasks.Task<Common.IptvAluMmigV1.Device> GetDeviceBySerialNumberAsync(string loginToken, string serialNumber, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetDeviceByMacAddress", ReplyAction="http://tempuri.org/IIptvAluMmig/GetDeviceByMacAddressResponse")]
        Common.IptvAluMmigV1.Device GetDeviceByMacAddress(string loginToken, string macAddress, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetDeviceByMacAddress", ReplyAction="http://tempuri.org/IIptvAluMmig/GetDeviceByMacAddressResponse")]
        System.Threading.Tasks.Task<Common.IptvAluMmigV1.Device> GetDeviceByMacAddressAsync(string loginToken, string macAddress, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/EditDevice", ReplyAction="http://tempuri.org/IIptvAluMmig/EditDeviceResponse")]
        void EditDevice(string loginToken, Common.IptvAluMmigV1.Device data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/EditDevice", ReplyAction="http://tempuri.org/IIptvAluMmig/EditDeviceResponse")]
        System.Threading.Tasks.Task EditDeviceAsync(string loginToken, Common.IptvAluMmigV1.Device data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/RemoveDevice", ReplyAction="http://tempuri.org/IIptvAluMmig/RemoveDeviceResponse")]
        void RemoveDevice(string loginToken, Common.IptvAluMmigV1.Device data, bool removeFromInventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/RemoveDevice", ReplyAction="http://tempuri.org/IIptvAluMmig/RemoveDeviceResponse")]
        System.Threading.Tasks.Task RemoveDeviceAsync(string loginToken, Common.IptvAluMmigV1.Device data, bool removeFromInventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetDevicePins", ReplyAction="http://tempuri.org/IIptvAluMmig/GetDevicePinsResponse")]
        Common.IptvAluMmigV1.AluPin[] GetDevicePins(string loginToken, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetDevicePins", ReplyAction="http://tempuri.org/IIptvAluMmig/GetDevicePinsResponse")]
        System.Threading.Tasks.Task<Common.IptvAluMmigV1.AluPin[]> GetDevicePinsAsync(string loginToken, string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/UpdateDevicePin", ReplyAction="http://tempuri.org/IIptvAluMmig/UpdateDevicePinResponse")]
        void UpdateDevicePin(string loginToken, string deviceId, Common.IptvAluMmigV1.AluPin pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/UpdateDevicePin", ReplyAction="http://tempuri.org/IIptvAluMmig/UpdateDevicePinResponse")]
        System.Threading.Tasks.Task UpdateDevicePinAsync(string loginToken, string deviceId, Common.IptvAluMmigV1.AluPin pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetAccountDevicesLight", ReplyAction="http://tempuri.org/IIptvAluMmig/GetAccountDevicesLightResponse")]
        string[] GetAccountDevicesLight(string loginToken, string serviceReference, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetAccountDevicesLight", ReplyAction="http://tempuri.org/IIptvAluMmig/GetAccountDevicesLightResponse")]
        System.Threading.Tasks.Task<string[]> GetAccountDevicesLightAsync(string loginToken, string serviceReference, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetAccountDevicesFull", ReplyAction="http://tempuri.org/IIptvAluMmig/GetAccountDevicesFullResponse")]
        Common.IptvAluMmigV1.Device[] GetAccountDevicesFull(string loginToken, string serviceReference, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetAccountDevicesFull", ReplyAction="http://tempuri.org/IIptvAluMmig/GetAccountDevicesFullResponse")]
        System.Threading.Tasks.Task<Common.IptvAluMmigV1.Device[]> GetAccountDevicesFullAsync(string loginToken, string serviceReference, bool apMaxOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/UpdateDeviceAccount", ReplyAction="http://tempuri.org/IIptvAluMmig/UpdateDeviceAccountResponse")]
        void UpdateDeviceAccount(string loginToken, string deviceId, string serviceReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/UpdateDeviceAccount", ReplyAction="http://tempuri.org/IIptvAluMmig/UpdateDeviceAccountResponse")]
        System.Threading.Tasks.Task UpdateDeviceAccountAsync(string loginToken, string deviceId, string serviceReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/CreateRegistrationId", ReplyAction="http://tempuri.org/IIptvAluMmig/CreateRegistrationIdResponse")]
        string CreateRegistrationId(string loginToken, string serviceReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/CreateRegistrationId", ReplyAction="http://tempuri.org/IIptvAluMmig/CreateRegistrationIdResponse")]
        System.Threading.Tasks.Task<string> CreateRegistrationIdAsync(string loginToken, string serviceReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/DeleteRegistrationId", ReplyAction="http://tempuri.org/IIptvAluMmig/DeleteRegistrationIdResponse")]
        void DeleteRegistrationId(string loginToken, string serviceReference, string registrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/DeleteRegistrationId", ReplyAction="http://tempuri.org/IIptvAluMmig/DeleteRegistrationIdResponse")]
        System.Threading.Tasks.Task DeleteRegistrationIdAsync(string loginToken, string serviceReference, string registrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetRegistrationIds", ReplyAction="http://tempuri.org/IIptvAluMmig/GetRegistrationIdsResponse")]
        string[] GetRegistrationIds(string loginToken, string serviceReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIptvAluMmig/GetRegistrationIds", ReplyAction="http://tempuri.org/IIptvAluMmig/GetRegistrationIdsResponse")]
        System.Threading.Tasks.Task<string[]> GetRegistrationIdsAsync(string loginToken, string serviceReference);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIptvAluMmigChannel : Common.IptvAluMmigV1.IIptvAluMmig, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IptvAluMmigClient : System.ServiceModel.ClientBase<Common.IptvAluMmigV1.IIptvAluMmig>, Common.IptvAluMmigV1.IIptvAluMmig {
        
        public IptvAluMmigClient() {
        }
        
        public IptvAluMmigClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IptvAluMmigClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IptvAluMmigClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IptvAluMmigClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void InsertAccount(string loginToken, Common.IptvAluMmigV1.Account data) {
            base.Channel.InsertAccount(loginToken, data);
        }
        
        public System.Threading.Tasks.Task InsertAccountAsync(string loginToken, Common.IptvAluMmigV1.Account data) {
            return base.Channel.InsertAccountAsync(loginToken, data);
        }
        
        public void EditAccount(string loginToken, Common.IptvAluMmigV1.Account data) {
            base.Channel.EditAccount(loginToken, data);
        }
        
        public System.Threading.Tasks.Task EditAccountAsync(string loginToken, Common.IptvAluMmigV1.Account data) {
            return base.Channel.EditAccountAsync(loginToken, data);
        }
        
        public void DeleteAccount(string loginToken, Common.IptvAluMmigV1.Account data, bool removeBillingRecords) {
            base.Channel.DeleteAccount(loginToken, data, removeBillingRecords);
        }
        
        public System.Threading.Tasks.Task DeleteAccountAsync(string loginToken, Common.IptvAluMmigV1.Account data, bool removeBillingRecords) {
            return base.Channel.DeleteAccountAsync(loginToken, data, removeBillingRecords);
        }
        
        public Common.IptvAluMmigV1.Account GetAccountByServiceReference(string loginToken, string serviceReference, bool apMaxOnly) {
            return base.Channel.GetAccountByServiceReference(loginToken, serviceReference, apMaxOnly);
        }
        
        public System.Threading.Tasks.Task<Common.IptvAluMmigV1.Account> GetAccountByServiceReferenceAsync(string loginToken, string serviceReference, bool apMaxOnly) {
            return base.Channel.GetAccountByServiceReferenceAsync(loginToken, serviceReference, apMaxOnly);
        }
        
        public Common.IptvAluMmigV1.Account GetAccountBySubscriberGuid(string loginToken, string subscriberGuid, bool apMaxOnly) {
            return base.Channel.GetAccountBySubscriberGuid(loginToken, subscriberGuid, apMaxOnly);
        }
        
        public System.Threading.Tasks.Task<Common.IptvAluMmigV1.Account> GetAccountBySubscriberGuidAsync(string loginToken, string subscriberGuid, bool apMaxOnly) {
            return base.Channel.GetAccountBySubscriberGuidAsync(loginToken, subscriberGuid, apMaxOnly);
        }
        
        public string[] ReadAvailableAccountPackages(string loginToken, string serviceReference, bool apMaxOnly) {
            return base.Channel.ReadAvailableAccountPackages(loginToken, serviceReference, apMaxOnly);
        }
        
        public System.Threading.Tasks.Task<string[]> ReadAvailableAccountPackagesAsync(string loginToken, string serviceReference, bool apMaxOnly) {
            return base.Channel.ReadAvailableAccountPackagesAsync(loginToken, serviceReference, apMaxOnly);
        }
        
        public string[] ReadAccountPackages(string loginToken, string serviceReference, bool apMaxOnly) {
            return base.Channel.ReadAccountPackages(loginToken, serviceReference, apMaxOnly);
        }
        
        public System.Threading.Tasks.Task<string[]> ReadAccountPackagesAsync(string loginToken, string serviceReference, bool apMaxOnly) {
            return base.Channel.ReadAccountPackagesAsync(loginToken, serviceReference, apMaxOnly);
        }
        
        public void AddPackageToAccount(string loginToken, string serviceReference, string[] packages) {
            base.Channel.AddPackageToAccount(loginToken, serviceReference, packages);
        }
        
        public System.Threading.Tasks.Task AddPackageToAccountAsync(string loginToken, string serviceReference, string[] packages) {
            return base.Channel.AddPackageToAccountAsync(loginToken, serviceReference, packages);
        }
        
        public void RemovePackageFromAccount(string loginToken, string serviceReference, string[] packages) {
            base.Channel.RemovePackageFromAccount(loginToken, serviceReference, packages);
        }
        
        public System.Threading.Tasks.Task RemovePackageFromAccountAsync(string loginToken, string serviceReference, string[] packages) {
            return base.Channel.RemovePackageFromAccountAsync(loginToken, serviceReference, packages);
        }
        
        public void ResetCreditLimit(string loginToken, string serviceReference) {
            base.Channel.ResetCreditLimit(loginToken, serviceReference);
        }
        
        public System.Threading.Tasks.Task ResetCreditLimitAsync(string loginToken, string serviceReference) {
            return base.Channel.ResetCreditLimitAsync(loginToken, serviceReference);
        }
        
        public Common.IptvAluMmigV1.Device GetDeviceByDeviceId(string loginToken, string deviceId, bool apMaxOnly) {
            return base.Channel.GetDeviceByDeviceId(loginToken, deviceId, apMaxOnly);
        }
        
        public System.Threading.Tasks.Task<Common.IptvAluMmigV1.Device> GetDeviceByDeviceIdAsync(string loginToken, string deviceId, bool apMaxOnly) {
            return base.Channel.GetDeviceByDeviceIdAsync(loginToken, deviceId, apMaxOnly);
        }
        
        public Common.IptvAluMmigV1.Device GetDeviceBySerialNumber(string loginToken, string serialNumber, bool apMaxOnly) {
            return base.Channel.GetDeviceBySerialNumber(loginToken, serialNumber, apMaxOnly);
        }
        
        public System.Threading.Tasks.Task<Common.IptvAluMmigV1.Device> GetDeviceBySerialNumberAsync(string loginToken, string serialNumber, bool apMaxOnly) {
            return base.Channel.GetDeviceBySerialNumberAsync(loginToken, serialNumber, apMaxOnly);
        }
        
        public Common.IptvAluMmigV1.Device GetDeviceByMacAddress(string loginToken, string macAddress, bool apMaxOnly) {
            return base.Channel.GetDeviceByMacAddress(loginToken, macAddress, apMaxOnly);
        }
        
        public System.Threading.Tasks.Task<Common.IptvAluMmigV1.Device> GetDeviceByMacAddressAsync(string loginToken, string macAddress, bool apMaxOnly) {
            return base.Channel.GetDeviceByMacAddressAsync(loginToken, macAddress, apMaxOnly);
        }
        
        public void EditDevice(string loginToken, Common.IptvAluMmigV1.Device data) {
            base.Channel.EditDevice(loginToken, data);
        }
        
        public System.Threading.Tasks.Task EditDeviceAsync(string loginToken, Common.IptvAluMmigV1.Device data) {
            return base.Channel.EditDeviceAsync(loginToken, data);
        }
        
        public void RemoveDevice(string loginToken, Common.IptvAluMmigV1.Device data, bool removeFromInventory) {
            base.Channel.RemoveDevice(loginToken, data, removeFromInventory);
        }
        
        public System.Threading.Tasks.Task RemoveDeviceAsync(string loginToken, Common.IptvAluMmigV1.Device data, bool removeFromInventory) {
            return base.Channel.RemoveDeviceAsync(loginToken, data, removeFromInventory);
        }
        
        public Common.IptvAluMmigV1.AluPin[] GetDevicePins(string loginToken, string deviceId) {
            return base.Channel.GetDevicePins(loginToken, deviceId);
        }
        
        public System.Threading.Tasks.Task<Common.IptvAluMmigV1.AluPin[]> GetDevicePinsAsync(string loginToken, string deviceId) {
            return base.Channel.GetDevicePinsAsync(loginToken, deviceId);
        }
        
        public void UpdateDevicePin(string loginToken, string deviceId, Common.IptvAluMmigV1.AluPin pin) {
            base.Channel.UpdateDevicePin(loginToken, deviceId, pin);
        }
        
        public System.Threading.Tasks.Task UpdateDevicePinAsync(string loginToken, string deviceId, Common.IptvAluMmigV1.AluPin pin) {
            return base.Channel.UpdateDevicePinAsync(loginToken, deviceId, pin);
        }
        
        public string[] GetAccountDevicesLight(string loginToken, string serviceReference, bool apMaxOnly) {
            return base.Channel.GetAccountDevicesLight(loginToken, serviceReference, apMaxOnly);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAccountDevicesLightAsync(string loginToken, string serviceReference, bool apMaxOnly) {
            return base.Channel.GetAccountDevicesLightAsync(loginToken, serviceReference, apMaxOnly);
        }
        
        public Common.IptvAluMmigV1.Device[] GetAccountDevicesFull(string loginToken, string serviceReference, bool apMaxOnly) {
            return base.Channel.GetAccountDevicesFull(loginToken, serviceReference, apMaxOnly);
        }
        
        public System.Threading.Tasks.Task<Common.IptvAluMmigV1.Device[]> GetAccountDevicesFullAsync(string loginToken, string serviceReference, bool apMaxOnly) {
            return base.Channel.GetAccountDevicesFullAsync(loginToken, serviceReference, apMaxOnly);
        }
        
        public void UpdateDeviceAccount(string loginToken, string deviceId, string serviceReference) {
            base.Channel.UpdateDeviceAccount(loginToken, deviceId, serviceReference);
        }
        
        public System.Threading.Tasks.Task UpdateDeviceAccountAsync(string loginToken, string deviceId, string serviceReference) {
            return base.Channel.UpdateDeviceAccountAsync(loginToken, deviceId, serviceReference);
        }
        
        public string CreateRegistrationId(string loginToken, string serviceReference) {
            return base.Channel.CreateRegistrationId(loginToken, serviceReference);
        }
        
        public System.Threading.Tasks.Task<string> CreateRegistrationIdAsync(string loginToken, string serviceReference) {
            return base.Channel.CreateRegistrationIdAsync(loginToken, serviceReference);
        }
        
        public void DeleteRegistrationId(string loginToken, string serviceReference, string registrationId) {
            base.Channel.DeleteRegistrationId(loginToken, serviceReference, registrationId);
        }
        
        public System.Threading.Tasks.Task DeleteRegistrationIdAsync(string loginToken, string serviceReference, string registrationId) {
            return base.Channel.DeleteRegistrationIdAsync(loginToken, serviceReference, registrationId);
        }
        
        public string[] GetRegistrationIds(string loginToken, string serviceReference) {
            return base.Channel.GetRegistrationIds(loginToken, serviceReference);
        }
        
        public System.Threading.Tasks.Task<string[]> GetRegistrationIdsAsync(string loginToken, string serviceReference) {
            return base.Channel.GetRegistrationIdsAsync(loginToken, serviceReference);
        }
    }
}
