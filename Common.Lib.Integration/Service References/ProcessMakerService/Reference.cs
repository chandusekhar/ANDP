//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.ProcessMakerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.processmaker.com", ConfigurationName="ProcessMakerService.ProcessMakerServiceSoap")]
    public interface ProcessMakerServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.processmaker.com/login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.loginResponse login(Common.ProcessMakerService.loginRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.processmaker.com/login", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.loginResponse> loginAsync(Common.ProcessMakerService.loginRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (processListRequest) of message processListRequest does not match the default value (processList)
        [System.ServiceModel.OperationContractAttribute(Action="urn:processList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.processListResponse processList(Common.ProcessMakerService.processListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:processList", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.processListResponse> processListAsync(Common.ProcessMakerService.processListRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (roleListRequest) of message roleListRequest does not match the default value (roleList)
        [System.ServiceModel.OperationContractAttribute(Action="urn:roleList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.roleListResponse roleList(Common.ProcessMakerService.roleListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:roleList", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.roleListResponse> roleListAsync(Common.ProcessMakerService.roleListRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (groupListRequest) of message groupListRequest does not match the default value (groupList)
        [System.ServiceModel.OperationContractAttribute(Action="urn:groupList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.groupListResponse groupList(Common.ProcessMakerService.groupListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:groupList", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.groupListResponse> groupListAsync(Common.ProcessMakerService.groupListRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (departmentListRequest) of message departmentListRequest does not match the default value (departmentList)
        [System.ServiceModel.OperationContractAttribute(Action="urn:departmentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.departmentListResponse departmentList(Common.ProcessMakerService.departmentListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:departmentList", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.departmentListResponse> departmentListAsync(Common.ProcessMakerService.departmentListRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (userListRequest) of message userListRequest does not match the default value (userList)
        [System.ServiceModel.OperationContractAttribute(Action="urn:userList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.userListResponse userList(Common.ProcessMakerService.userListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:userList", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.userListResponse> userListAsync(Common.ProcessMakerService.userListRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (caseListRequest) of message caseListRequest does not match the default value (caseList)
        [System.ServiceModel.OperationContractAttribute(Action="urn:caseList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.caseListResponse caseList(Common.ProcessMakerService.caseListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:caseList", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.caseListResponse> caseListAsync(Common.ProcessMakerService.caseListRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (unassignedCaseListRequest) of message unassignedCaseListRequest does not match the default value (unassignedCaseList)
        [System.ServiceModel.OperationContractAttribute(Action="urn:unassignedCaseList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.unassignedCaseListResponse unassignedCaseList(Common.ProcessMakerService.unassignedCaseListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:unassignedCaseList", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.unassignedCaseListResponse> unassignedCaseListAsync(Common.ProcessMakerService.unassignedCaseListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:createUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.createUserResponse createUser(Common.ProcessMakerService.createUserRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:createUser", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.createUserResponse> createUserAsync(Common.ProcessMakerService.createUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:updateUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.updateUserResponse updateUser(Common.ProcessMakerService.updateUserRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:updateUser", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.updateUserResponse> updateUserAsync(Common.ProcessMakerService.updateUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:informationUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.informationUserResponse informationUser(Common.ProcessMakerService.informationUserRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:informationUser", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.informationUserResponse> informationUserAsync(Common.ProcessMakerService.informationUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:createGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.createGroupResponse createGroup(Common.ProcessMakerService.createGroupRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:createGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.createGroupResponse> createGroupAsync(Common.ProcessMakerService.createGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:createDepartment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.createDepartmentResponse createDepartment(Common.ProcessMakerService.createDepartmentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:createDepartment", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.createDepartmentResponse> createDepartmentAsync(Common.ProcessMakerService.createDepartmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:assignUserToGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.assignUserToGroupResponse assignUserToGroup(Common.ProcessMakerService.assignUserToGroupRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:assignUserToGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.assignUserToGroupResponse> assignUserToGroupAsync(Common.ProcessMakerService.assignUserToGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:assignUserToDepartment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.assignUserToGroupResponse assignUserToDepartment(Common.ProcessMakerService.assignUserToDepartmentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:assignUserToDepartment", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.assignUserToGroupResponse> assignUserToDepartmentAsync(Common.ProcessMakerService.assignUserToDepartmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:newCase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.newCaseResponse newCase(Common.ProcessMakerService.newCaseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:newCase", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.newCaseResponse> newCaseAsync(Common.ProcessMakerService.newCaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:reassignCase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.assignUserToGroupResponse reassignCase(Common.ProcessMakerService.reassignCaseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:reassignCase", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.assignUserToGroupResponse> reassignCaseAsync(Common.ProcessMakerService.reassignCaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:newCaseImpersonate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.newCaseImpersonateResponse newCaseImpersonate(Common.ProcessMakerService.newCaseImpersonateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:newCaseImpersonate", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.newCaseImpersonateResponse> newCaseImpersonateAsync(Common.ProcessMakerService.newCaseImpersonateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:routeCase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.routeCaseResponse routeCase(Common.ProcessMakerService.routeCaseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:routeCase", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.routeCaseResponse> routeCaseAsync(Common.ProcessMakerService.routeCaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:executeTrigger", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.assignUserToGroupResponse executeTrigger(Common.ProcessMakerService.executeTriggerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:executeTrigger", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.assignUserToGroupResponse> executeTriggerAsync(Common.ProcessMakerService.executeTriggerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:sendVariables", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.assignUserToGroupResponse sendVariables(Common.ProcessMakerService.sendVariablesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:sendVariables", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.assignUserToGroupResponse> sendVariablesAsync(Common.ProcessMakerService.sendVariablesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:getVariables", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.getVariablesResponse getVariables(Common.ProcessMakerService.getVariablesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:getVariables", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.getVariablesResponse> getVariablesAsync(Common.ProcessMakerService.getVariablesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:getVariablesNames", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.getVariablesNamesResponse getVariablesNames(Common.ProcessMakerService.getVariablesNamesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:getVariablesNames", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.getVariablesNamesResponse> getVariablesNamesAsync(Common.ProcessMakerService.getVariablesNamesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:sendMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.assignUserToGroupResponse sendMessage(Common.ProcessMakerService.sendMessageRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:sendMessage", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.assignUserToGroupResponse> sendMessageAsync(Common.ProcessMakerService.sendMessageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:getCaseInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.getCaseInfoResponse getCaseInfo(Common.ProcessMakerService.getCaseInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:getCaseInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.getCaseInfoResponse> getCaseInfoAsync(Common.ProcessMakerService.getCaseInfoRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (taskListRequest) of message taskListRequest does not match the default value (taskList)
        [System.ServiceModel.OperationContractAttribute(Action="urn:taskList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.taskListResponse taskList(Common.ProcessMakerService.taskListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:taskList", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.taskListResponse> taskListAsync(Common.ProcessMakerService.taskListRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (taskCaseRequest) of message taskCaseRequest does not match the default value (taskCase)
        [System.ServiceModel.OperationContractAttribute(Action="urn:taskCase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.taskCaseResponse taskCase(Common.ProcessMakerService.taskCaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:taskCase", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.taskCaseResponse> taskCaseAsync(Common.ProcessMakerService.taskCaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:systemInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.systemInformationResponse systemInformation(Common.ProcessMakerService.systemInformationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:systemInformation", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.systemInformationResponse> systemInformationAsync(Common.ProcessMakerService.systemInformationRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (triggerListRequest) of message triggerListRequest does not match the default value (triggerList)
        [System.ServiceModel.OperationContractAttribute(Action="urn:triggerList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.triggerListResponse triggerList(Common.ProcessMakerService.triggerListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:triggerList", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.triggerListResponse> triggerListAsync(Common.ProcessMakerService.triggerListRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (outputDocumentListRequest) of message outputDocumentListRequest does not match the default value (outputDocumentList)
        [System.ServiceModel.OperationContractAttribute(Action="urn:outputDocumentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.outputDocumentListResponse outputDocumentList(Common.ProcessMakerService.outputDocumentListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:outputDocumentList", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.outputDocumentListResponse> outputDocumentListAsync(Common.ProcessMakerService.outputDocumentListRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (inputDocumentListRequest) of message inputDocumentListRequest does not match the default value (inputDocumentList)
        [System.ServiceModel.OperationContractAttribute(Action="urn:inputDocumentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.inputDocumentListResponse inputDocumentList(Common.ProcessMakerService.inputDocumentListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:inputDocumentList", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.inputDocumentListResponse> inputDocumentListAsync(Common.ProcessMakerService.inputDocumentListRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (inputDocumentProcessListRequest) of message inputDocumentProcessListRequest does not match the default value (inputDocumentProcessList)
        [System.ServiceModel.OperationContractAttribute(Action="urn:inputDocumentProcessList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.inputDocumentProcessListResponse inputDocumentProcessList(Common.ProcessMakerService.inputDocumentProcessListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:inputDocumentProcessList", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.inputDocumentProcessListResponse> inputDocumentProcessListAsync(Common.ProcessMakerService.inputDocumentProcessListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:removeDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.removeDocumentResponse removeDocument(Common.ProcessMakerService.removeDocumentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:removeDocument", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.removeDocumentResponse> removeDocumentAsync(Common.ProcessMakerService.removeDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:importProcessFromLibrary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.importProcessFromLibraryResponse importProcessFromLibrary(Common.ProcessMakerService.importProcessFromLibraryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:importProcessFromLibrary", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.importProcessFromLibraryResponse> importProcessFromLibraryAsync(Common.ProcessMakerService.importProcessFromLibraryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:getCaseNotes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.getCaseNotesResponse getCaseNotes(Common.ProcessMakerService.getCaseNotesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:getCaseNotes", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.getCaseNotesResponse> getCaseNotesAsync(Common.ProcessMakerService.getCaseNotesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:removeUserFromGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.assignUserToGroupResponse removeUserFromGroup(Common.ProcessMakerService.removeUserFromGroupRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:removeUserFromGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.assignUserToGroupResponse> removeUserFromGroupAsync(Common.ProcessMakerService.removeUserFromGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:deleteCase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.deleteCaseResponse deleteCase(Common.ProcessMakerService.deleteCaseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:deleteCase", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.deleteCaseResponse> deleteCaseAsync(Common.ProcessMakerService.deleteCaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:cancelCase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.cancelCaseResponse cancelCase(Common.ProcessMakerService.cancelCaseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:cancelCase", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.cancelCaseResponse> cancelCaseAsync(Common.ProcessMakerService.cancelCaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:pauseCase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.pauseCaseResponse pauseCase(Common.ProcessMakerService.pauseCaseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:pauseCase", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.pauseCaseResponse> pauseCaseAsync(Common.ProcessMakerService.pauseCaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:unpauseCase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.unpauseCaseResponse unpauseCase(Common.ProcessMakerService.unpauseCaseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:unpauseCase", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.unpauseCaseResponse> unpauseCaseAsync(Common.ProcessMakerService.unpauseCaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:addCaseNote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Common.ProcessMakerService.addCaseNoteResponse addCaseNote(Common.ProcessMakerService.addCaseNoteRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:addCaseNote", ReplyAction="*")]
        System.Threading.Tasks.Task<Common.ProcessMakerService.addCaseNoteResponse> addCaseNoteAsync(Common.ProcessMakerService.addCaseNoteRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="login", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class loginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string userid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string password;
        
        public loginRequest() {
        }
        
        public loginRequest(string userid, string password) {
            this.userid = userid;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="loginResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class loginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string timestamp;
        
        public loginResponse() {
        }
        
        public loginResponse(string status_code, string message, string version, string timestamp) {
            this.status_code = status_code;
            this.message = message;
            this.version = version;
            this.timestamp = timestamp;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class processListStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string guidField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
                this.RaisePropertyChanged("guid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class getCaseNotesStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string full_nameField;
        
        private string app_uidField;
        
        private string usr_uidField;
        
        private string note_dateField;
        
        private string note_contentField;
        
        private string note_typeField;
        
        private string note_availabilityField;
        
        private string note_origin_objField;
        
        private string note_affected_obj1Field;
        
        private string note_affected_obj2Field;
        
        private string note_recipientsField;
        
        private string usr_usernameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string full_name {
            get {
                return this.full_nameField;
            }
            set {
                this.full_nameField = value;
                this.RaisePropertyChanged("full_name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string app_uid {
            get {
                return this.app_uidField;
            }
            set {
                this.app_uidField = value;
                this.RaisePropertyChanged("app_uid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string usr_uid {
            get {
                return this.usr_uidField;
            }
            set {
                this.usr_uidField = value;
                this.RaisePropertyChanged("usr_uid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string note_date {
            get {
                return this.note_dateField;
            }
            set {
                this.note_dateField = value;
                this.RaisePropertyChanged("note_date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string note_content {
            get {
                return this.note_contentField;
            }
            set {
                this.note_contentField = value;
                this.RaisePropertyChanged("note_content");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string note_type {
            get {
                return this.note_typeField;
            }
            set {
                this.note_typeField = value;
                this.RaisePropertyChanged("note_type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string note_availability {
            get {
                return this.note_availabilityField;
            }
            set {
                this.note_availabilityField = value;
                this.RaisePropertyChanged("note_availability");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string note_origin_obj {
            get {
                return this.note_origin_objField;
            }
            set {
                this.note_origin_objField = value;
                this.RaisePropertyChanged("note_origin_obj");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string note_affected_obj1 {
            get {
                return this.note_affected_obj1Field;
            }
            set {
                this.note_affected_obj1Field = value;
                this.RaisePropertyChanged("note_affected_obj1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string note_affected_obj2 {
            get {
                return this.note_affected_obj2Field;
            }
            set {
                this.note_affected_obj2Field = value;
                this.RaisePropertyChanged("note_affected_obj2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string note_recipients {
            get {
                return this.note_recipientsField;
            }
            set {
                this.note_recipientsField = value;
                this.RaisePropertyChanged("note_recipients");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string usr_username {
            get {
                return this.usr_usernameField;
            }
            set {
                this.usr_usernameField = value;
                this.RaisePropertyChanged("usr_username");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class inputDocumentProcessListStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string guidField;
        
        private string nameField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
                this.RaisePropertyChanged("guid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("description");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class inputDocumentListStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string guidField;
        
        private string filenameField;
        
        private string docIdField;
        
        private string versionField;
        
        private string createDateField;
        
        private string createByField;
        
        private string typeField;
        
        private string indexField;
        
        private string linkField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
                this.RaisePropertyChanged("guid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
                this.RaisePropertyChanged("filename");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string docId {
            get {
                return this.docIdField;
            }
            set {
                this.docIdField = value;
                this.RaisePropertyChanged("docId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=3)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string createDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
                this.RaisePropertyChanged("createDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string createBy {
            get {
                return this.createByField;
            }
            set {
                this.createByField = value;
                this.RaisePropertyChanged("createBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=7)]
        public string index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
                this.RaisePropertyChanged("index");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string link {
            get {
                return this.linkField;
            }
            set {
                this.linkField = value;
                this.RaisePropertyChanged("link");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class outputDocumentListStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string guidField;
        
        private string filenameField;
        
        private string docIdField;
        
        private string versionField;
        
        private string createDateField;
        
        private string createByField;
        
        private string typeField;
        
        private string indexField;
        
        private string linkField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
                this.RaisePropertyChanged("guid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
                this.RaisePropertyChanged("filename");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string docId {
            get {
                return this.docIdField;
            }
            set {
                this.docIdField = value;
                this.RaisePropertyChanged("docId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=3)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string createDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
                this.RaisePropertyChanged("createDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string createBy {
            get {
                return this.createByField;
            }
            set {
                this.createByField = value;
                this.RaisePropertyChanged("createBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=7)]
        public string index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
                this.RaisePropertyChanged("index");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string link {
            get {
                return this.linkField;
            }
            set {
                this.linkField = value;
                this.RaisePropertyChanged("link");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class triggerListStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string guidField;
        
        private string nameField;
        
        private string processIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
                this.RaisePropertyChanged("guid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string processId {
            get {
                return this.processIdField;
            }
            set {
                this.processIdField = value;
                this.RaisePropertyChanged("processId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class taskCaseStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string guidField;
        
        private string nameField;
        
        private string delegateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
                this.RaisePropertyChanged("guid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string @delegate {
            get {
                return this.delegateField;
            }
            set {
                this.delegateField = value;
                this.RaisePropertyChanged("delegate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class taskListStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string guidField;
        
        private string nameField;
        
        private string processIdField;
        
        private string initialTaskField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
                this.RaisePropertyChanged("guid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string processId {
            get {
                return this.processIdField;
            }
            set {
                this.processIdField = value;
                this.RaisePropertyChanged("processId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string initialTask {
            get {
                return this.initialTaskField;
            }
            set {
                this.initialTaskField = value;
                this.RaisePropertyChanged("initialTask");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class getCaseInfoStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userIdField;
        
        private string userNameField;
        
        private string taskIdField;
        
        private string taskNameField;
        
        private string delIndexField;
        
        private string delThreadField;
        
        private string delThreadStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("userId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("userName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string taskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
                this.RaisePropertyChanged("taskId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string taskName {
            get {
                return this.taskNameField;
            }
            set {
                this.taskNameField = value;
                this.RaisePropertyChanged("taskName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=4)]
        public string delIndex {
            get {
                return this.delIndexField;
            }
            set {
                this.delIndexField = value;
                this.RaisePropertyChanged("delIndex");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=5)]
        public string delThread {
            get {
                return this.delThreadField;
            }
            set {
                this.delThreadField = value;
                this.RaisePropertyChanged("delThread");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string delThreadStatus {
            get {
                return this.delThreadStatusField;
            }
            set {
                this.delThreadStatusField = value;
                this.RaisePropertyChanged("delThreadStatus");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class variableListNameStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class variableStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class routeListStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userIdField;
        
        private string userNameField;
        
        private string taskIdField;
        
        private string taskNameField;
        
        private string delIndexField;
        
        private string delThreadField;
        
        private string delThreadStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("userId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("userName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string taskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
                this.RaisePropertyChanged("taskId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string taskName {
            get {
                return this.taskNameField;
            }
            set {
                this.taskNameField = value;
                this.RaisePropertyChanged("taskName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=4)]
        public string delIndex {
            get {
                return this.delIndexField;
            }
            set {
                this.delIndexField = value;
                this.RaisePropertyChanged("delIndex");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=5)]
        public string delThread {
            get {
                return this.delThreadField;
            }
            set {
                this.delThreadField = value;
                this.RaisePropertyChanged("delThread");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string delThreadStatus {
            get {
                return this.delThreadStatusField;
            }
            set {
                this.delThreadStatusField = value;
                this.RaisePropertyChanged("delThreadStatus");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class variableListStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class informationUserStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string usernameField;
        
        private string firstnameField;
        
        private string lastnameField;
        
        private string mailField;
        
        private string addressField;
        
        private string zipcodeField;
        
        private string countryField;
        
        private string stateField;
        
        private string locationField;
        
        private string phoneField;
        
        private string faxField;
        
        private string cellularField;
        
        private string birthdayField;
        
        private string positionField;
        
        private string replacedbyField;
        
        private string duedateField;
        
        private string calendarField;
        
        private string statusField;
        
        private string departmentField;
        
        private string reportstoField;
        
        private string userexperienceField;
        
        private string photoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
                this.RaisePropertyChanged("firstname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
                this.RaisePropertyChanged("lastname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string mail {
            get {
                return this.mailField;
            }
            set {
                this.mailField = value;
                this.RaisePropertyChanged("mail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string zipcode {
            get {
                return this.zipcodeField;
            }
            set {
                this.zipcodeField = value;
                this.RaisePropertyChanged("zipcode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
                this.RaisePropertyChanged("country");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("state");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
                this.RaisePropertyChanged("location");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
                this.RaisePropertyChanged("fax");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string cellular {
            get {
                return this.cellularField;
            }
            set {
                this.cellularField = value;
                this.RaisePropertyChanged("cellular");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
                this.RaisePropertyChanged("birthday");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
                this.RaisePropertyChanged("position");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string replacedby {
            get {
                return this.replacedbyField;
            }
            set {
                this.replacedbyField = value;
                this.RaisePropertyChanged("replacedby");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string duedate {
            get {
                return this.duedateField;
            }
            set {
                this.duedateField = value;
                this.RaisePropertyChanged("duedate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string calendar {
            get {
                return this.calendarField;
            }
            set {
                this.calendarField = value;
                this.RaisePropertyChanged("calendar");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
                this.RaisePropertyChanged("department");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string reportsto {
            get {
                return this.reportstoField;
            }
            set {
                this.reportstoField = value;
                this.RaisePropertyChanged("reportsto");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string userexperience {
            get {
                return this.userexperienceField;
            }
            set {
                this.userexperienceField = value;
                this.RaisePropertyChanged("userexperience");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string photo {
            get {
                return this.photoField;
            }
            set {
                this.photoField = value;
                this.RaisePropertyChanged("photo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class unassignedCaseListStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string guidField;
        
        private string nameField;
        
        private string delIndexField;
        
        private string processIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
                this.RaisePropertyChanged("guid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string delIndex {
            get {
                return this.delIndexField;
            }
            set {
                this.delIndexField = value;
                this.RaisePropertyChanged("delIndex");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string processId {
            get {
                return this.processIdField;
            }
            set {
                this.processIdField = value;
                this.RaisePropertyChanged("processId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class caseListStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string guidField;
        
        private string nameField;
        
        private string statusField;
        
        private string delIndexField;
        
        private string processIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
                this.RaisePropertyChanged("guid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string delIndex {
            get {
                return this.delIndexField;
            }
            set {
                this.delIndexField = value;
                this.RaisePropertyChanged("delIndex");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string processId {
            get {
                return this.processIdField;
            }
            set {
                this.processIdField = value;
                this.RaisePropertyChanged("processId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class userListStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string guidField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
                this.RaisePropertyChanged("guid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class departmentListStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string guidField;
        
        private string nameField;
        
        private string parentUIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
                this.RaisePropertyChanged("guid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string parentUID {
            get {
                return this.parentUIDField;
            }
            set {
                this.parentUIDField = value;
                this.RaisePropertyChanged("parentUID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class groupListStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string guidField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
                this.RaisePropertyChanged("guid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.processmaker.com")]
    public partial class roleListStruct : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string guidField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
                this.RaisePropertyChanged("guid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processListRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class processListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        public processListRequest() {
        }
        
        public processListRequest(string sessionId) {
            this.sessionId = sessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processListResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class processListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("processes")]
        public Common.ProcessMakerService.processListStruct[] processes;
        
        public processListResponse() {
        }
        
        public processListResponse(Common.ProcessMakerService.processListStruct[] processes) {
            this.processes = processes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="roleListRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class roleListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        public roleListRequest() {
        }
        
        public roleListRequest(string sessionId) {
            this.sessionId = sessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="roleListResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class roleListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("roles")]
        public Common.ProcessMakerService.roleListStruct[] roles;
        
        public roleListResponse() {
        }
        
        public roleListResponse(Common.ProcessMakerService.roleListStruct[] roles) {
            this.roles = roles;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="groupListRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class groupListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        public groupListRequest() {
        }
        
        public groupListRequest(string sessionId) {
            this.sessionId = sessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="groupListResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class groupListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("groups")]
        public Common.ProcessMakerService.groupListStruct[] groups;
        
        public groupListResponse() {
        }
        
        public groupListResponse(Common.ProcessMakerService.groupListStruct[] groups) {
            this.groups = groups;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="departmentListRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class departmentListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        public departmentListRequest() {
        }
        
        public departmentListRequest(string sessionId) {
            this.sessionId = sessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="departmentListResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class departmentListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("departments")]
        public Common.ProcessMakerService.departmentListStruct[] departments;
        
        public departmentListResponse() {
        }
        
        public departmentListResponse(Common.ProcessMakerService.departmentListStruct[] departments) {
            this.departments = departments;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="userListRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class userListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        public userListRequest() {
        }
        
        public userListRequest(string sessionId) {
            this.sessionId = sessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="userListResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class userListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("users")]
        public Common.ProcessMakerService.userListStruct[] users;
        
        public userListResponse() {
        }
        
        public userListResponse(Common.ProcessMakerService.userListStruct[] users) {
            this.users = users;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="caseListRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class caseListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        public caseListRequest() {
        }
        
        public caseListRequest(string sessionId) {
            this.sessionId = sessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="caseListResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class caseListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("cases")]
        public Common.ProcessMakerService.caseListStruct[] cases;
        
        public caseListResponse() {
        }
        
        public caseListResponse(Common.ProcessMakerService.caseListStruct[] cases) {
            this.cases = cases;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="unassignedCaseListRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class unassignedCaseListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        public unassignedCaseListRequest() {
        }
        
        public unassignedCaseListRequest(string sessionId) {
            this.sessionId = sessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="unassignedCaseListResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class unassignedCaseListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("cases")]
        public Common.ProcessMakerService.unassignedCaseListStruct[] cases;
        
        public unassignedCaseListResponse() {
        }
        
        public unassignedCaseListResponse(Common.ProcessMakerService.unassignedCaseListStruct[] cases) {
            this.cases = cases;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createUserRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class createUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string firstname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string lastname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=4)]
        public string email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=5)]
        public string role;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=6)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute("dueDate")]
        public string[] dueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute("status")]
        public string[] status;
        
        public createUserRequest() {
        }
        
        public createUserRequest(string sessionId, string userId, string firstname, string lastname, string email, string role, string password, string[] dueDate, string[] status) {
            this.sessionId = sessionId;
            this.userId = userId;
            this.firstname = firstname;
            this.lastname = lastname;
            this.email = email;
            this.role = role;
            this.password = password;
            this.dueDate = dueDate;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createUserResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class createUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string userUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string timestamp;
        
        public createUserResponse() {
        }
        
        public createUserResponse(string status_code, string message, string userUID, string timestamp) {
            this.status_code = status_code;
            this.message = message;
            this.userUID = userUID;
            this.timestamp = timestamp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateUserRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class updateUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string userUid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("firstName")]
        public string[] firstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute("lastName")]
        public string[] lastName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute("email")]
        public string[] email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute("dueDate")]
        public string[] dueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute("status")]
        public string[] status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute("role")]
        public string[] role;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute("password")]
        public string[] password;
        
        public updateUserRequest() {
        }
        
        public updateUserRequest(string sessionId, string userUid, string userName, string[] firstName, string[] lastName, string[] email, string[] dueDate, string[] status, string[] role, string[] password) {
            this.sessionId = sessionId;
            this.userUid = userUid;
            this.userName = userName;
            this.firstName = firstName;
            this.lastName = lastName;
            this.email = email;
            this.dueDate = dueDate;
            this.status = status;
            this.role = role;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateUserResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class updateUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string timestamp;
        
        public updateUserResponse() {
        }
        
        public updateUserResponse(string status_code, string message, string timestamp) {
            this.status_code = status_code;
            this.message = message;
            this.timestamp = timestamp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="informationUserRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class informationUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string userUid;
        
        public informationUserRequest() {
        }
        
        public informationUserRequest(string sessionId, string userUid) {
            this.sessionId = sessionId;
            this.userUid = userUid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="informationUserResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class informationUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string timestamp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("info")]
        public Common.ProcessMakerService.informationUserStruct[] info;
        
        public informationUserResponse() {
        }
        
        public informationUserResponse(string status_code, string message, string timestamp, Common.ProcessMakerService.informationUserStruct[] info) {
            this.status_code = status_code;
            this.message = message;
            this.timestamp = timestamp;
            this.info = info;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createGroupRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class createGroupRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string name;
        
        public createGroupRequest() {
        }
        
        public createGroupRequest(string sessionId, string name) {
            this.sessionId = sessionId;
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createGroupResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class createGroupResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string groupUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string timestamp;
        
        public createGroupResponse() {
        }
        
        public createGroupResponse(string status_code, string message, string groupUID, string timestamp) {
            this.status_code = status_code;
            this.message = message;
            this.groupUID = groupUID;
            this.timestamp = timestamp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createDepartmentRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class createDepartmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string parentUID;
        
        public createDepartmentRequest() {
        }
        
        public createDepartmentRequest(string sessionId, string name, string parentUID) {
            this.sessionId = sessionId;
            this.name = name;
            this.parentUID = parentUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createDepartmentResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class createDepartmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string departmentUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string timestamp;
        
        public createDepartmentResponse() {
        }
        
        public createDepartmentResponse(string status_code, string message, string departmentUID, string timestamp) {
            this.status_code = status_code;
            this.message = message;
            this.departmentUID = departmentUID;
            this.timestamp = timestamp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="assignUserToGroupRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class assignUserToGroupRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string groupId;
        
        public assignUserToGroupRequest() {
        }
        
        public assignUserToGroupRequest(string sessionId, string userId, string groupId) {
            this.sessionId = sessionId;
            this.userId = userId;
            this.groupId = groupId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="pmResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class assignUserToGroupResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string timestamp;
        
        public assignUserToGroupResponse() {
        }
        
        public assignUserToGroupResponse(string status_code, string message, string timestamp) {
            this.status_code = status_code;
            this.message = message;
            this.timestamp = timestamp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="assignUserToDepartmentRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class assignUserToDepartmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string departmentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string manager;
        
        public assignUserToDepartmentRequest() {
        }
        
        public assignUserToDepartmentRequest(string sessionId, string userId, string departmentId, string manager) {
            this.sessionId = sessionId;
            this.userId = userId;
            this.departmentId = departmentId;
            this.manager = manager;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="newCaseRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class newCaseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string taskId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("variables")]
        public Common.ProcessMakerService.variableListStruct[] variables;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute("executeTriggers", DataType="integer")]
        public string[] executeTriggers;
        
        public newCaseRequest() {
        }
        
        public newCaseRequest(string sessionId, string processId, string taskId, Common.ProcessMakerService.variableListStruct[] variables, string[] executeTriggers) {
            this.sessionId = sessionId;
            this.processId = processId;
            this.taskId = taskId;
            this.variables = variables;
            this.executeTriggers = executeTriggers;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="newCaseResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class newCaseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string caseNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=4)]
        public string timestamp;
        
        public newCaseResponse() {
        }
        
        public newCaseResponse(string status_code, string message, string caseId, string caseNumber, string timestamp) {
            this.status_code = status_code;
            this.message = message;
            this.caseId = caseId;
            this.caseNumber = caseNumber;
            this.timestamp = timestamp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="reassignCaseRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class reassignCaseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string delIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string userIdSource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=4)]
        public string userIdTarget;
        
        public reassignCaseRequest() {
        }
        
        public reassignCaseRequest(string sessionId, string caseId, string delIndex, string userIdSource, string userIdTarget) {
            this.sessionId = sessionId;
            this.caseId = caseId;
            this.delIndex = delIndex;
            this.userIdSource = userIdSource;
            this.userIdTarget = userIdTarget;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="newCaseImpersonateRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class newCaseImpersonateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("variables")]
        public Common.ProcessMakerService.variableListStruct[] variables;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=4)]
        public string taskId;
        
        public newCaseImpersonateRequest() {
        }
        
        public newCaseImpersonateRequest(string sessionId, string processId, string userId, Common.ProcessMakerService.variableListStruct[] variables, string taskId) {
            this.sessionId = sessionId;
            this.processId = processId;
            this.userId = userId;
            this.variables = variables;
            this.taskId = taskId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="newCaseImpersonateResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class newCaseImpersonateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string timestamp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=4)]
        public string caseNumber;
        
        public newCaseImpersonateResponse() {
        }
        
        public newCaseImpersonateResponse(string status_code, string message, string timestamp, string caseId, string caseNumber) {
            this.status_code = status_code;
            this.message = message;
            this.timestamp = timestamp;
            this.caseId = caseId;
            this.caseNumber = caseNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="routeCaseRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class routeCaseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string delIndex;
        
        public routeCaseRequest() {
        }
        
        public routeCaseRequest(string sessionId, string caseId, string delIndex) {
            this.sessionId = sessionId;
            this.caseId = caseId;
            this.delIndex = delIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="routeCaseResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class routeCaseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string timestamp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("routing")]
        public Common.ProcessMakerService.routeListStruct[] routing;
        
        public routeCaseResponse() {
        }
        
        public routeCaseResponse(string status_code, string message, string timestamp, Common.ProcessMakerService.routeListStruct[] routing) {
            this.status_code = status_code;
            this.message = message;
            this.timestamp = timestamp;
            this.routing = routing;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="executeTriggerRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class executeTriggerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string triggerIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string delIndex;
        
        public executeTriggerRequest() {
        }
        
        public executeTriggerRequest(string sessionId, string caseId, string triggerIndex, string delIndex) {
            this.sessionId = sessionId;
            this.caseId = caseId;
            this.triggerIndex = triggerIndex;
            this.delIndex = delIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendVariablesRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class sendVariablesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("variables")]
        public Common.ProcessMakerService.variableListStruct[] variables;
        
        public sendVariablesRequest() {
        }
        
        public sendVariablesRequest(string sessionId, string caseId, Common.ProcessMakerService.variableListStruct[] variables) {
            this.sessionId = sessionId;
            this.caseId = caseId;
            this.variables = variables;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getVariablesRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class getVariablesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("variables")]
        public Common.ProcessMakerService.variableStruct[] variables;
        
        public getVariablesRequest() {
        }
        
        public getVariablesRequest(string sessionId, string caseId, Common.ProcessMakerService.variableStruct[] variables) {
            this.sessionId = sessionId;
            this.caseId = caseId;
            this.variables = variables;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getVariablesResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class getVariablesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string timestamp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("variables")]
        public Common.ProcessMakerService.variableListStruct[] variables;
        
        public getVariablesResponse() {
        }
        
        public getVariablesResponse(string status_code, string message, string timestamp, Common.ProcessMakerService.variableListStruct[] variables) {
            this.status_code = status_code;
            this.message = message;
            this.timestamp = timestamp;
            this.variables = variables;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getVariablesNamesRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class getVariablesNamesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseId;
        
        public getVariablesNamesRequest() {
        }
        
        public getVariablesNamesRequest(string sessionId, string caseId) {
            this.sessionId = sessionId;
            this.caseId = caseId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getVariablesNamesResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class getVariablesNamesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string timestamp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("variables")]
        public Common.ProcessMakerService.variableListNameStruct[] variables;
        
        public getVariablesNamesResponse() {
        }
        
        public getVariablesNamesResponse(string status_code, string message, string timestamp, Common.ProcessMakerService.variableListNameStruct[] variables) {
            this.status_code = status_code;
            this.message = message;
            this.timestamp = timestamp;
            this.variables = variables;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendMessageRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class sendMessageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string from;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string to;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=4)]
        public string cc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=5)]
        public string bcc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=6)]
        public string subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=7)]
        public string template;
        
        public sendMessageRequest() {
        }
        
        public sendMessageRequest(string sessionId, string caseId, string from, string to, string cc, string bcc, string subject, string template) {
            this.sessionId = sessionId;
            this.caseId = caseId;
            this.from = from;
            this.to = to;
            this.cc = cc;
            this.bcc = bcc;
            this.subject = subject;
            this.template = template;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCaseInfoRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class getCaseInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string delIndex;
        
        public getCaseInfoRequest() {
        }
        
        public getCaseInfoRequest(string sessionId, string caseId, string delIndex) {
            this.sessionId = sessionId;
            this.caseId = caseId;
            this.delIndex = delIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCaseInfoResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class getCaseInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string caseNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=4)]
        public string caseName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=5)]
        public string caseStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=6)]
        public string caseParalell;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=7)]
        public string caseCreatorUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=8)]
        public string caseCreatorUserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=9)]
        public string processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=10)]
        public string processName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=11)]
        public string createDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=12)]
        public string updateDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=13)]
        [System.Xml.Serialization.XmlElementAttribute("currentUsers")]
        public Common.ProcessMakerService.getCaseInfoStruct[] currentUsers;
        
        public getCaseInfoResponse() {
        }
        
        public getCaseInfoResponse(string status_code, string message, string caseId, string caseNumber, string caseName, string caseStatus, string caseParalell, string caseCreatorUser, string caseCreatorUserName, string processId, string processName, string createDate, string updateDate, Common.ProcessMakerService.getCaseInfoStruct[] currentUsers) {
            this.status_code = status_code;
            this.message = message;
            this.caseId = caseId;
            this.caseNumber = caseNumber;
            this.caseName = caseName;
            this.caseStatus = caseStatus;
            this.caseParalell = caseParalell;
            this.caseCreatorUser = caseCreatorUser;
            this.caseCreatorUserName = caseCreatorUserName;
            this.processId = processId;
            this.processName = processName;
            this.createDate = createDate;
            this.updateDate = updateDate;
            this.currentUsers = currentUsers;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="taskListRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class taskListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        public taskListRequest() {
        }
        
        public taskListRequest(string sessionId) {
            this.sessionId = sessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="taskListResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class taskListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("tasks")]
        public Common.ProcessMakerService.taskListStruct[] tasks;
        
        public taskListResponse() {
        }
        
        public taskListResponse(Common.ProcessMakerService.taskListStruct[] tasks) {
            this.tasks = tasks;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="taskCaseRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class taskCaseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseId;
        
        public taskCaseRequest() {
        }
        
        public taskCaseRequest(string sessionId, string caseId) {
            this.sessionId = sessionId;
            this.caseId = caseId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="taskCaseResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class taskCaseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("taskCases")]
        public Common.ProcessMakerService.taskCaseStruct[] taskCases;
        
        public taskCaseResponse() {
        }
        
        public taskCaseResponse(Common.ProcessMakerService.taskCaseStruct[] taskCases) {
            this.taskCases = taskCases;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="systemInformationRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class systemInformationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        public systemInformationRequest() {
        }
        
        public systemInformationRequest(string sessionId) {
            this.sessionId = sessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="systemInformationResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class systemInformationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string timestamp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=4)]
        public string operatingSystem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=5)]
        public string webServer;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=6)]
        public string serverName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=7)]
        public string serverIp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=8)]
        public string phpVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=9)]
        public string databaseVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=10)]
        public string databaseServerIp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=11)]
        public string databaseName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=12)]
        public string availableDatabases;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=13)]
        public string userBrowser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=14)]
        public string userIp;
        
        public systemInformationResponse() {
        }
        
        public systemInformationResponse(string status_code, string message, string timestamp, string version, string operatingSystem, string webServer, string serverName, string serverIp, string phpVersion, string databaseVersion, string databaseServerIp, string databaseName, string availableDatabases, string userBrowser, string userIp) {
            this.status_code = status_code;
            this.message = message;
            this.timestamp = timestamp;
            this.version = version;
            this.operatingSystem = operatingSystem;
            this.webServer = webServer;
            this.serverName = serverName;
            this.serverIp = serverIp;
            this.phpVersion = phpVersion;
            this.databaseVersion = databaseVersion;
            this.databaseServerIp = databaseServerIp;
            this.databaseName = databaseName;
            this.availableDatabases = availableDatabases;
            this.userBrowser = userBrowser;
            this.userIp = userIp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="triggerListRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class triggerListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        public triggerListRequest() {
        }
        
        public triggerListRequest(string sessionId) {
            this.sessionId = sessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="triggerListResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class triggerListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("triggers")]
        public Common.ProcessMakerService.triggerListStruct[] triggers;
        
        public triggerListResponse() {
        }
        
        public triggerListResponse(Common.ProcessMakerService.triggerListStruct[] triggers) {
            this.triggers = triggers;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="outputDocumentListRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class outputDocumentListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseId;
        
        public outputDocumentListRequest() {
        }
        
        public outputDocumentListRequest(string sessionId, string caseId) {
            this.sessionId = sessionId;
            this.caseId = caseId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="outputDocumentListResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class outputDocumentListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("documents")]
        public Common.ProcessMakerService.outputDocumentListStruct[] documents;
        
        public outputDocumentListResponse() {
        }
        
        public outputDocumentListResponse(Common.ProcessMakerService.outputDocumentListStruct[] documents) {
            this.documents = documents;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="inputDocumentListRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class inputDocumentListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseId;
        
        public inputDocumentListRequest() {
        }
        
        public inputDocumentListRequest(string sessionId, string caseId) {
            this.sessionId = sessionId;
            this.caseId = caseId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="inputDocumentListResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class inputDocumentListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("documents")]
        public Common.ProcessMakerService.inputDocumentListStruct[] documents;
        
        public inputDocumentListResponse() {
        }
        
        public inputDocumentListResponse(Common.ProcessMakerService.inputDocumentListStruct[] documents) {
            this.documents = documents;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="inputDocumentProcessListRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class inputDocumentProcessListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string processId;
        
        public inputDocumentProcessListRequest() {
        }
        
        public inputDocumentProcessListRequest(string sessionId, string processId) {
            this.sessionId = sessionId;
            this.processId = processId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="inputDocumentProcessListResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class inputDocumentProcessListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("documents")]
        public Common.ProcessMakerService.inputDocumentProcessListStruct[] documents;
        
        public inputDocumentProcessListResponse() {
        }
        
        public inputDocumentProcessListResponse(Common.ProcessMakerService.inputDocumentProcessListStruct[] documents) {
            this.documents = documents;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeDocumentRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class removeDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string appDocUid;
        
        public removeDocumentRequest() {
        }
        
        public removeDocumentRequest(string sessionId, string appDocUid) {
            this.sessionId = sessionId;
            this.appDocUid = appDocUid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeDocumentResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class removeDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string timestamp;
        
        public removeDocumentResponse() {
        }
        
        public removeDocumentResponse(string status_code, string message, string timestamp) {
            this.status_code = status_code;
            this.message = message;
            this.timestamp = timestamp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="importProcessFromLibraryRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class importProcessFromLibraryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string importOption;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=4)]
        public string usernameLibrary;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=5)]
        public string passwordLibrary;
        
        public importProcessFromLibraryRequest() {
        }
        
        public importProcessFromLibraryRequest(string sessionId, string processId, string version, string importOption, string usernameLibrary, string passwordLibrary) {
            this.sessionId = sessionId;
            this.processId = processId;
            this.version = version;
            this.importOption = importOption;
            this.usernameLibrary = usernameLibrary;
            this.passwordLibrary = passwordLibrary;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="importProcessFromLibraryResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class importProcessFromLibraryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string processTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=4)]
        public string category;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=5)]
        public string version;
        
        public importProcessFromLibraryResponse() {
        }
        
        public importProcessFromLibraryResponse(string status_code, string message, string processId, string processTitle, string category, string version) {
            this.status_code = status_code;
            this.message = message;
            this.processId = processId;
            this.processTitle = processTitle;
            this.category = category;
            this.version = version;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCaseNotesRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class getCaseNotesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string applicationID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string userUid;
        
        public getCaseNotesRequest() {
        }
        
        public getCaseNotesRequest(string sessionId, string applicationID, string userUid) {
            this.sessionId = sessionId;
            this.applicationID = applicationID;
            this.userUid = userUid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCaseNotesResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class getCaseNotesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("notes")]
        public Common.ProcessMakerService.getCaseNotesStruct[] notes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string timestamp;
        
        public getCaseNotesResponse() {
        }
        
        public getCaseNotesResponse(string status_code, string message, Common.ProcessMakerService.getCaseNotesStruct[] notes, string timestamp) {
            this.status_code = status_code;
            this.message = message;
            this.notes = notes;
            this.timestamp = timestamp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeUserFromGroupRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class removeUserFromGroupRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string groupId;
        
        public removeUserFromGroupRequest() {
        }
        
        public removeUserFromGroupRequest(string sessionId, string userId, string groupId) {
            this.sessionId = sessionId;
            this.userId = userId;
            this.groupId = groupId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="deleteCaseRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class deleteCaseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseUid;
        
        public deleteCaseRequest() {
        }
        
        public deleteCaseRequest(string sessionId, string caseUid) {
            this.sessionId = sessionId;
            this.caseUid = caseUid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="deleteCaseResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class deleteCaseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string timestamp;
        
        public deleteCaseResponse() {
        }
        
        public deleteCaseResponse(string status_code, string message, string timestamp) {
            this.status_code = status_code;
            this.message = message;
            this.timestamp = timestamp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="cancelCaseRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class cancelCaseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseUid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string delIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string userUid;
        
        public cancelCaseRequest() {
        }
        
        public cancelCaseRequest(string sessionId, string caseUid, string delIndex, string userUid) {
            this.sessionId = sessionId;
            this.caseUid = caseUid;
            this.delIndex = delIndex;
            this.userUid = userUid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="cancelCaseResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class cancelCaseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string timestamp;
        
        public cancelCaseResponse() {
        }
        
        public cancelCaseResponse(string status_code, string message, string timestamp) {
            this.status_code = status_code;
            this.message = message;
            this.timestamp = timestamp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="pauseCaseRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class pauseCaseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseUid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string delIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string userUid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute("unpauseDate")]
        public string[] unpauseDate;
        
        public pauseCaseRequest() {
        }
        
        public pauseCaseRequest(string sessionId, string caseUid, string delIndex, string userUid, string[] unpauseDate) {
            this.sessionId = sessionId;
            this.caseUid = caseUid;
            this.delIndex = delIndex;
            this.userUid = userUid;
            this.unpauseDate = unpauseDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="pauseCaseResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class pauseCaseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string timestamp;
        
        public pauseCaseResponse() {
        }
        
        public pauseCaseResponse(string status_code, string message, string timestamp) {
            this.status_code = status_code;
            this.message = message;
            this.timestamp = timestamp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="unpauseCaseRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class unpauseCaseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseUid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string delIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string userUid;
        
        public unpauseCaseRequest() {
        }
        
        public unpauseCaseRequest(string sessionId, string caseUid, string delIndex, string userUid) {
            this.sessionId = sessionId;
            this.caseUid = caseUid;
            this.delIndex = delIndex;
            this.userUid = userUid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="unpauseCaseResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class unpauseCaseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string timestamp;
        
        public unpauseCaseResponse() {
        }
        
        public unpauseCaseResponse(string status_code, string message, string timestamp) {
            this.status_code = status_code;
            this.message = message;
            this.timestamp = timestamp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addCaseNoteRequest", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class addCaseNoteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string caseUid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string processUid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=3)]
        public string taskUid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=4)]
        public string userUid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=5)]
        public string note;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute("sendMail", DataType="integer")]
        public string[] sendMail;
        
        public addCaseNoteRequest() {
        }
        
        public addCaseNoteRequest(string sessionId, string caseUid, string processUid, string taskUid, string userUid, string note, string[] sendMail) {
            this.sessionId = sessionId;
            this.caseUid = caseUid;
            this.processUid = processUid;
            this.taskUid = taskUid;
            this.userUid = userUid;
            this.note = note;
            this.sendMail = sendMail;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addCaseNoteResponse", WrapperNamespace="http://www.processmaker.com", IsWrapped=true)]
    public partial class addCaseNoteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status_code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=1)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.processmaker.com", Order=2)]
        public string timestamp;
        
        public addCaseNoteResponse() {
        }
        
        public addCaseNoteResponse(string status_code, string message, string timestamp) {
            this.status_code = status_code;
            this.message = message;
            this.timestamp = timestamp;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProcessMakerServiceSoapChannel : Common.ProcessMakerService.ProcessMakerServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProcessMakerServiceSoapClient : System.ServiceModel.ClientBase<Common.ProcessMakerService.ProcessMakerServiceSoap>, Common.ProcessMakerService.ProcessMakerServiceSoap {
        
        public ProcessMakerServiceSoapClient() {
        }
        
        public ProcessMakerServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProcessMakerServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessMakerServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessMakerServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.loginResponse Common.ProcessMakerService.ProcessMakerServiceSoap.login(Common.ProcessMakerService.loginRequest request) {
            return base.Channel.login(request);
        }
        
        public string login(string userid, string password, out string message, out string version, out string timestamp) {
            Common.ProcessMakerService.loginRequest inValue = new Common.ProcessMakerService.loginRequest();
            inValue.userid = userid;
            inValue.password = password;
            Common.ProcessMakerService.loginResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).login(inValue);
            message = retVal.message;
            version = retVal.version;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.loginResponse> loginAsync(Common.ProcessMakerService.loginRequest request) {
            return base.Channel.loginAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.processListResponse Common.ProcessMakerService.ProcessMakerServiceSoap.processList(Common.ProcessMakerService.processListRequest request) {
            return base.Channel.processList(request);
        }
        
        public Common.ProcessMakerService.processListStruct[] processList(string sessionId) {
            Common.ProcessMakerService.processListRequest inValue = new Common.ProcessMakerService.processListRequest();
            inValue.sessionId = sessionId;
            Common.ProcessMakerService.processListResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).processList(inValue);
            return retVal.processes;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Common.ProcessMakerService.processListResponse> Common.ProcessMakerService.ProcessMakerServiceSoap.processListAsync(Common.ProcessMakerService.processListRequest request) {
            return base.Channel.processListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.processListResponse> processListAsync(string sessionId) {
            Common.ProcessMakerService.processListRequest inValue = new Common.ProcessMakerService.processListRequest();
            inValue.sessionId = sessionId;
            return ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).processListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.roleListResponse Common.ProcessMakerService.ProcessMakerServiceSoap.roleList(Common.ProcessMakerService.roleListRequest request) {
            return base.Channel.roleList(request);
        }
        
        public Common.ProcessMakerService.roleListStruct[] roleList(string sessionId) {
            Common.ProcessMakerService.roleListRequest inValue = new Common.ProcessMakerService.roleListRequest();
            inValue.sessionId = sessionId;
            Common.ProcessMakerService.roleListResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).roleList(inValue);
            return retVal.roles;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Common.ProcessMakerService.roleListResponse> Common.ProcessMakerService.ProcessMakerServiceSoap.roleListAsync(Common.ProcessMakerService.roleListRequest request) {
            return base.Channel.roleListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.roleListResponse> roleListAsync(string sessionId) {
            Common.ProcessMakerService.roleListRequest inValue = new Common.ProcessMakerService.roleListRequest();
            inValue.sessionId = sessionId;
            return ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).roleListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.groupListResponse Common.ProcessMakerService.ProcessMakerServiceSoap.groupList(Common.ProcessMakerService.groupListRequest request) {
            return base.Channel.groupList(request);
        }
        
        public Common.ProcessMakerService.groupListStruct[] groupList(string sessionId) {
            Common.ProcessMakerService.groupListRequest inValue = new Common.ProcessMakerService.groupListRequest();
            inValue.sessionId = sessionId;
            Common.ProcessMakerService.groupListResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).groupList(inValue);
            return retVal.groups;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Common.ProcessMakerService.groupListResponse> Common.ProcessMakerService.ProcessMakerServiceSoap.groupListAsync(Common.ProcessMakerService.groupListRequest request) {
            return base.Channel.groupListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.groupListResponse> groupListAsync(string sessionId) {
            Common.ProcessMakerService.groupListRequest inValue = new Common.ProcessMakerService.groupListRequest();
            inValue.sessionId = sessionId;
            return ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).groupListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.departmentListResponse Common.ProcessMakerService.ProcessMakerServiceSoap.departmentList(Common.ProcessMakerService.departmentListRequest request) {
            return base.Channel.departmentList(request);
        }
        
        public Common.ProcessMakerService.departmentListStruct[] departmentList(string sessionId) {
            Common.ProcessMakerService.departmentListRequest inValue = new Common.ProcessMakerService.departmentListRequest();
            inValue.sessionId = sessionId;
            Common.ProcessMakerService.departmentListResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).departmentList(inValue);
            return retVal.departments;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Common.ProcessMakerService.departmentListResponse> Common.ProcessMakerService.ProcessMakerServiceSoap.departmentListAsync(Common.ProcessMakerService.departmentListRequest request) {
            return base.Channel.departmentListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.departmentListResponse> departmentListAsync(string sessionId) {
            Common.ProcessMakerService.departmentListRequest inValue = new Common.ProcessMakerService.departmentListRequest();
            inValue.sessionId = sessionId;
            return ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).departmentListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.userListResponse Common.ProcessMakerService.ProcessMakerServiceSoap.userList(Common.ProcessMakerService.userListRequest request) {
            return base.Channel.userList(request);
        }
        
        public Common.ProcessMakerService.userListStruct[] userList(string sessionId) {
            Common.ProcessMakerService.userListRequest inValue = new Common.ProcessMakerService.userListRequest();
            inValue.sessionId = sessionId;
            Common.ProcessMakerService.userListResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).userList(inValue);
            return retVal.users;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Common.ProcessMakerService.userListResponse> Common.ProcessMakerService.ProcessMakerServiceSoap.userListAsync(Common.ProcessMakerService.userListRequest request) {
            return base.Channel.userListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.userListResponse> userListAsync(string sessionId) {
            Common.ProcessMakerService.userListRequest inValue = new Common.ProcessMakerService.userListRequest();
            inValue.sessionId = sessionId;
            return ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).userListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.caseListResponse Common.ProcessMakerService.ProcessMakerServiceSoap.caseList(Common.ProcessMakerService.caseListRequest request) {
            return base.Channel.caseList(request);
        }
        
        public Common.ProcessMakerService.caseListStruct[] caseList(string sessionId) {
            Common.ProcessMakerService.caseListRequest inValue = new Common.ProcessMakerService.caseListRequest();
            inValue.sessionId = sessionId;
            Common.ProcessMakerService.caseListResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).caseList(inValue);
            return retVal.cases;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Common.ProcessMakerService.caseListResponse> Common.ProcessMakerService.ProcessMakerServiceSoap.caseListAsync(Common.ProcessMakerService.caseListRequest request) {
            return base.Channel.caseListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.caseListResponse> caseListAsync(string sessionId) {
            Common.ProcessMakerService.caseListRequest inValue = new Common.ProcessMakerService.caseListRequest();
            inValue.sessionId = sessionId;
            return ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).caseListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.unassignedCaseListResponse Common.ProcessMakerService.ProcessMakerServiceSoap.unassignedCaseList(Common.ProcessMakerService.unassignedCaseListRequest request) {
            return base.Channel.unassignedCaseList(request);
        }
        
        public Common.ProcessMakerService.unassignedCaseListStruct[] unassignedCaseList(string sessionId) {
            Common.ProcessMakerService.unassignedCaseListRequest inValue = new Common.ProcessMakerService.unassignedCaseListRequest();
            inValue.sessionId = sessionId;
            Common.ProcessMakerService.unassignedCaseListResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).unassignedCaseList(inValue);
            return retVal.cases;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Common.ProcessMakerService.unassignedCaseListResponse> Common.ProcessMakerService.ProcessMakerServiceSoap.unassignedCaseListAsync(Common.ProcessMakerService.unassignedCaseListRequest request) {
            return base.Channel.unassignedCaseListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.unassignedCaseListResponse> unassignedCaseListAsync(string sessionId) {
            Common.ProcessMakerService.unassignedCaseListRequest inValue = new Common.ProcessMakerService.unassignedCaseListRequest();
            inValue.sessionId = sessionId;
            return ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).unassignedCaseListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.createUserResponse Common.ProcessMakerService.ProcessMakerServiceSoap.createUser(Common.ProcessMakerService.createUserRequest request) {
            return base.Channel.createUser(request);
        }
        
        public string createUser(string sessionId, string userId, string firstname, string lastname, string email, string role, string password, string[] dueDate, string[] status, out string message, out string userUID, out string timestamp) {
            Common.ProcessMakerService.createUserRequest inValue = new Common.ProcessMakerService.createUserRequest();
            inValue.sessionId = sessionId;
            inValue.userId = userId;
            inValue.firstname = firstname;
            inValue.lastname = lastname;
            inValue.email = email;
            inValue.role = role;
            inValue.password = password;
            inValue.dueDate = dueDate;
            inValue.status = status;
            Common.ProcessMakerService.createUserResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).createUser(inValue);
            message = retVal.message;
            userUID = retVal.userUID;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.createUserResponse> createUserAsync(Common.ProcessMakerService.createUserRequest request) {
            return base.Channel.createUserAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.updateUserResponse Common.ProcessMakerService.ProcessMakerServiceSoap.updateUser(Common.ProcessMakerService.updateUserRequest request) {
            return base.Channel.updateUser(request);
        }
        
        public string updateUser(string sessionId, string userUid, string userName, string[] firstName, string[] lastName, string[] email, string[] dueDate, string[] status, string[] role, string[] password, out string message, out string timestamp) {
            Common.ProcessMakerService.updateUserRequest inValue = new Common.ProcessMakerService.updateUserRequest();
            inValue.sessionId = sessionId;
            inValue.userUid = userUid;
            inValue.userName = userName;
            inValue.firstName = firstName;
            inValue.lastName = lastName;
            inValue.email = email;
            inValue.dueDate = dueDate;
            inValue.status = status;
            inValue.role = role;
            inValue.password = password;
            Common.ProcessMakerService.updateUserResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).updateUser(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.updateUserResponse> updateUserAsync(Common.ProcessMakerService.updateUserRequest request) {
            return base.Channel.updateUserAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.informationUserResponse Common.ProcessMakerService.ProcessMakerServiceSoap.informationUser(Common.ProcessMakerService.informationUserRequest request) {
            return base.Channel.informationUser(request);
        }
        
        public string informationUser(string sessionId, string userUid, out string message, out string timestamp, out Common.ProcessMakerService.informationUserStruct[] info) {
            Common.ProcessMakerService.informationUserRequest inValue = new Common.ProcessMakerService.informationUserRequest();
            inValue.sessionId = sessionId;
            inValue.userUid = userUid;
            Common.ProcessMakerService.informationUserResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).informationUser(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            info = retVal.info;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.informationUserResponse> informationUserAsync(Common.ProcessMakerService.informationUserRequest request) {
            return base.Channel.informationUserAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.createGroupResponse Common.ProcessMakerService.ProcessMakerServiceSoap.createGroup(Common.ProcessMakerService.createGroupRequest request) {
            return base.Channel.createGroup(request);
        }
        
        public string createGroup(string sessionId, string name, out string message, out string groupUID, out string timestamp) {
            Common.ProcessMakerService.createGroupRequest inValue = new Common.ProcessMakerService.createGroupRequest();
            inValue.sessionId = sessionId;
            inValue.name = name;
            Common.ProcessMakerService.createGroupResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).createGroup(inValue);
            message = retVal.message;
            groupUID = retVal.groupUID;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.createGroupResponse> createGroupAsync(Common.ProcessMakerService.createGroupRequest request) {
            return base.Channel.createGroupAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.createDepartmentResponse Common.ProcessMakerService.ProcessMakerServiceSoap.createDepartment(Common.ProcessMakerService.createDepartmentRequest request) {
            return base.Channel.createDepartment(request);
        }
        
        public string createDepartment(string sessionId, string name, string parentUID, out string message, out string departmentUID, out string timestamp) {
            Common.ProcessMakerService.createDepartmentRequest inValue = new Common.ProcessMakerService.createDepartmentRequest();
            inValue.sessionId = sessionId;
            inValue.name = name;
            inValue.parentUID = parentUID;
            Common.ProcessMakerService.createDepartmentResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).createDepartment(inValue);
            message = retVal.message;
            departmentUID = retVal.departmentUID;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.createDepartmentResponse> createDepartmentAsync(Common.ProcessMakerService.createDepartmentRequest request) {
            return base.Channel.createDepartmentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.assignUserToGroupResponse Common.ProcessMakerService.ProcessMakerServiceSoap.assignUserToGroup(Common.ProcessMakerService.assignUserToGroupRequest request) {
            return base.Channel.assignUserToGroup(request);
        }
        
        public string assignUserToGroup(string sessionId, string userId, string groupId, out string message, out string timestamp) {
            Common.ProcessMakerService.assignUserToGroupRequest inValue = new Common.ProcessMakerService.assignUserToGroupRequest();
            inValue.sessionId = sessionId;
            inValue.userId = userId;
            inValue.groupId = groupId;
            Common.ProcessMakerService.assignUserToGroupResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).assignUserToGroup(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.assignUserToGroupResponse> assignUserToGroupAsync(Common.ProcessMakerService.assignUserToGroupRequest request) {
            return base.Channel.assignUserToGroupAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.assignUserToGroupResponse Common.ProcessMakerService.ProcessMakerServiceSoap.assignUserToDepartment(Common.ProcessMakerService.assignUserToDepartmentRequest request) {
            return base.Channel.assignUserToDepartment(request);
        }
        
        public string assignUserToDepartment(string sessionId, string userId, string departmentId, string manager, out string message, out string timestamp) {
            Common.ProcessMakerService.assignUserToDepartmentRequest inValue = new Common.ProcessMakerService.assignUserToDepartmentRequest();
            inValue.sessionId = sessionId;
            inValue.userId = userId;
            inValue.departmentId = departmentId;
            inValue.manager = manager;
            Common.ProcessMakerService.assignUserToGroupResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).assignUserToDepartment(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.assignUserToGroupResponse> assignUserToDepartmentAsync(Common.ProcessMakerService.assignUserToDepartmentRequest request) {
            return base.Channel.assignUserToDepartmentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.newCaseResponse Common.ProcessMakerService.ProcessMakerServiceSoap.newCase(Common.ProcessMakerService.newCaseRequest request) {
            return base.Channel.newCase(request);
        }
        
        public string newCase(string sessionId, string processId, string taskId, Common.ProcessMakerService.variableListStruct[] variables, string[] executeTriggers, out string message, out string caseId, out string caseNumber, out string timestamp) {
            Common.ProcessMakerService.newCaseRequest inValue = new Common.ProcessMakerService.newCaseRequest();
            inValue.sessionId = sessionId;
            inValue.processId = processId;
            inValue.taskId = taskId;
            inValue.variables = variables;
            inValue.executeTriggers = executeTriggers;
            Common.ProcessMakerService.newCaseResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).newCase(inValue);
            message = retVal.message;
            caseId = retVal.caseId;
            caseNumber = retVal.caseNumber;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.newCaseResponse> newCaseAsync(Common.ProcessMakerService.newCaseRequest request) {
            return base.Channel.newCaseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.assignUserToGroupResponse Common.ProcessMakerService.ProcessMakerServiceSoap.reassignCase(Common.ProcessMakerService.reassignCaseRequest request) {
            return base.Channel.reassignCase(request);
        }
        
        public string reassignCase(string sessionId, string caseId, string delIndex, string userIdSource, string userIdTarget, out string message, out string timestamp) {
            Common.ProcessMakerService.reassignCaseRequest inValue = new Common.ProcessMakerService.reassignCaseRequest();
            inValue.sessionId = sessionId;
            inValue.caseId = caseId;
            inValue.delIndex = delIndex;
            inValue.userIdSource = userIdSource;
            inValue.userIdTarget = userIdTarget;
            Common.ProcessMakerService.assignUserToGroupResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).reassignCase(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.assignUserToGroupResponse> reassignCaseAsync(Common.ProcessMakerService.reassignCaseRequest request) {
            return base.Channel.reassignCaseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.newCaseImpersonateResponse Common.ProcessMakerService.ProcessMakerServiceSoap.newCaseImpersonate(Common.ProcessMakerService.newCaseImpersonateRequest request) {
            return base.Channel.newCaseImpersonate(request);
        }
        
        public string newCaseImpersonate(string sessionId, string processId, string userId, Common.ProcessMakerService.variableListStruct[] variables, string taskId, out string message, out string timestamp, out string caseId, out string caseNumber) {
            Common.ProcessMakerService.newCaseImpersonateRequest inValue = new Common.ProcessMakerService.newCaseImpersonateRequest();
            inValue.sessionId = sessionId;
            inValue.processId = processId;
            inValue.userId = userId;
            inValue.variables = variables;
            inValue.taskId = taskId;
            Common.ProcessMakerService.newCaseImpersonateResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).newCaseImpersonate(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            caseId = retVal.caseId;
            caseNumber = retVal.caseNumber;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.newCaseImpersonateResponse> newCaseImpersonateAsync(Common.ProcessMakerService.newCaseImpersonateRequest request) {
            return base.Channel.newCaseImpersonateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.routeCaseResponse Common.ProcessMakerService.ProcessMakerServiceSoap.routeCase(Common.ProcessMakerService.routeCaseRequest request) {
            return base.Channel.routeCase(request);
        }
        
        public string routeCase(string sessionId, string caseId, string delIndex, out string message, out string timestamp, out Common.ProcessMakerService.routeListStruct[] routing) {
            Common.ProcessMakerService.routeCaseRequest inValue = new Common.ProcessMakerService.routeCaseRequest();
            inValue.sessionId = sessionId;
            inValue.caseId = caseId;
            inValue.delIndex = delIndex;
            Common.ProcessMakerService.routeCaseResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).routeCase(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            routing = retVal.routing;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.routeCaseResponse> routeCaseAsync(Common.ProcessMakerService.routeCaseRequest request) {
            return base.Channel.routeCaseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.assignUserToGroupResponse Common.ProcessMakerService.ProcessMakerServiceSoap.executeTrigger(Common.ProcessMakerService.executeTriggerRequest request) {
            return base.Channel.executeTrigger(request);
        }
        
        public string executeTrigger(string sessionId, string caseId, string triggerIndex, string delIndex, out string message, out string timestamp) {
            Common.ProcessMakerService.executeTriggerRequest inValue = new Common.ProcessMakerService.executeTriggerRequest();
            inValue.sessionId = sessionId;
            inValue.caseId = caseId;
            inValue.triggerIndex = triggerIndex;
            inValue.delIndex = delIndex;
            Common.ProcessMakerService.assignUserToGroupResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).executeTrigger(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.assignUserToGroupResponse> executeTriggerAsync(Common.ProcessMakerService.executeTriggerRequest request) {
            return base.Channel.executeTriggerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.assignUserToGroupResponse Common.ProcessMakerService.ProcessMakerServiceSoap.sendVariables(Common.ProcessMakerService.sendVariablesRequest request) {
            return base.Channel.sendVariables(request);
        }
        
        public string sendVariables(string sessionId, string caseId, Common.ProcessMakerService.variableListStruct[] variables, out string message, out string timestamp) {
            Common.ProcessMakerService.sendVariablesRequest inValue = new Common.ProcessMakerService.sendVariablesRequest();
            inValue.sessionId = sessionId;
            inValue.caseId = caseId;
            inValue.variables = variables;
            Common.ProcessMakerService.assignUserToGroupResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).sendVariables(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.assignUserToGroupResponse> sendVariablesAsync(Common.ProcessMakerService.sendVariablesRequest request) {
            return base.Channel.sendVariablesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.getVariablesResponse Common.ProcessMakerService.ProcessMakerServiceSoap.getVariables(Common.ProcessMakerService.getVariablesRequest request) {
            return base.Channel.getVariables(request);
        }
        
        public string getVariables(string sessionId, string caseId, Common.ProcessMakerService.variableStruct[] variables, out string message, out string timestamp, out Common.ProcessMakerService.variableListStruct[] variables1) {
            Common.ProcessMakerService.getVariablesRequest inValue = new Common.ProcessMakerService.getVariablesRequest();
            inValue.sessionId = sessionId;
            inValue.caseId = caseId;
            inValue.variables = variables;
            Common.ProcessMakerService.getVariablesResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).getVariables(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            variables1 = retVal.variables;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.getVariablesResponse> getVariablesAsync(Common.ProcessMakerService.getVariablesRequest request) {
            return base.Channel.getVariablesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.getVariablesNamesResponse Common.ProcessMakerService.ProcessMakerServiceSoap.getVariablesNames(Common.ProcessMakerService.getVariablesNamesRequest request) {
            return base.Channel.getVariablesNames(request);
        }
        
        public string getVariablesNames(string sessionId, string caseId, out string message, out string timestamp, out Common.ProcessMakerService.variableListNameStruct[] variables) {
            Common.ProcessMakerService.getVariablesNamesRequest inValue = new Common.ProcessMakerService.getVariablesNamesRequest();
            inValue.sessionId = sessionId;
            inValue.caseId = caseId;
            Common.ProcessMakerService.getVariablesNamesResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).getVariablesNames(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            variables = retVal.variables;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.getVariablesNamesResponse> getVariablesNamesAsync(Common.ProcessMakerService.getVariablesNamesRequest request) {
            return base.Channel.getVariablesNamesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.assignUserToGroupResponse Common.ProcessMakerService.ProcessMakerServiceSoap.sendMessage(Common.ProcessMakerService.sendMessageRequest request) {
            return base.Channel.sendMessage(request);
        }
        
        public string sendMessage(string sessionId, string caseId, string from, string to, string cc, string bcc, string subject, string template, out string message, out string timestamp) {
            Common.ProcessMakerService.sendMessageRequest inValue = new Common.ProcessMakerService.sendMessageRequest();
            inValue.sessionId = sessionId;
            inValue.caseId = caseId;
            inValue.from = from;
            inValue.to = to;
            inValue.cc = cc;
            inValue.bcc = bcc;
            inValue.subject = subject;
            inValue.template = template;
            Common.ProcessMakerService.assignUserToGroupResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).sendMessage(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.assignUserToGroupResponse> sendMessageAsync(Common.ProcessMakerService.sendMessageRequest request) {
            return base.Channel.sendMessageAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.getCaseInfoResponse Common.ProcessMakerService.ProcessMakerServiceSoap.getCaseInfo(Common.ProcessMakerService.getCaseInfoRequest request) {
            return base.Channel.getCaseInfo(request);
        }
        
        public string getCaseInfo(string sessionId, ref string caseId, string delIndex, out string message, out string caseNumber, out string caseName, out string caseStatus, out string caseParalell, out string caseCreatorUser, out string caseCreatorUserName, out string processId, out string processName, out string createDate, out string updateDate, out Common.ProcessMakerService.getCaseInfoStruct[] currentUsers) {
            Common.ProcessMakerService.getCaseInfoRequest inValue = new Common.ProcessMakerService.getCaseInfoRequest();
            inValue.sessionId = sessionId;
            inValue.caseId = caseId;
            inValue.delIndex = delIndex;
            Common.ProcessMakerService.getCaseInfoResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).getCaseInfo(inValue);
            message = retVal.message;
            caseId = retVal.caseId;
            caseNumber = retVal.caseNumber;
            caseName = retVal.caseName;
            caseStatus = retVal.caseStatus;
            caseParalell = retVal.caseParalell;
            caseCreatorUser = retVal.caseCreatorUser;
            caseCreatorUserName = retVal.caseCreatorUserName;
            processId = retVal.processId;
            processName = retVal.processName;
            createDate = retVal.createDate;
            updateDate = retVal.updateDate;
            currentUsers = retVal.currentUsers;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.getCaseInfoResponse> getCaseInfoAsync(Common.ProcessMakerService.getCaseInfoRequest request) {
            return base.Channel.getCaseInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.taskListResponse Common.ProcessMakerService.ProcessMakerServiceSoap.taskList(Common.ProcessMakerService.taskListRequest request) {
            return base.Channel.taskList(request);
        }
        
        public Common.ProcessMakerService.taskListStruct[] taskList(string sessionId) {
            Common.ProcessMakerService.taskListRequest inValue = new Common.ProcessMakerService.taskListRequest();
            inValue.sessionId = sessionId;
            Common.ProcessMakerService.taskListResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).taskList(inValue);
            return retVal.tasks;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Common.ProcessMakerService.taskListResponse> Common.ProcessMakerService.ProcessMakerServiceSoap.taskListAsync(Common.ProcessMakerService.taskListRequest request) {
            return base.Channel.taskListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.taskListResponse> taskListAsync(string sessionId) {
            Common.ProcessMakerService.taskListRequest inValue = new Common.ProcessMakerService.taskListRequest();
            inValue.sessionId = sessionId;
            return ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).taskListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.taskCaseResponse Common.ProcessMakerService.ProcessMakerServiceSoap.taskCase(Common.ProcessMakerService.taskCaseRequest request) {
            return base.Channel.taskCase(request);
        }
        
        public Common.ProcessMakerService.taskCaseStruct[] taskCase(string sessionId, string caseId) {
            Common.ProcessMakerService.taskCaseRequest inValue = new Common.ProcessMakerService.taskCaseRequest();
            inValue.sessionId = sessionId;
            inValue.caseId = caseId;
            Common.ProcessMakerService.taskCaseResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).taskCase(inValue);
            return retVal.taskCases;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Common.ProcessMakerService.taskCaseResponse> Common.ProcessMakerService.ProcessMakerServiceSoap.taskCaseAsync(Common.ProcessMakerService.taskCaseRequest request) {
            return base.Channel.taskCaseAsync(request);
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.taskCaseResponse> taskCaseAsync(string sessionId, string caseId) {
            Common.ProcessMakerService.taskCaseRequest inValue = new Common.ProcessMakerService.taskCaseRequest();
            inValue.sessionId = sessionId;
            inValue.caseId = caseId;
            return ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).taskCaseAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.systemInformationResponse Common.ProcessMakerService.ProcessMakerServiceSoap.systemInformation(Common.ProcessMakerService.systemInformationRequest request) {
            return base.Channel.systemInformation(request);
        }
        
        public string systemInformation(string sessionId, out string message, out string timestamp, out string version, out string operatingSystem, out string webServer, out string serverName, out string serverIp, out string phpVersion, out string databaseVersion, out string databaseServerIp, out string databaseName, out string availableDatabases, out string userBrowser, out string userIp) {
            Common.ProcessMakerService.systemInformationRequest inValue = new Common.ProcessMakerService.systemInformationRequest();
            inValue.sessionId = sessionId;
            Common.ProcessMakerService.systemInformationResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).systemInformation(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            version = retVal.version;
            operatingSystem = retVal.operatingSystem;
            webServer = retVal.webServer;
            serverName = retVal.serverName;
            serverIp = retVal.serverIp;
            phpVersion = retVal.phpVersion;
            databaseVersion = retVal.databaseVersion;
            databaseServerIp = retVal.databaseServerIp;
            databaseName = retVal.databaseName;
            availableDatabases = retVal.availableDatabases;
            userBrowser = retVal.userBrowser;
            userIp = retVal.userIp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.systemInformationResponse> systemInformationAsync(Common.ProcessMakerService.systemInformationRequest request) {
            return base.Channel.systemInformationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.triggerListResponse Common.ProcessMakerService.ProcessMakerServiceSoap.triggerList(Common.ProcessMakerService.triggerListRequest request) {
            return base.Channel.triggerList(request);
        }
        
        public Common.ProcessMakerService.triggerListStruct[] triggerList(string sessionId) {
            Common.ProcessMakerService.triggerListRequest inValue = new Common.ProcessMakerService.triggerListRequest();
            inValue.sessionId = sessionId;
            Common.ProcessMakerService.triggerListResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).triggerList(inValue);
            return retVal.triggers;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Common.ProcessMakerService.triggerListResponse> Common.ProcessMakerService.ProcessMakerServiceSoap.triggerListAsync(Common.ProcessMakerService.triggerListRequest request) {
            return base.Channel.triggerListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.triggerListResponse> triggerListAsync(string sessionId) {
            Common.ProcessMakerService.triggerListRequest inValue = new Common.ProcessMakerService.triggerListRequest();
            inValue.sessionId = sessionId;
            return ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).triggerListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.outputDocumentListResponse Common.ProcessMakerService.ProcessMakerServiceSoap.outputDocumentList(Common.ProcessMakerService.outputDocumentListRequest request) {
            return base.Channel.outputDocumentList(request);
        }
        
        public Common.ProcessMakerService.outputDocumentListStruct[] outputDocumentList(string sessionId, string caseId) {
            Common.ProcessMakerService.outputDocumentListRequest inValue = new Common.ProcessMakerService.outputDocumentListRequest();
            inValue.sessionId = sessionId;
            inValue.caseId = caseId;
            Common.ProcessMakerService.outputDocumentListResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).outputDocumentList(inValue);
            return retVal.documents;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Common.ProcessMakerService.outputDocumentListResponse> Common.ProcessMakerService.ProcessMakerServiceSoap.outputDocumentListAsync(Common.ProcessMakerService.outputDocumentListRequest request) {
            return base.Channel.outputDocumentListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.outputDocumentListResponse> outputDocumentListAsync(string sessionId, string caseId) {
            Common.ProcessMakerService.outputDocumentListRequest inValue = new Common.ProcessMakerService.outputDocumentListRequest();
            inValue.sessionId = sessionId;
            inValue.caseId = caseId;
            return ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).outputDocumentListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.inputDocumentListResponse Common.ProcessMakerService.ProcessMakerServiceSoap.inputDocumentList(Common.ProcessMakerService.inputDocumentListRequest request) {
            return base.Channel.inputDocumentList(request);
        }
        
        public Common.ProcessMakerService.inputDocumentListStruct[] inputDocumentList(string sessionId, string caseId) {
            Common.ProcessMakerService.inputDocumentListRequest inValue = new Common.ProcessMakerService.inputDocumentListRequest();
            inValue.sessionId = sessionId;
            inValue.caseId = caseId;
            Common.ProcessMakerService.inputDocumentListResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).inputDocumentList(inValue);
            return retVal.documents;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Common.ProcessMakerService.inputDocumentListResponse> Common.ProcessMakerService.ProcessMakerServiceSoap.inputDocumentListAsync(Common.ProcessMakerService.inputDocumentListRequest request) {
            return base.Channel.inputDocumentListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.inputDocumentListResponse> inputDocumentListAsync(string sessionId, string caseId) {
            Common.ProcessMakerService.inputDocumentListRequest inValue = new Common.ProcessMakerService.inputDocumentListRequest();
            inValue.sessionId = sessionId;
            inValue.caseId = caseId;
            return ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).inputDocumentListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.inputDocumentProcessListResponse Common.ProcessMakerService.ProcessMakerServiceSoap.inputDocumentProcessList(Common.ProcessMakerService.inputDocumentProcessListRequest request) {
            return base.Channel.inputDocumentProcessList(request);
        }
        
        public Common.ProcessMakerService.inputDocumentProcessListStruct[] inputDocumentProcessList(string sessionId, string processId) {
            Common.ProcessMakerService.inputDocumentProcessListRequest inValue = new Common.ProcessMakerService.inputDocumentProcessListRequest();
            inValue.sessionId = sessionId;
            inValue.processId = processId;
            Common.ProcessMakerService.inputDocumentProcessListResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).inputDocumentProcessList(inValue);
            return retVal.documents;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Common.ProcessMakerService.inputDocumentProcessListResponse> Common.ProcessMakerService.ProcessMakerServiceSoap.inputDocumentProcessListAsync(Common.ProcessMakerService.inputDocumentProcessListRequest request) {
            return base.Channel.inputDocumentProcessListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.inputDocumentProcessListResponse> inputDocumentProcessListAsync(string sessionId, string processId) {
            Common.ProcessMakerService.inputDocumentProcessListRequest inValue = new Common.ProcessMakerService.inputDocumentProcessListRequest();
            inValue.sessionId = sessionId;
            inValue.processId = processId;
            return ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).inputDocumentProcessListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.removeDocumentResponse Common.ProcessMakerService.ProcessMakerServiceSoap.removeDocument(Common.ProcessMakerService.removeDocumentRequest request) {
            return base.Channel.removeDocument(request);
        }
        
        public string removeDocument(string sessionId, string appDocUid, out string message, out string timestamp) {
            Common.ProcessMakerService.removeDocumentRequest inValue = new Common.ProcessMakerService.removeDocumentRequest();
            inValue.sessionId = sessionId;
            inValue.appDocUid = appDocUid;
            Common.ProcessMakerService.removeDocumentResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).removeDocument(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.removeDocumentResponse> removeDocumentAsync(Common.ProcessMakerService.removeDocumentRequest request) {
            return base.Channel.removeDocumentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.importProcessFromLibraryResponse Common.ProcessMakerService.ProcessMakerServiceSoap.importProcessFromLibrary(Common.ProcessMakerService.importProcessFromLibraryRequest request) {
            return base.Channel.importProcessFromLibrary(request);
        }
        
        public string importProcessFromLibrary(string sessionId, ref string processId, ref string version, string importOption, string usernameLibrary, string passwordLibrary, out string message, out string processTitle, out string category) {
            Common.ProcessMakerService.importProcessFromLibraryRequest inValue = new Common.ProcessMakerService.importProcessFromLibraryRequest();
            inValue.sessionId = sessionId;
            inValue.processId = processId;
            inValue.version = version;
            inValue.importOption = importOption;
            inValue.usernameLibrary = usernameLibrary;
            inValue.passwordLibrary = passwordLibrary;
            Common.ProcessMakerService.importProcessFromLibraryResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).importProcessFromLibrary(inValue);
            message = retVal.message;
            processId = retVal.processId;
            processTitle = retVal.processTitle;
            category = retVal.category;
            version = retVal.version;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.importProcessFromLibraryResponse> importProcessFromLibraryAsync(Common.ProcessMakerService.importProcessFromLibraryRequest request) {
            return base.Channel.importProcessFromLibraryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.getCaseNotesResponse Common.ProcessMakerService.ProcessMakerServiceSoap.getCaseNotes(Common.ProcessMakerService.getCaseNotesRequest request) {
            return base.Channel.getCaseNotes(request);
        }
        
        public string getCaseNotes(string sessionId, string applicationID, string userUid, out string message, out Common.ProcessMakerService.getCaseNotesStruct[] notes, out string timestamp) {
            Common.ProcessMakerService.getCaseNotesRequest inValue = new Common.ProcessMakerService.getCaseNotesRequest();
            inValue.sessionId = sessionId;
            inValue.applicationID = applicationID;
            inValue.userUid = userUid;
            Common.ProcessMakerService.getCaseNotesResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).getCaseNotes(inValue);
            message = retVal.message;
            notes = retVal.notes;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.getCaseNotesResponse> getCaseNotesAsync(Common.ProcessMakerService.getCaseNotesRequest request) {
            return base.Channel.getCaseNotesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.assignUserToGroupResponse Common.ProcessMakerService.ProcessMakerServiceSoap.removeUserFromGroup(Common.ProcessMakerService.removeUserFromGroupRequest request) {
            return base.Channel.removeUserFromGroup(request);
        }
        
        public string removeUserFromGroup(string sessionId, string userId, string groupId, out string message, out string timestamp) {
            Common.ProcessMakerService.removeUserFromGroupRequest inValue = new Common.ProcessMakerService.removeUserFromGroupRequest();
            inValue.sessionId = sessionId;
            inValue.userId = userId;
            inValue.groupId = groupId;
            Common.ProcessMakerService.assignUserToGroupResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).removeUserFromGroup(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.assignUserToGroupResponse> removeUserFromGroupAsync(Common.ProcessMakerService.removeUserFromGroupRequest request) {
            return base.Channel.removeUserFromGroupAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.deleteCaseResponse Common.ProcessMakerService.ProcessMakerServiceSoap.deleteCase(Common.ProcessMakerService.deleteCaseRequest request) {
            return base.Channel.deleteCase(request);
        }
        
        public string deleteCase(string sessionId, string caseUid, out string message, out string timestamp) {
            Common.ProcessMakerService.deleteCaseRequest inValue = new Common.ProcessMakerService.deleteCaseRequest();
            inValue.sessionId = sessionId;
            inValue.caseUid = caseUid;
            Common.ProcessMakerService.deleteCaseResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).deleteCase(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.deleteCaseResponse> deleteCaseAsync(Common.ProcessMakerService.deleteCaseRequest request) {
            return base.Channel.deleteCaseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.cancelCaseResponse Common.ProcessMakerService.ProcessMakerServiceSoap.cancelCase(Common.ProcessMakerService.cancelCaseRequest request) {
            return base.Channel.cancelCase(request);
        }
        
        public string cancelCase(string sessionId, string caseUid, string delIndex, string userUid, out string message, out string timestamp) {
            Common.ProcessMakerService.cancelCaseRequest inValue = new Common.ProcessMakerService.cancelCaseRequest();
            inValue.sessionId = sessionId;
            inValue.caseUid = caseUid;
            inValue.delIndex = delIndex;
            inValue.userUid = userUid;
            Common.ProcessMakerService.cancelCaseResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).cancelCase(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.cancelCaseResponse> cancelCaseAsync(Common.ProcessMakerService.cancelCaseRequest request) {
            return base.Channel.cancelCaseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.pauseCaseResponse Common.ProcessMakerService.ProcessMakerServiceSoap.pauseCase(Common.ProcessMakerService.pauseCaseRequest request) {
            return base.Channel.pauseCase(request);
        }
        
        public string pauseCase(string sessionId, string caseUid, string delIndex, string userUid, string[] unpauseDate, out string message, out string timestamp) {
            Common.ProcessMakerService.pauseCaseRequest inValue = new Common.ProcessMakerService.pauseCaseRequest();
            inValue.sessionId = sessionId;
            inValue.caseUid = caseUid;
            inValue.delIndex = delIndex;
            inValue.userUid = userUid;
            inValue.unpauseDate = unpauseDate;
            Common.ProcessMakerService.pauseCaseResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).pauseCase(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.pauseCaseResponse> pauseCaseAsync(Common.ProcessMakerService.pauseCaseRequest request) {
            return base.Channel.pauseCaseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.unpauseCaseResponse Common.ProcessMakerService.ProcessMakerServiceSoap.unpauseCase(Common.ProcessMakerService.unpauseCaseRequest request) {
            return base.Channel.unpauseCase(request);
        }
        
        public string unpauseCase(string sessionId, string caseUid, string delIndex, string userUid, out string message, out string timestamp) {
            Common.ProcessMakerService.unpauseCaseRequest inValue = new Common.ProcessMakerService.unpauseCaseRequest();
            inValue.sessionId = sessionId;
            inValue.caseUid = caseUid;
            inValue.delIndex = delIndex;
            inValue.userUid = userUid;
            Common.ProcessMakerService.unpauseCaseResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).unpauseCase(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.unpauseCaseResponse> unpauseCaseAsync(Common.ProcessMakerService.unpauseCaseRequest request) {
            return base.Channel.unpauseCaseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Common.ProcessMakerService.addCaseNoteResponse Common.ProcessMakerService.ProcessMakerServiceSoap.addCaseNote(Common.ProcessMakerService.addCaseNoteRequest request) {
            return base.Channel.addCaseNote(request);
        }
        
        public string addCaseNote(string sessionId, string caseUid, string processUid, string taskUid, string userUid, string note, string[] sendMail, out string message, out string timestamp) {
            Common.ProcessMakerService.addCaseNoteRequest inValue = new Common.ProcessMakerService.addCaseNoteRequest();
            inValue.sessionId = sessionId;
            inValue.caseUid = caseUid;
            inValue.processUid = processUid;
            inValue.taskUid = taskUid;
            inValue.userUid = userUid;
            inValue.note = note;
            inValue.sendMail = sendMail;
            Common.ProcessMakerService.addCaseNoteResponse retVal = ((Common.ProcessMakerService.ProcessMakerServiceSoap)(this)).addCaseNote(inValue);
            message = retVal.message;
            timestamp = retVal.timestamp;
            return retVal.status_code;
        }
        
        public System.Threading.Tasks.Task<Common.ProcessMakerService.addCaseNoteResponse> addCaseNoteAsync(Common.ProcessMakerService.addCaseNoteRequest request) {
            return base.Channel.addCaseNoteAsync(request);
        }
    }
}
