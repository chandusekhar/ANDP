using System;
using Common.Lib.Mapping;

namespace ANDP.Provisioning.API.Rest.Models.ApMax.MappingProfiles
{
    public class SubscriberTypeProfile : CommonMappingProfile
    {
        protected override void Configure()
        {
            CreateMap<SubscriberType, Common.SubscriberV3.SubscriberType>()
                .ForMember(dest => dest.Addresses, opt => opt.MapFrom(src => src.Addresses))
                .ForMember(dest => dest.BillingAccountNumber, opt => opt.MapFrom(src => src.BillingAccountNumber))
                .ForMember(dest => dest.BillingEnvironmentCode, opt => opt.MapFrom(src => src.BillingEnvironmentCode))
                .ForMember(dest => dest.BillingServiceAddress, opt => opt.MapFrom(src => src.BillingServiceAddress))
                .ForMember(dest => dest.DialByNameDigits, opt => opt.MapFrom(src => src.DialByNameDigits))
                .ForMember(dest => dest.ExtensionData, opt => opt.Ignore())
                .ForMember(dest => dest.InternetAccess, opt => opt.MapFrom(src => src.InternetAccess))
                .ForMember(dest => dest.LastUpdateTime, opt => opt.MapFrom(src => src.LastUpdate))
                .ForMember(dest => dest.LastUpdatedBy, opt => opt.MapFrom(src => src.LastUpdatedBy))
                .ForMember(dest => dest.Latitude, opt => opt.MapFrom(src => src.Latitude))
                .ForMember(dest => dest.Longitude, opt => opt.MapFrom(src => src.Longitude))
                .ForMember(dest => dest.ParentSubscriberId, opt => opt.MapFrom(src => src.ParentSubscriberId))
                .ForMember(dest => dest.PlacementType, opt => opt.MapFrom(src => src.PlacementType))
                .ForMember(dest => dest.ServiceInformation, opt => opt.MapFrom(src => src.ServiceInformation))
                .ForMember(dest => dest.SubscriberDefaultPhoneNumber, opt => opt.MapFrom(src => src.SubscriberDefaultPhoneNumber))
                .ForMember(dest => dest.SubscriberEmail, opt => opt.MapFrom(src => src.SubscriberEmail))
                .ForMember(dest => dest.SubscriberGuid, opt => opt.MapFrom(src => src.SubscriberGuid))
                .ForMember(dest => dest.SubscriberName, opt => opt.MapFrom(src => src.SubscriberName))
                .ForMember(dest => dest.SubscriberTimezone, opt => opt.MapFrom(src => src.SubscriberTimezone))
                .ForMember(dest => dest.InternetAccess, opt => opt.MapFrom(src => src.InternetAccess))
                ;

            CreateMap<SubscriberType, Common.SubscriberV4.SubscriberType>()
                .ForMember(dest => dest.Addresses, opt => opt.MapFrom(src => src.Addresses))
                .ForMember(dest => dest.BillingAccountNumber, opt => opt.MapFrom(src => src.BillingAccountNumber))
                .ForMember(dest => dest.BillingEnvironmentCode, opt => opt.MapFrom(src => src.BillingEnvironmentCode))
                .ForMember(dest => dest.BillingServiceAddress, opt => opt.MapFrom(src => src.BillingServiceAddress))
                .ForMember(dest => dest.DialByNameDigits, opt => opt.MapFrom(src => src.DialByNameDigits))
                .ForMember(dest => dest.ExtensionData, opt => opt.Ignore())
                .ForMember(dest => dest.InternetAccess, opt => opt.MapFrom(src => src.InternetAccess))
                .ForMember(dest => dest.LastUpdateTime, opt => opt.MapFrom(src => src.LastUpdate))
                .ForMember(dest => dest.LastUpdatedBy, opt => opt.MapFrom(src => src.LastUpdatedBy))
                .ForMember(dest => dest.Latitude, opt => opt.MapFrom(src => src.Latitude))
                .ForMember(dest => dest.Longitude, opt => opt.MapFrom(src => src.Longitude))
                .ForMember(dest => dest.ParentSubscriberId, opt => opt.MapFrom(src => src.ParentSubscriberId))
                .ForMember(dest => dest.PlacementType, opt => opt.MapFrom(src => src.PlacementType))
                .ForMember(dest => dest.ServiceInformation, opt => opt.MapFrom(src => src.ServiceInformation))
                .ForMember(dest => dest.SubscriberDefaultPhoneNumber, opt => opt.MapFrom(src => src.SubscriberDefaultPhoneNumber))
                .ForMember(dest => dest.SubscriberEmail, opt => opt.MapFrom(src => src.SubscriberEmail))
                .ForMember(dest => dest.SubscriberGuid, opt => opt.MapFrom(src => src.SubscriberGuid))
                .ForMember(dest => dest.SubscriberName, opt => opt.MapFrom(src => src.SubscriberName))
                .ForMember(dest => dest.SubscriberTimezone, opt => opt.MapFrom(src => src.SubscriberTimezone))
                .ForMember(dest => dest.InternetAccess, opt => opt.MapFrom(src => src.InternetAccess))
                .ForMember(dest => dest.PlacementType2, opt => opt.Ignore())
                .ForMember(dest => dest.Services, opt => opt.Ignore())
                ;
            CreateMap<SubscriberType, Common.IPTVServiceV3.SubscriberType>()
                .ForMember(dest => dest.Addresses, opt => opt.MapFrom(src => src.Addresses))
                .ForMember(dest => dest.BillingAccountNumber, opt => opt.MapFrom(src => src.BillingAccountNumber))
                .ForMember(dest => dest.BillingEnvironmentCode, opt => opt.MapFrom(src => src.BillingEnvironmentCode))
                .ForMember(dest => dest.BillingServiceAddress, opt => opt.MapFrom(src => src.BillingServiceAddress))
                .ForMember(dest => dest.DialByNameDigits, opt => opt.MapFrom(src => src.DialByNameDigits))
                .ForMember(dest => dest.ExtensionData, opt => opt.Ignore())
                .ForMember(dest => dest.InternetAccess, opt => opt.MapFrom(src => src.InternetAccess))
                .ForMember(dest => dest.LastUpdateTime, opt => opt.MapFrom(src => src.LastUpdate))
                .ForMember(dest => dest.LastUpdatedBy, opt => opt.MapFrom(src => src.LastUpdatedBy))
                .ForMember(dest => dest.Latitude, opt => opt.MapFrom(src => src.Latitude))
                .ForMember(dest => dest.Longitude, opt => opt.MapFrom(src => src.Longitude))
                .ForMember(dest => dest.ParentSubscriberId, opt => opt.MapFrom(src => src.ParentSubscriberId))
                .ForMember(dest => dest.PlacementType, opt => opt.MapFrom(src => src.PlacementType))
                .ForMember(dest => dest.ServiceInformation, opt => opt.MapFrom(src => src.ServiceInformation))
                .ForMember(dest => dest.SubscriberDefaultPhoneNumber, opt => opt.MapFrom(src => src.SubscriberDefaultPhoneNumber))
                .ForMember(dest => dest.SubscriberEmail, opt => opt.MapFrom(src => src.SubscriberEmail))
                .ForMember(dest => dest.SubscriberGuid, opt => opt.MapFrom(src => src.SubscriberGuid))
                .ForMember(dest => dest.SubscriberName, opt => opt.MapFrom(src => src.SubscriberName))
                .ForMember(dest => dest.SubscriberTimezone, opt => opt.MapFrom(src => src.SubscriberTimezone))
                .ForMember(dest => dest.InternetAccess, opt => opt.MapFrom(src => src.InternetAccess))
                .ForMember(dest => dest.PlacementType2, opt => opt.Ignore())
                .ForMember(dest => dest.Services, opt => opt.Ignore())
                ;

            CreateMap<SubscriberType, Common.IPTVServiceV7.SubscriberType>()
                .ForMember(dest => dest.Addresses, opt => opt.MapFrom(src => src.Addresses))
                .ForMember(dest => dest.BillingAccountNumber, opt => opt.MapFrom(src => src.BillingAccountNumber))
                .ForMember(dest => dest.BillingEnvironmentCode, opt => opt.MapFrom(src => src.BillingEnvironmentCode))
                .ForMember(dest => dest.BillingServiceAddress, opt => opt.MapFrom(src => src.BillingServiceAddress))
                .ForMember(dest => dest.DialByNameDigits, opt => opt.MapFrom(src => src.DialByNameDigits))
                .ForMember(dest => dest.ExtensionData, opt => opt.Ignore())
                .ForMember(dest => dest.InternetAccess, opt => opt.MapFrom(src => src.InternetAccess))
                .ForMember(dest => dest.LastUpdateTime, opt => opt.MapFrom(src => src.LastUpdate))
                .ForMember(dest => dest.LastUpdatedBy, opt => opt.MapFrom(src => src.LastUpdatedBy))
                .ForMember(dest => dest.Latitude, opt => opt.MapFrom(src => src.Latitude))
                .ForMember(dest => dest.Longitude, opt => opt.MapFrom(src => src.Longitude))
                .ForMember(dest => dest.ParentSubscriberId, opt => opt.MapFrom(src => src.ParentSubscriberId))
                .ForMember(dest => dest.PlacementType, opt => opt.MapFrom(src => src.PlacementType))
                .ForMember(dest => dest.ServiceInformation, opt => opt.MapFrom(src => src.ServiceInformation))
                .ForMember(dest => dest.SubscriberDefaultPhoneNumber, opt => opt.MapFrom(src => src.SubscriberDefaultPhoneNumber))
                .ForMember(dest => dest.SubscriberEmail, opt => opt.MapFrom(src => src.SubscriberEmail))
                .ForMember(dest => dest.SubscriberGuid, opt => opt.MapFrom(src => src.SubscriberGuid))
                .ForMember(dest => dest.SubscriberName, opt => opt.MapFrom(src => src.SubscriberName))
                .ForMember(dest => dest.SubscriberTimezone, opt => opt.MapFrom(src => src.SubscriberTimezone))
                .ForMember(dest => dest.InternetAccess, opt => opt.MapFrom(src => src.InternetAccess))
                .ForMember(dest => dest.PlacementType2, opt => opt.Ignore())
                .ForMember(dest => dest.Services, opt => opt.Ignore())
                ;

            CreateMap<Common.SubscriberV3.SubscriberType, SubscriberType>()
                //.ForMember(dest => dest.LastUpdate, opt => opt.MapFrom(src => Convert.ToDateTime(src.LastUpdateTime)))
                .ForMember(dest => dest.LastUpdate, opt => opt.Ignore())
                .ForMember(dest => dest.SubscriberTimezone, opt => opt.MapFrom(src => src.SubscriberTimezone))
                ;

            CreateMap<Common.SubscriberV4.SubscriberType, SubscriberType>()
                //.ForMember(dest => dest.LastUpdate, opt => opt.MapFrom(src => Convert.ToDateTime(src.LastUpdateTime)))
                .ForMember(dest => dest.LastUpdate, opt => opt.Ignore())
                .ForMember(dest => dest.SubscriberTimezone, opt => opt.MapFrom(src => src.SubscriberTimezone))
                ;
        }
    }
}